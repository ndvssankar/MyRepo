# vsim -do vsim.do -l verilog.log -c -suppress 4029 -novopt pex_tb 
# //  QuestaSim 6.3a Jun 25 2007 Linux 2.4.18-3smp
# //
# //  Copyright 1991-2007 Mentor Graphics Corporation
# //              All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND 
# //  PROPRIETARY INFORMATION WHICH IS THE PROPERTY
# //  OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS
# //  AND IS SUBJECT TO LICENSE TERMS.
# //
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pex_tb
# Loading work.pex_tb
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.PexRc
# Loading work.PexRc
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pcixp_rc
# Loading work.pcixp_rc
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pcixp_tl
# Loading work.pcixp_tl
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.tlrx
# Loading work.tlrx
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.sfMxN
# Loading work.sfMxN
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.xpmem
# Loading work.xpmem
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.tltx_arb
# Loading work.tltx_arb
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.tltx_top
# Loading work.tltx_top
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.tltx_bridge
# Loading work.tltx_bridge
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.tltx_router
# Loading work.tltx_router
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.tltx_tcm
# Loading work.tltx_tcm
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.tltx_tc
# Loading work.tltx_tc
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.tltx_vc2tcmap
# Loading work.tltx_vc2tcmap
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.tltx_fcm
# Loading work.tltx_fcm
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.tltx_fc
# Loading work.tltx_fc
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.tltx_assembler
# Loading work.tltx_assembler
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.lcrc32
# Loading work.lcrc32
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pcixp_dll
# Loading work.pcixp_dll
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.dltx_assembler
# Loading work.dltx_assembler
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.crc16
# Loading work.crc16
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.dltx_scheduler
# Loading work.dltx_scheduler
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.dltx_rty
# Loading work.dltx_rty
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.dltx_retire
# Loading work.dltx_retire
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.dltx_tlp
# Loading work.dltx_tlp
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.dltx_dllp
# Loading work.dltx_dllp
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.dltx_cntr
# Loading work.dltx_cntr
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.dlrx_tlp
# Loading work.dlrx_tlp
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.dlrx_dllp
# Loading work.dlrx_dllp
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.dlcmsm
# Loading work.dlcmsm
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.fcinit
# Loading work.fcinit
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pcixp_pl
# Loading work.pcixp_pl
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pl_ltssm
# Loading work.pl_ltssm
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pl_det_ssm
# Loading work.pl_det_ssm
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pl_pol_ssm
# Loading work.pl_pol_ssm
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pl_l1_ssm
# Loading work.pl_l1_ssm
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pl_l0s_ssm
# Loading work.pl_l0s_ssm
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pl_dsb_ssm
# Loading work.pl_dsb_ssm
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pl_lpbk_ssm
# Loading work.pl_lpbk_ssm
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pl_hrst_ssm
# Loading work.pl_hrst_ssm
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pl_cfg_ssm
# Loading work.pl_cfg_ssm
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pl_rec_ssm
# Loading work.pl_rec_ssm
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pl_framer
# Loading work.pl_framer
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pl_scrm
# Loading work.pl_scrm
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pl_descrm
# Loading work.pl_descrm
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pl_deframer
# Loading work.pl_deframer
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pl_data_deframer
# Loading work.pl_data_deframer
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pl_os_deframer
# Loading work.pl_os_deframer
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pi_cfg
# Loading work.pi_cfg
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pi_arbiter
# Loading work.pi_arbiter
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pipe8or16
# Loading work.pipe8or16
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.interface_monitor
# Loading work.interface_monitor
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pm_disp
# Loading work.pm_disp
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.mem_model
# Loading work.mem_model
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.PexEp
# Loading work.PexEp
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pcixp_ep
# Loading work.pcixp_ep
# Refreshing /home/chandra/pcixp/pcixp_rev1/VlogSim/run/work.pex_mem_agent
# Loading work.pex_mem_agent
# do vsim.do 
# resume
#  
# 
#  Time = @[60452] The value of din at Address = 5800  of reg_set ( EP -> RC ) = 00000001 
#  
# 
#  Time = @[60876] The value of din at Address = 5800  of reg_set ( RC -> EP ) = 00000001 
# 
# 		 EP Compliance Test TXN.2.2#6a 
#  
# 
# 
# 
# 
# 
# [60876] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0100000f hdw2: 12345000 
# 
# [60956] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 0 
# [60988] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 0 
# [60996] RC  Initializing rc_tx_pkt_len_array single index 0 => hlen 3 dlen 1 hlen+dlen 4
# [60996] RC  Loading RC Tx Mem  index 0 addr 0 hdw0 40000001 
# [60996] RC  Loading RC Tx Mem  index 0 addr 1 hdw1 100000f 
# [60996] RC  Loading RC Tx Mem  index 0 addr 2 hdw1 12345000 
# [60996] RC  Loading RC Tx Mem  index 0 addr 3 data 579 
# [61004] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0100000f hdw2: 12345000 
# 
# [61068] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 1 
# [61100] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 1 
# [61108] RC  Initializing rc_tx_pkt_len_array single index 1 => hlen 3 dlen 1 hlen+dlen 4
# [61108] RC  Loading RC Tx Mem  index 1 addr 4 hdw0 3000001 
# [61108] RC  Loading RC Tx Mem  index 1 addr 5 hdw1 100000f 
# [61108] RC  Loading RC Tx Mem  index 1 addr 6 hdw1 12345000 
# [61108] RC  Loading RC Tx Mem  index 1 addr 7 data fe5 
# [61116] Preparing the CPL  Packet Header hdw0: 0a000000 hdw1: 01002004 hdw2: 01000000 
# 
# [61116] EP  Initializing ep_tx_pkt_len_array single index 0 => hlen 3 dlen 0 hlen+dlen 3
# [61116] EP  Loading EP Tx Mem  index 0 addr 0 hdw0 a000000 
# [61116] EP  Loading EP Tx Mem  index 0 addr 1 hdw1 1002004 
# [61116] EP  Loading EP Tx Mem  index 0 addr 2 hdw1 1000000 
# [61124] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 0100000f hdw2: 12345000 
# 
# [61188] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 2 
# [61212] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 2 
# [61220] RC  Initializing rc_tx_pkt_len_array single index 2 => hlen 3 dlen 0 hlen+dlen 3
# [61220] RC  Loading RC Tx Mem  index 2 addr 8 hdw0 1 
# [61220] RC  Loading RC Tx Mem  index 2 addr 9 hdw1 100000f 
# [61220] RC  Loading RC Tx Mem  index 2 addr a hdw1 12345000 
# [61228] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 01000000 
# 
# [61228] EP  Initializing ep_tx_pkt_len_array single index 1 => hlen 3 dlen 1 hlen+dlen 4
# [61228] EP  Loading EP Tx Mem  index 1 addr 3 hdw0 4a000001 
# [61228] EP  Loading EP Tx Mem  index 1 addr 4 hdw1 1000004 
# [61228] EP  Loading EP Tx Mem  index 1 addr 5 hdw1 1000000 
# [61228] EP  Loading EP Tx Mem  index 1 addr 6 data 579 
# [61236] Preparing the CFG Packet Header hdw0: 04000001 hdw1: 0000000f hdw2: 01000004 
# 
# [61300] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 3 
# [61324] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 3 
# [61332] RC  Initializing rc_tx_pkt_len_array single index 3 => hlen 3 dlen 0 hlen+dlen 3
# [61332] RC  Loading RC Tx Mem  index 3 addr b hdw0 4000001 
# [61332] RC  Loading RC Tx Mem  index 3 addr c hdw1 f 
# [61332] RC  Loading RC Tx Mem  index 3 addr d hdw1 1000004 
# [61340] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [61340] EP  Initializing ep_tx_pkt_len_array single index 2 => hlen 3 dlen 1 hlen+dlen 4
# [61340] EP  Loading EP Tx Mem  index 2 addr 7 hdw0 4a000001 
# [61340] EP  Loading EP Tx Mem  index 2 addr 8 hdw1 1000004 
# [61340] EP  Loading EP Tx Mem  index 2 addr 9 hdw1 0 
# [61340] EP  Loading EP Tx Mem  index 2 addr a data 0 
# 
# 
# 
# 
# 
# [61348] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [61412] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 4 
# [61444] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 4 
# [61452] RC  Initializing rc_tx_pkt_len_array single index 4 => hlen 3 dlen 1 hlen+dlen 4
# [61452] RC  Loading RC Tx Mem  index 4 addr e hdw0 40000001 
# [61452] RC  Loading RC Tx Mem  index 4 addr f hdw1 f 
# [61452] RC  Loading RC Tx Mem  index 4 addr 10 hdw1 12345000 
# [61452] RC  Loading RC Tx Mem  index 4 addr 11 data 6f5 
# [61460] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [61524] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 5 
# [61556] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 5 
# [61564] RC  Initializing rc_tx_pkt_len_array single index 5 => hlen 3 dlen 1 hlen+dlen 4
# [61564] RC  Loading RC Tx Mem  index 5 addr 12 hdw0 9000001 
# [61564] RC  Loading RC Tx Mem  index 5 addr 13 hdw1 f 
# [61564] RC  Loading RC Tx Mem  index 5 addr 14 hdw1 12345000 
# [61564] RC  Loading RC Tx Mem  index 5 addr 15 data 77b 
# [61572] Preparing the CPL  Packet Header hdw0: 0a000000 hdw1: 01002004 hdw2: 00000000 
# 
# [61572] EP  Initializing ep_tx_pkt_len_array single index 3 => hlen 3 dlen 0 hlen+dlen 3
# [61572] EP  Loading EP Tx Mem  index 3 addr b hdw0 a000000 
# [61572] EP  Loading EP Tx Mem  index 3 addr c hdw1 1002004 
# [61572] EP  Loading EP Tx Mem  index 3 addr d hdw1 0 
# [61580] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 0000000f hdw2: 12345000 
# 
# [61644] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 6 
# [61668] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 6 
# [61676] RC  Initializing rc_tx_pkt_len_array single index 6 => hlen 3 dlen 0 hlen+dlen 3
# [61676] RC  Loading RC Tx Mem  index 6 addr 16 hdw0 1 
# [61676] RC  Loading RC Tx Mem  index 6 addr 17 hdw1 f 
# [61676] RC  Loading RC Tx Mem  index 6 addr 18 hdw1 12345000 
# [61684] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [61684] EP  Initializing ep_tx_pkt_len_array single index 4 => hlen 3 dlen 1 hlen+dlen 4
# [61684] EP  Loading EP Tx Mem  index 4 addr e hdw0 4a000001 
# [61684] EP  Loading EP Tx Mem  index 4 addr f hdw1 1000004 
# [61684] EP  Loading EP Tx Mem  index 4 addr 10 hdw1 0 
# [61684] EP  Loading EP Tx Mem  index 4 addr 11 data 6f5 
# [61692] Preparing the CFG Packet Header hdw0: 04000001 hdw1: 0000000f hdw2: 01000004 
# 
# [61756] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 7 
# [61780] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 7 
# [61784] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 0
# [61788] RC  Initializing rc_tx_pkt_len_array single index 7 => hlen 3 dlen 0 hlen+dlen 3
# [61788] RC  Loading RC Tx Mem  index 7 addr 19 hdw0 4000001 
# [61788] RC  Loading RC Tx Mem  index 7 addr 1a hdw1 f 
# [61788] RC  Loading RC Tx Mem  index 7 addr 1b hdw1 1000004 
# 61789: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x40000001 @Addr = 0x000
# [61796] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [61796] EP  Initializing ep_tx_pkt_len_array single index 5 => hlen 3 dlen 1 hlen+dlen 4
# [61796] EP  Loading EP Tx Mem  index 5 addr 12 hdw0 4a000001 
# [61796] EP  Loading EP Tx Mem  index 5 addr 13 hdw1 1000004 
# [61796] EP  Loading EP Tx Mem  index 5 addr 14 hdw1 0 
# [61796] EP  Loading EP Tx Mem  index 5 addr 15 data 0 
# 61797: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0100000f @Addr = 0x001
# 
# 
# 
# 
# 
# [61804] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# 61805: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x002
# [61808] EP  RECEIVE PKT END  ep_rx_pkt_index 0
# 61813: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000579 @Addr = 0x003
# [61816] INFO:  RC -> EP Packet 0 Data Compare Start! EP MEM SADR : 00000000 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# [61816] RC -> EP Packet 00000000 Data Compare passed! 
# 
# PKT_DIFF (EP) : Matched = 1, Passed = 1
# [61868] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 8 
# [61900] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 8 
# [61908] RC  Initializing rc_tx_pkt_len_array single index 8 => hlen 3 dlen 1 hlen+dlen 4
# [61908] RC  Loading RC Tx Mem  index 8 addr 1c hdw0 40000001 
# [61908] RC  Loading RC Tx Mem  index 8 addr 1d hdw1 f 
# [61908] RC  Loading RC Tx Mem  index 8 addr 1e hdw1 12345000 
# [61908] RC  Loading RC Tx Mem  index 8 addr 1f data a50 
# [61916] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [61980] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 9 
# [62012] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 9 
# [62020] RC  Initializing rc_tx_pkt_len_array single index 9 => hlen 3 dlen 1 hlen+dlen 4
# [62020] RC  Loading RC Tx Mem  index 9 addr 20 hdw0 c000001 
# [62020] RC  Loading RC Tx Mem  index 9 addr 21 hdw1 f 
# [62020] RC  Loading RC Tx Mem  index 9 addr 22 hdw1 12345000 
# [62020] RC  Loading RC Tx Mem  index 9 addr 23 data 879 
# [62028] Preparing the CPL  Packet Header hdw0: 0a000000 hdw1: 01002004 hdw2: 00000000 
# 
# [62028] EP  Initializing ep_tx_pkt_len_array single index 6 => hlen 3 dlen 0 hlen+dlen 3
# [62028] EP  Loading EP Tx Mem  index 6 addr 16 hdw0 a000000 
# [62028] EP  Loading EP Tx Mem  index 6 addr 17 hdw1 1002004 
# [62028] EP  Loading EP Tx Mem  index 6 addr 18 hdw1 0 
# [62036] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 0000000f hdw2: 12345000 
# 
# [62100] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index a 
# [62124] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index a 
# [62132] RC  Initializing rc_tx_pkt_len_array single index a => hlen 3 dlen 0 hlen+dlen 3
# [62132] RC  Loading RC Tx Mem  index a addr 24 hdw0 1 
# [62132] RC  Loading RC Tx Mem  index a addr 25 hdw1 f 
# [62132] RC  Loading RC Tx Mem  index a addr 26 hdw1 12345000 
# [62140] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [62140] EP  Initializing ep_tx_pkt_len_array single index 7 => hlen 3 dlen 1 hlen+dlen 4
# [62140] EP  Loading EP Tx Mem  index 7 addr 19 hdw0 4a000001 
# [62140] EP  Loading EP Tx Mem  index 7 addr 1a hdw1 1000004 
# [62140] EP  Loading EP Tx Mem  index 7 addr 1b hdw1 0 
# [62140] EP  Loading EP Tx Mem  index 7 addr 1c data a50 
# [62148] Preparing the CFG Packet Header hdw0: 04000001 hdw1: 0000000f hdw2: 01000004 
# 
# [62212] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index b 
# [62236] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index b 
# [62244] RC  Initializing rc_tx_pkt_len_array single index b => hlen 3 dlen 0 hlen+dlen 3
# [62244] RC  Loading RC Tx Mem  index b addr 27 hdw0 4000001 
# [62244] RC  Loading RC Tx Mem  index b addr 28 hdw1 f 
# [62244] RC  Loading RC Tx Mem  index b addr 29 hdw1 1000004 
# [62252] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [62252] EP  Initializing ep_tx_pkt_len_array single index 8 => hlen 3 dlen 1 hlen+dlen 4
# [62252] EP  Loading EP Tx Mem  index 8 addr 1d hdw0 4a000001 
# [62252] EP  Loading EP Tx Mem  index 8 addr 1e hdw1 1000004 
# [62252] EP  Loading EP Tx Mem  index 8 addr 1f hdw1 0 
# [62252] EP  Loading EP Tx Mem  index 8 addr 20 data 0 
# 
# 
# 
# 
# 
# [62260] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [62324] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index c 
# [62356] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index c 
# [62364] RC  Initializing rc_tx_pkt_len_array single index c => hlen 3 dlen 1 hlen+dlen 4
# [62364] RC  Loading RC Tx Mem  index c addr 2a hdw0 40000001 
# [62364] RC  Loading RC Tx Mem  index c addr 2b hdw1 f 
# [62364] RC  Loading RC Tx Mem  index c addr 2c hdw1 12345000 
# [62364] RC  Loading RC Tx Mem  index c addr 2d data 5e4 
# [62372] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [62436] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index d 
# [62468] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index d 
# [62476] RC  Initializing rc_tx_pkt_len_array single index d => hlen 3 dlen 1 hlen+dlen 4
# [62476] RC  Loading RC Tx Mem  index d addr 2e hdw0 d000001 
# [62476] RC  Loading RC Tx Mem  index d addr 2f hdw1 f 
# [62476] RC  Loading RC Tx Mem  index d addr 30 hdw1 12345000 
# [62476] RC  Loading RC Tx Mem  index d addr 31 data 32c 
# [62484] Preparing the CPL  Packet Header hdw0: 0a000000 hdw1: 01002004 hdw2: 00000000 
# 
# [62484] EP  Initializing ep_tx_pkt_len_array single index 9 => hlen 3 dlen 0 hlen+dlen 3
# [62484] EP  Loading EP Tx Mem  index 9 addr 21 hdw0 a000000 
# [62484] EP  Loading EP Tx Mem  index 9 addr 22 hdw1 1002004 
# [62484] EP  Loading EP Tx Mem  index 9 addr 23 hdw1 0 
# [62492] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 0000000f hdw2: 12345000 
# 
# [62556] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index e 
# [62580] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index e 
# [62588] RC  Initializing rc_tx_pkt_len_array single index e => hlen 3 dlen 0 hlen+dlen 3
# [62588] RC  Loading RC Tx Mem  index e addr 32 hdw0 1 
# [62588] RC  Loading RC Tx Mem  index e addr 33 hdw1 f 
# [62588] RC  Loading RC Tx Mem  index e addr 34 hdw1 12345000 
# [62596] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [62596] EP  Initializing ep_tx_pkt_len_array single index a => hlen 3 dlen 1 hlen+dlen 4
# [62596] EP  Loading EP Tx Mem  index a addr 24 hdw0 4a000001 
# [62596] EP  Loading EP Tx Mem  index a addr 25 hdw1 1000004 
# [62596] EP  Loading EP Tx Mem  index a addr 26 hdw1 0 
# [62596] EP  Loading EP Tx Mem  index a addr 27 data 5e4 
# [62604] Preparing the CFG Packet Header hdw0: 04000001 hdw1: 0000000f hdw2: 01000004 
# 
# [62668] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index f 
# [62688] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 1
# [62692] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index f 
# 62693: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x40000001 @Addr = 0x004
# [62700] RC  Initializing rc_tx_pkt_len_array single index f => hlen 3 dlen 0 hlen+dlen 3
# [62700] RC  Loading RC Tx Mem  index f addr 35 hdw0 4000001 
# [62700] RC  Loading RC Tx Mem  index f addr 36 hdw1 f 
# [62700] RC  Loading RC Tx Mem  index f addr 37 hdw1 1000004 
# 62701: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x005
# [62708] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [62708] EP  Initializing ep_tx_pkt_len_array single index b => hlen 3 dlen 1 hlen+dlen 4
# [62708] EP  Loading EP Tx Mem  index b addr 28 hdw0 4a000001 
# [62708] EP  Loading EP Tx Mem  index b addr 29 hdw1 1000004 
# [62708] EP  Loading EP Tx Mem  index b addr 2a hdw1 0 
# [62708] EP  Loading EP Tx Mem  index b addr 2b data 0 
# 62709: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x006
# [62712] EP  RECEIVE PKT END  ep_rx_pkt_index 1
# 
# 
# 
# 
# 
# [62716] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# 62717: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x000006f5 @Addr = 0x007
# [62720] INFO:  RC -> EP Packet 1 Data Compare Start! EP MEM SADR : 00000004 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 1
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 1
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 1
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# [62720] RC -> EP Packet 00000001 Data Compare passed! 
# 
# PKT_DIFF (EP) : Matched = 1, Passed = 1
# [62780] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 10 
# [62812] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 10 
# [62820] RC  Initializing rc_tx_pkt_len_array single index 10 => hlen 3 dlen 1 hlen+dlen 4
# [62820] RC  Loading RC Tx Mem  index 10 addr 38 hdw0 40000001 
# [62820] RC  Loading RC Tx Mem  index 10 addr 39 hdw1 f 
# [62820] RC  Loading RC Tx Mem  index 10 addr 3a hdw1 12345000 
# [62820] RC  Loading RC Tx Mem  index 10 addr 3b data 2e3 
# [62828] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [62892] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 11 
# [62924] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 11 
# [62932] RC  Initializing rc_tx_pkt_len_array single index 11 => hlen 3 dlen 1 hlen+dlen 4
# [62932] RC  Loading RC Tx Mem  index 11 addr 3c hdw0 e000001 
# [62932] RC  Loading RC Tx Mem  index 11 addr 3d hdw1 f 
# [62932] RC  Loading RC Tx Mem  index 11 addr 3e hdw1 12345000 
# [62932] RC  Loading RC Tx Mem  index 11 addr 3f data c24 
# [62940] Preparing the CPL  Packet Header hdw0: 0a000000 hdw1: 01002004 hdw2: 00000000 
# 
# [62940] EP  Initializing ep_tx_pkt_len_array single index c => hlen 3 dlen 0 hlen+dlen 3
# [62940] EP  Loading EP Tx Mem  index c addr 2c hdw0 a000000 
# [62940] EP  Loading EP Tx Mem  index c addr 2d hdw1 1002004 
# [62940] EP  Loading EP Tx Mem  index c addr 2e hdw1 0 
# [62948] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 0000000f hdw2: 12345000 
# 
# [63592] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 2
# 63597: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x40000001 @Addr = 0x008
# 63605: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x009
# 63613: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x00a
# [63616] EP  RECEIVE PKT END  ep_rx_pkt_index 2
# 63621: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000a50 @Addr = 0x00b
# [63624] INFO:  RC -> EP Packet 2 Data Compare Start! EP MEM SADR : 00000008 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 1
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 1
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 1
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 1
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 1
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 1
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# [63624] RC -> EP Packet 00000002 Data Compare passed! 
# 
# PKT_DIFF (EP) : Matched = 1, Passed = 1
# [64496] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 3
# 64501: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x40000001 @Addr = 0x00c
# 64509: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x00d
# 64517: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x00e
# [64520] EP  RECEIVE PKT END  ep_rx_pkt_index 3
# 64525: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x000005e4 @Addr = 0x00f
# [64528] INFO:  RC -> EP Packet 3 Data Compare Start! EP MEM SADR : 0000000c EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 1
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 1
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 1
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 1
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 1
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 1
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 1
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 1
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 1
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# [64528] RC -> EP Packet 00000003 Data Compare passed! 
# 
# PKT_DIFF (EP) : Matched = 1, Passed = 1
# [65084] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 12 
# [65108] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 12 
# [65116] RC  Initializing rc_tx_pkt_len_array single index 12 => hlen 3 dlen 0 hlen+dlen 3
# [65116] RC  Loading RC Tx Mem  index 12 addr 40 hdw0 1 
# [65116] RC  Loading RC Tx Mem  index 12 addr 41 hdw1 f 
# [65116] RC  Loading RC Tx Mem  index 12 addr 42 hdw1 12345000 
# [65124] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [65124] EP  Initializing ep_tx_pkt_len_array single index d => hlen 3 dlen 1 hlen+dlen 4
# [65124] EP  Loading EP Tx Mem  index d addr 2f hdw0 4a000001 
# [65124] EP  Loading EP Tx Mem  index d addr 30 hdw1 1000004 
# [65124] EP  Loading EP Tx Mem  index d addr 31 hdw1 0 
# [65124] EP  Loading EP Tx Mem  index d addr 32 data 2e3 
# [65132] Preparing the CFG Packet Header hdw0: 04000001 hdw1: 0000000f hdw2: 01000004 
# 
# [65996] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 13 
# [66020] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 13 
# [66028] RC  Initializing rc_tx_pkt_len_array single index 13 => hlen 3 dlen 0 hlen+dlen 3
# [66028] RC  Loading RC Tx Mem  index 13 addr 43 hdw0 4000001 
# [66028] RC  Loading RC Tx Mem  index 13 addr 44 hdw1 f 
# [66028] RC  Loading RC Tx Mem  index 13 addr 45 hdw1 1000004 
# [66036] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [66036] EP  Initializing ep_tx_pkt_len_array single index e => hlen 3 dlen 1 hlen+dlen 4
# [66036] EP  Loading EP Tx Mem  index e addr 33 hdw0 4a000001 
# [66036] EP  Loading EP Tx Mem  index e addr 34 hdw1 1000004 
# [66036] EP  Loading EP Tx Mem  index e addr 35 hdw1 0 
# [66036] EP  Loading EP Tx Mem  index e addr 36 data 0 
# 
# 
# 
# 
# 
# [66044] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [66844] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 14 
# [66876] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 14 
# [66884] RC  Initializing rc_tx_pkt_len_array single index 14 => hlen 3 dlen 1 hlen+dlen 4
# [66884] RC  Loading RC Tx Mem  index 14 addr 46 hdw0 40000001 
# [66884] RC  Loading RC Tx Mem  index 14 addr 47 hdw1 f 
# [66884] RC  Loading RC Tx Mem  index 14 addr 48 hdw1 12345000 
# [66884] RC  Loading RC Tx Mem  index 14 addr 49 data 1f6 
# [66892] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [66956] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 15 
# [66988] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 15 
# [66996] RC  Initializing rc_tx_pkt_len_array single index 15 => hlen 3 dlen 1 hlen+dlen 4
# [66996] RC  Loading RC Tx Mem  index 15 addr 4a hdw0 f000001 
# [66996] RC  Loading RC Tx Mem  index 15 addr 4b hdw1 f 
# [66996] RC  Loading RC Tx Mem  index 15 addr 4c hdw1 12345000 
# [66996] RC  Loading RC Tx Mem  index 15 addr 4d data d89 
# [67004] Preparing the CPL  Packet Header hdw0: 0a000000 hdw1: 01002004 hdw2: 00000000 
# 
# [67004] EP  Initializing ep_tx_pkt_len_array single index f => hlen 3 dlen 0 hlen+dlen 3
# [67004] EP  Loading EP Tx Mem  index f addr 37 hdw0 a000000 
# [67004] EP  Loading EP Tx Mem  index f addr 38 hdw1 1002004 
# [67004] EP  Loading EP Tx Mem  index f addr 39 hdw1 0 
# [67012] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 0000000f hdw2: 12345000 
# 
# [67952] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 4
# 67957: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x03000001 @Addr = 0x010
# 67965: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0100000f @Addr = 0x011
# [67968] EP  RECEIVE PKT END  ep_rx_pkt_index 4
# 67973: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x012
# [67976] INFO:  RC -> EP Packet 4 Data Compare Start! EP MEM SADR : 00000010 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 03000001, Exp = 03000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 03000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 03000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0100000f, Exp = 0000000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 03000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0100000f, Exp = 0000000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 03000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0100000f, Exp = 0000000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 03000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0100000f, Exp = 0000000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 03000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0100000f, Exp = 0000000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 03000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0100000f, Exp = 0000000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 03000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0100000f, Exp = 0000000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 03000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0100000f, Exp = 0000000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 03000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0100000f, Exp = 0000000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 03000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0100000f, Exp = 0000000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 03000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0100000f, Exp = 0000000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 03000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0100000f, Exp = 0000000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 03000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0100000f, Exp = 0000000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 03000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0100000f, Exp = 0000000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 03000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0100000f, Exp = 0000000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 03000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0100000f, Exp = 0000000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [67976] ERROR:  EP Received Packet 4 Not MATCHED.  
# 
# [67976] INFO:  EP Packet 4 MEM SADR : 00000010 PKTLEN 00000003 
# 
# [67976] EP Packet Length 3 
# 
# [67976] EP Packet Header[0] = 3000001 
# 
# [67976] EP Packet Header[1] = 100000f 
# 
# [67976] EP Packet Header[2] = 12345000 
# 
# [68128] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 5
# 68133: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000001 @Addr = 0x013
# 68141: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0100000f @Addr = 0x014
# [68144] EP  RECEIVE PKT END  ep_rx_pkt_index 5
# 68149: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x015
# [68152] INFO:  RC -> EP Packet 5 Data Compare Start! EP MEM SADR : 00000013 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [68336] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 6
# 68341: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x04000001 @Addr = 0x016
# 68349: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x017
# [68352] EP  RECEIVE PKT END  ep_rx_pkt_index 6
# 68357: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000004 @Addr = 0x018
# [68360] INFO:  RC -> EP Packet 6 Data Compare Start! EP MEM SADR : 00000016 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 04000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [68660] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 16 
# [68684] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 16 
# [68692] RC  Initializing rc_tx_pkt_len_array single index 16 => hlen 3 dlen 0 hlen+dlen 3
# [68692] RC  Loading RC Tx Mem  index 16 addr 4e hdw0 1 
# [68692] RC  Loading RC Tx Mem  index 16 addr 4f hdw1 f 
# [68692] RC  Loading RC Tx Mem  index 16 addr 50 hdw1 12345000 
# [68700] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [68700] EP  Initializing ep_tx_pkt_len_array single index 10 => hlen 3 dlen 1 hlen+dlen 4
# [68700] EP  Loading EP Tx Mem  index 10 addr 3a hdw0 4a000001 
# [68700] EP  Loading EP Tx Mem  index 10 addr 3b hdw1 1000004 
# [68700] EP  Loading EP Tx Mem  index 10 addr 3c hdw1 0 
# [68700] EP  Loading EP Tx Mem  index 10 addr 3d data 1f6 
# [68708] Preparing the CFG Packet Header hdw0: 04000001 hdw1: 0000000f hdw2: 01000004 
# 
# [69272] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 0
# 69277: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x000
# 69285: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x001
# 69293: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x002
# [69296] RC  RECEIVE PKT END  rc_rx_pkt_index 0
# 69301: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x000005e4 @Addr = 0x003
# [69304] INFO:  EP -> RC Packet 0 Data Compare Start! RC MEM SADR : 00000000 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [69572] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 17 
# [69596] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 17 
# [69604] RC  Initializing rc_tx_pkt_len_array single index 17 => hlen 3 dlen 0 hlen+dlen 3
# [69604] RC  Loading RC Tx Mem  index 17 addr 51 hdw0 4000001 
# [69604] RC  Loading RC Tx Mem  index 17 addr 52 hdw1 f 
# [69604] RC  Loading RC Tx Mem  index 17 addr 53 hdw1 1000004 
# [69612] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [69612] EP  Initializing ep_tx_pkt_len_array single index 11 => hlen 3 dlen 1 hlen+dlen 4
# [69612] EP  Loading EP Tx Mem  index 11 addr 3e hdw0 4a000001 
# [69612] EP  Loading EP Tx Mem  index 11 addr 3f hdw1 1000004 
# [69612] EP  Loading EP Tx Mem  index 11 addr 40 hdw1 0 
# [69612] EP  Loading EP Tx Mem  index 11 addr 41 data 0 
# 
# 
# 
# 
# 
# [69620] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [70176] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 1
# 70181: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x004
# 70189: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x005
# 70197: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x006
# [70200] RC  RECEIVE PKT END  rc_rx_pkt_index 1
# 70205: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00100000 @Addr = 0x007
# [70208] INFO:  EP -> RC Packet 1 Data Compare Start! RC MEM SADR : 00000004 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [70484] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 18 
# [70516] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 18 
# [70524] RC  Initializing rc_tx_pkt_len_array single index 18 => hlen 3 dlen 1 hlen+dlen 4
# [70524] RC  Loading RC Tx Mem  index 18 addr 54 hdw0 40000001 
# [70524] RC  Loading RC Tx Mem  index 18 addr 55 hdw1 f 
# [70524] RC  Loading RC Tx Mem  index 18 addr 56 hdw1 12345000 
# [70524] RC  Loading RC Tx Mem  index 18 addr 57 data 6f7 
# [70532] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [70596] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 19 
# [70628] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 19 
# [70636] RC  Initializing rc_tx_pkt_len_array single index 19 => hlen 3 dlen 1 hlen+dlen 4
# [70636] RC  Loading RC Tx Mem  index 19 addr 58 hdw0 43000001 
# [70636] RC  Loading RC Tx Mem  index 19 addr 59 hdw1 f 
# [70636] RC  Loading RC Tx Mem  index 19 addr 5a hdw1 12345000 
# [70636] RC  Loading RC Tx Mem  index 19 addr 5b data 669 
# [70644] Preparing the CPL  Packet Header hdw0: 0a000000 hdw1: 01002004 hdw2: 00000000 
# 
# [70644] EP  Initializing ep_tx_pkt_len_array single index 12 => hlen 3 dlen 0 hlen+dlen 3
# [70644] EP  Loading EP Tx Mem  index 12 addr 42 hdw0 a000000 
# [70644] EP  Loading EP Tx Mem  index 12 addr 43 hdw1 1002004 
# [70644] EP  Loading EP Tx Mem  index 12 addr 44 hdw1 0 
# [70652] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 0000000f hdw2: 12345000 
# 
# [72260] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 1a 
# [72284] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 1a 
# [72292] RC  Initializing rc_tx_pkt_len_array single index 1a => hlen 3 dlen 0 hlen+dlen 3
# [72292] RC  Loading RC Tx Mem  index 1a addr 5c hdw0 1 
# [72292] RC  Loading RC Tx Mem  index 1a addr 5d hdw1 f 
# [72292] RC  Loading RC Tx Mem  index 1a addr 5e hdw1 12345000 
# [72300] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [72300] EP  Initializing ep_tx_pkt_len_array single index 13 => hlen 3 dlen 1 hlen+dlen 4
# [72300] EP  Loading EP Tx Mem  index 13 addr 45 hdw0 4a000001 
# [72300] EP  Loading EP Tx Mem  index 13 addr 46 hdw1 1000004 
# [72300] EP  Loading EP Tx Mem  index 13 addr 47 hdw1 0 
# [72300] EP  Loading EP Tx Mem  index 13 addr 48 data 6f7 
# [72308] Preparing the CFG Packet Header hdw0: 04000001 hdw1: 0000000f hdw2: 01000004 
# 
# [72480] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 7
# 72485: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x40000001 @Addr = 0x019
# 72493: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x01a
# 72501: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x01b
# [72504] EP  RECEIVE PKT END  ep_rx_pkt_index 7
# 72509: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x000002e3 @Addr = 0x01c
# [72512] INFO:  RC -> EP Packet 7 Data Compare Start! EP MEM SADR : 00000019 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [72736] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 8
# 72741: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x09000001 @Addr = 0x01d
# 72749: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x01e
# [72752] EP  RECEIVE PKT END  ep_rx_pkt_index 8
# 72757: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x01f
# [72760] INFO:  RC -> EP Packet 0 Data Compare Start! EP MEM SADR : 0000001d EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 09000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 09000001, Exp = 09000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 09000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 09000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 09000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 09000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 09000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 09000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 09000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 09000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 09000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 09000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 09000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 09000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 09000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 09000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 09000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 09000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 09000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 09000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [72760] ERROR:  EP Received Packet 8 Not MATCHED.  
# 
# [72760] INFO:  EP Packet 8 MEM SADR : 0000001d PKTLEN 00000003 
# 
# [72760] EP Packet Length 3 
# 
# [72760] EP Packet Header[0] = 9000001 
# 
# [72760] EP Packet Header[1] = f 
# 
# [72760] EP Packet Header[2] = 12345000 
# 
# [73024] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 9
# 73029: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000001 @Addr = 0x020
# 73037: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x021
# [73040] EP  RECEIVE PKT END  ep_rx_pkt_index 9
# 73045: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x022
# [73048] INFO:  RC -> EP Packet 1 Data Compare Start! EP MEM SADR : 00000020 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [73172] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 1b 
# [73196] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 1b 
# [73204] RC  Initializing rc_tx_pkt_len_array single index 1b => hlen 3 dlen 0 hlen+dlen 3
# [73204] RC  Loading RC Tx Mem  index 1b addr 5f hdw0 4000001 
# [73204] RC  Loading RC Tx Mem  index 1b addr 60 hdw1 f 
# [73204] RC  Loading RC Tx Mem  index 1b addr 61 hdw1 1000004 
# [73212] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [73212] EP  Initializing ep_tx_pkt_len_array single index 14 => hlen 3 dlen 1 hlen+dlen 4
# [73212] EP  Loading EP Tx Mem  index 14 addr 49 hdw0 4a000001 
# [73212] EP  Loading EP Tx Mem  index 14 addr 4a hdw1 1000004 
# [73212] EP  Loading EP Tx Mem  index 14 addr 4b hdw1 0 
# [73212] EP  Loading EP Tx Mem  index 14 addr 4c data 0 
# 
# 
# 
# 
# 
# [73220] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [73576] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 2
# 73581: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x008
# 73589: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x009
# 73597: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x00a
# [73600] RC  RECEIVE PKT END  rc_rx_pkt_index 2
# 73605: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x000002e3 @Addr = 0x00b
# [73608] INFO:  EP -> RC Packet 2 Data Compare Start! RC MEM SADR : 00000008 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [74084] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 1c 
# [74116] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 1c 
# [74124] RC  Initializing rc_tx_pkt_len_array single index 1c => hlen 3 dlen 1 hlen+dlen 4
# [74124] RC  Loading RC Tx Mem  index 1c addr 62 hdw0 40000001 
# [74124] RC  Loading RC Tx Mem  index 1c addr 63 hdw1 f 
# [74124] RC  Loading RC Tx Mem  index 1c addr 64 hdw1 12345000 
# [74124] RC  Loading RC Tx Mem  index 1c addr 65 data 880 
# [74132] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [74196] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 1d 
# [74228] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 1d 
# [74236] RC  Initializing rc_tx_pkt_len_array single index 1d => hlen 3 dlen 1 hlen+dlen 4
# [74236] RC  Loading RC Tx Mem  index 1d addr 66 hdw0 49000001 
# [74236] RC  Loading RC Tx Mem  index 1d addr 67 hdw1 f 
# [74236] RC  Loading RC Tx Mem  index 1d addr 68 hdw1 12345000 
# [74236] RC  Loading RC Tx Mem  index 1d addr 69 data 52b 
# [74244] Preparing the CPL  Packet Header hdw0: 0a000000 hdw1: 01002004 hdw2: 00000000 
# 
# [74244] EP  Initializing ep_tx_pkt_len_array single index 15 => hlen 3 dlen 0 hlen+dlen 3
# [74244] EP  Loading EP Tx Mem  index 15 addr 4d hdw0 a000000 
# [74244] EP  Loading EP Tx Mem  index 15 addr 4e hdw1 1002004 
# [74244] EP  Loading EP Tx Mem  index 15 addr 4f hdw1 0 
# [74252] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 0000000f hdw2: 12345000 
# 
# [74480] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 3
# 74485: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x00c
# 74493: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x00d
# 74501: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x00e
# [74504] RC  RECEIVE PKT END  rc_rx_pkt_index 3
# 74509: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00100000 @Addr = 0x00f
# [74512] INFO:  EP -> RC Packet 3 Data Compare Start! RC MEM SADR : 0000000c RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [75860] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 1e 
# [75884] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 1e 
# [75892] RC  Initializing rc_tx_pkt_len_array single index 1e => hlen 3 dlen 0 hlen+dlen 3
# [75892] RC  Loading RC Tx Mem  index 1e addr 6a hdw0 1 
# [75892] RC  Loading RC Tx Mem  index 1e addr 6b hdw1 f 
# [75892] RC  Loading RC Tx Mem  index 1e addr 6c hdw1 12345000 
# [75900] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [75900] EP  Initializing ep_tx_pkt_len_array single index 16 => hlen 3 dlen 1 hlen+dlen 4
# [75900] EP  Loading EP Tx Mem  index 16 addr 50 hdw0 4a000001 
# [75900] EP  Loading EP Tx Mem  index 16 addr 51 hdw1 1000004 
# [75900] EP  Loading EP Tx Mem  index 16 addr 52 hdw1 0 
# [75900] EP  Loading EP Tx Mem  index 16 addr 53 data 880 
# [75908] Preparing the CFG Packet Header hdw0: 04000001 hdw1: 0000000f hdw2: 01000004 
# 
# [76772] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 1f 
# [76784] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index a
# 76789: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x04000001 @Addr = 0x023
# [76796] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 1f 
# 76797: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x024
# [76800] EP  RECEIVE PKT END  ep_rx_pkt_index a
# [76804] RC  Initializing rc_tx_pkt_len_array single index 1f => hlen 3 dlen 0 hlen+dlen 3
# [76804] RC  Loading RC Tx Mem  index 1f addr 6d hdw0 4000001 
# [76804] RC  Loading RC Tx Mem  index 1f addr 6e hdw1 f 
# [76804] RC  Loading RC Tx Mem  index 1f addr 6f hdw1 1000004 
# 76805: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000004 @Addr = 0x025
# [76808] INFO:  RC -> EP Packet 2 Data Compare Start! EP MEM SADR : 00000023 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 04000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [76812] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [76812] EP  Initializing ep_tx_pkt_len_array single index 17 => hlen 3 dlen 1 hlen+dlen 4
# [76812] EP  Loading EP Tx Mem  index 17 addr 54 hdw0 4a000001 
# [76812] EP  Loading EP Tx Mem  index 17 addr 55 hdw1 1000004 
# [76812] EP  Loading EP Tx Mem  index 17 addr 56 hdw1 0 
# [76812] EP  Loading EP Tx Mem  index 17 addr 57 data 0 
# 
# 
# 
# 
# 
# [76820] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [77040] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index b
# 77045: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x40000001 @Addr = 0x026
# 77053: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x027
# 77061: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x028
# [77064] EP  RECEIVE PKT END  ep_rx_pkt_index b
# 77069: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x000001f6 @Addr = 0x029
# [77072] INFO:  RC -> EP Packet 3 Data Compare Start! EP MEM SADR : 00000026 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [77328] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index c
# 77333: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0c000001 @Addr = 0x02a
# 77341: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x02b
# [77344] EP  RECEIVE PKT END  ep_rx_pkt_index c
# 77349: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x02c
# [77352] INFO:  RC -> EP Packet 4 Data Compare Start! EP MEM SADR : 0000002a EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0c000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0c000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0c000001, Exp = 0c000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0c000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0c000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0c000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0c000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0c000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0c000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0c000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0c000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0c000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0c000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0c000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0c000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0c000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0c000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0c000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0c000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0c000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0c000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0c000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [77352] ERROR:  EP Received Packet c Not MATCHED.  
# 
# [77352] INFO:  EP Packet c MEM SADR : 0000002a PKTLEN 00000003 
# 
# [77352] EP Packet Length 3 
# 
# [77352] EP Packet Header[0] = c000001 
# 
# [77352] EP Packet Header[1] = f 
# 
# [77352] EP Packet Header[2] = 12345000 
# 
# [77620] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 20 
# [77652] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 20 
# [77660] RC  Initializing rc_tx_pkt_len_array single index 20 => hlen 3 dlen 1 hlen+dlen 4
# [77660] RC  Loading RC Tx Mem  index 20 addr 70 hdw0 40000001 
# [77660] RC  Loading RC Tx Mem  index 20 addr 71 hdw1 f 
# [77660] RC  Loading RC Tx Mem  index 20 addr 72 hdw1 12345000 
# [77660] RC  Loading RC Tx Mem  index 20 addr 73 data 5d9 
# [77668] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [77732] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 21 
# [77764] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 21 
# [77772] RC  Initializing rc_tx_pkt_len_array single index 21 => hlen 3 dlen 1 hlen+dlen 4
# [77772] RC  Loading RC Tx Mem  index 21 addr 74 hdw0 4c000001 
# [77772] RC  Loading RC Tx Mem  index 21 addr 75 hdw1 f 
# [77772] RC  Loading RC Tx Mem  index 21 addr 76 hdw1 12345000 
# [77772] RC  Loading RC Tx Mem  index 21 addr 77 data 361 
# [77780] Preparing the CPL  Packet Header hdw0: 0a000000 hdw1: 01002004 hdw2: 00000000 
# 
# [77780] EP  Initializing ep_tx_pkt_len_array single index 18 => hlen 3 dlen 0 hlen+dlen 3
# [77780] EP  Loading EP Tx Mem  index 18 addr 58 hdw0 a000000 
# [77780] EP  Loading EP Tx Mem  index 18 addr 59 hdw1 1002004 
# [77780] EP  Loading EP Tx Mem  index 18 addr 5a hdw1 0 
# [77788] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 0000000f hdw2: 12345000 
# 
# [77880] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 4
# 77885: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x010
# 77893: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x011
# 77901: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x012
# [77904] RC  RECEIVE PKT END  rc_rx_pkt_index 4
# 77909: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x000001f6 @Addr = 0x013
# [77912] INFO:  EP -> RC Packet 4 Data Compare Start! RC MEM SADR : 00000010 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [78784] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 5
# 78789: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x014
# 78797: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x015
# 78805: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x016
# [78808] RC  RECEIVE PKT END  rc_rx_pkt_index 5
# 78813: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00100000 @Addr = 0x017
# [78816] INFO:  EP -> RC Packet 5 Data Compare Start! RC MEM SADR : 00000014 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [79436] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 22 
# [79460] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 22 
# [79468] RC  Initializing rc_tx_pkt_len_array single index 22 => hlen 3 dlen 0 hlen+dlen 3
# [79468] RC  Loading RC Tx Mem  index 22 addr 78 hdw0 1 
# [79468] RC  Loading RC Tx Mem  index 22 addr 79 hdw1 f 
# [79468] RC  Loading RC Tx Mem  index 22 addr 7a hdw1 12345000 
# [79476] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [79476] EP  Initializing ep_tx_pkt_len_array single index 19 => hlen 3 dlen 1 hlen+dlen 4
# [79476] EP  Loading EP Tx Mem  index 19 addr 5b hdw0 4a000001 
# [79476] EP  Loading EP Tx Mem  index 19 addr 5c hdw1 1000004 
# [79476] EP  Loading EP Tx Mem  index 19 addr 5d hdw1 0 
# [79476] EP  Loading EP Tx Mem  index 19 addr 5e data 5d9 
# [79484] Preparing the CFG Packet Header hdw0: 04000001 hdw1: 0000000f hdw2: 01000004 
# 
# [80860] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 23 
# [80884] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 23 
# [80892] RC  Initializing rc_tx_pkt_len_array single index 23 => hlen 3 dlen 0 hlen+dlen 3
# [80892] RC  Loading RC Tx Mem  index 23 addr 7b hdw0 4000001 
# [80892] RC  Loading RC Tx Mem  index 23 addr 7c hdw1 f 
# [80892] RC  Loading RC Tx Mem  index 23 addr 7d hdw1 1000004 
# [80900] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [80900] EP  Initializing ep_tx_pkt_len_array single index 1a => hlen 3 dlen 1 hlen+dlen 4
# [80900] EP  Loading EP Tx Mem  index 1a addr 5f hdw0 4a000001 
# [80900] EP  Loading EP Tx Mem  index 1a addr 60 hdw1 1000004 
# [80900] EP  Loading EP Tx Mem  index 1a addr 61 hdw1 0 
# [80900] EP  Loading EP Tx Mem  index 1a addr 62 data 0 
# 
# 
# 
# 
# 
# [80908] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [81088] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index d
# 81093: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000001 @Addr = 0x02d
# 81101: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x02e
# [81104] EP  RECEIVE PKT END  ep_rx_pkt_index d
# 81109: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x02f
# [81112] INFO:  RC -> EP Packet 5 Data Compare Start! EP MEM SADR : 0000002d EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [81344] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index e
# 81349: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x04000001 @Addr = 0x030
# 81357: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x031
# [81360] EP  RECEIVE PKT END  ep_rx_pkt_index e
# 81365: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000004 @Addr = 0x032
# [81368] INFO:  RC -> EP Packet 6 Data Compare Start! EP MEM SADR : 00000030 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 04000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [81632] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index f
# 81637: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x40000001 @Addr = 0x033
# 81645: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x034
# 81653: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x035
# [81656] EP  RECEIVE PKT END  ep_rx_pkt_index f
# 81661: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x000006f7 @Addr = 0x036
# [81664] INFO:  RC -> EP Packet 7 Data Compare Start! EP MEM SADR : 00000033 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [81772] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 24 
# [81804] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 24 
# [81812] RC  Initializing rc_tx_pkt_len_array single index 24 => hlen 3 dlen 1 hlen+dlen 4
# [81812] RC  Loading RC Tx Mem  index 24 addr 7e hdw0 40000001 
# [81812] RC  Loading RC Tx Mem  index 24 addr 7f hdw1 f 
# [81812] RC  Loading RC Tx Mem  index 24 addr 80 hdw1 12345000 
# [81812] RC  Loading RC Tx Mem  index 24 addr 81 data 78f 
# [81820] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [81884] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 25 
# [81916] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 25 
# [81924] RC  Initializing rc_tx_pkt_len_array single index 25 => hlen 3 dlen 1 hlen+dlen 4
# [81924] RC  Loading RC Tx Mem  index 25 addr 82 hdw0 4d000001 
# [81924] RC  Loading RC Tx Mem  index 25 addr 83 hdw1 f 
# [81924] RC  Loading RC Tx Mem  index 25 addr 84 hdw1 12345000 
# [81924] RC  Loading RC Tx Mem  index 25 addr 85 data 315 
# [81932] Preparing the CPL  Packet Header hdw0: 0a000000 hdw1: 01002004 hdw2: 00000000 
# 
# [81932] EP  Initializing ep_tx_pkt_len_array single index 1b => hlen 3 dlen 0 hlen+dlen 3
# [81932] EP  Loading EP Tx Mem  index 1b addr 63 hdw0 a000000 
# [81932] EP  Loading EP Tx Mem  index 1b addr 64 hdw1 1002004 
# [81932] EP  Loading EP Tx Mem  index 1b addr 65 hdw1 0 
# [81940] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 0000000f hdw2: 12345000 
# 
# [82184] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 6
# 82189: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x018
# 82197: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x019
# 82205: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x01a
# [82208] RC  RECEIVE PKT END  rc_rx_pkt_index 6
# 82213: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x000006f7 @Addr = 0x01b
# [82216] INFO:  EP -> RC Packet 6 Data Compare Start! RC MEM SADR : 00000018 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [83088] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 7
# 83093: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x01c
# 83101: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x01d
# 83109: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x01e
# [83112] RC  RECEIVE PKT END  rc_rx_pkt_index 7
# 83117: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00100000 @Addr = 0x01f
# [83120] INFO:  EP -> RC Packet 7 Data Compare Start! RC MEM SADR : 0000001c RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [83548] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 26 
# [83572] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 26 
# [83580] RC  Initializing rc_tx_pkt_len_array single index 26 => hlen 3 dlen 0 hlen+dlen 3
# [83580] RC  Loading RC Tx Mem  index 26 addr 86 hdw0 1 
# [83580] RC  Loading RC Tx Mem  index 26 addr 87 hdw1 f 
# [83580] RC  Loading RC Tx Mem  index 26 addr 88 hdw1 12345000 
# [83588] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [83588] EP  Initializing ep_tx_pkt_len_array single index 1c => hlen 3 dlen 1 hlen+dlen 4
# [83588] EP  Loading EP Tx Mem  index 1c addr 66 hdw0 4a000001 
# [83588] EP  Loading EP Tx Mem  index 1c addr 67 hdw1 1000004 
# [83588] EP  Loading EP Tx Mem  index 1c addr 68 hdw1 0 
# [83588] EP  Loading EP Tx Mem  index 1c addr 69 data 78f 
# [83596] Preparing the CFG Packet Header hdw0: 04000001 hdw1: 0000000f hdw2: 01000004 
# 
# [85164] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 27 
# [85188] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 27 
# [85196] RC  Initializing rc_tx_pkt_len_array single index 27 => hlen 3 dlen 0 hlen+dlen 3
# [85196] RC  Loading RC Tx Mem  index 27 addr 89 hdw0 4000001 
# [85196] RC  Loading RC Tx Mem  index 27 addr 8a hdw1 f 
# [85196] RC  Loading RC Tx Mem  index 27 addr 8b hdw1 1000004 
# [85204] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [85204] EP  Initializing ep_tx_pkt_len_array single index 1d => hlen 3 dlen 1 hlen+dlen 4
# [85204] EP  Loading EP Tx Mem  index 1d addr 6a hdw0 4a000001 
# [85204] EP  Loading EP Tx Mem  index 1d addr 6b hdw1 1000004 
# [85204] EP  Loading EP Tx Mem  index 1d addr 6c hdw1 0 
# [85204] EP  Loading EP Tx Mem  index 1d addr 6d data 0 
# 
# 
# 
# 
# 
# [85212] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [85392] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 10
# 85397: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0d000001 @Addr = 0x037
# 85405: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x038
# [85408] EP  RECEIVE PKT END  ep_rx_pkt_index 10
# 85413: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x039
# [85416] INFO:  RC -> EP Packet 0 Data Compare Start! EP MEM SADR : 00000037 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 0d000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 4c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 4d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0d000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [85416] ERROR:  EP Received Packet 10 Not MATCHED.  
# 
# [85416] INFO:  EP Packet 10 MEM SADR : 00000037 PKTLEN 00000003 
# 
# [85416] EP Packet Length 3 
# 
# [85416] EP Packet Header[0] = d000001 
# 
# [85416] EP Packet Header[1] = f 
# 
# [85416] EP Packet Header[2] = 12345000 
# 
# [85648] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 11
# 85653: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000001 @Addr = 0x03a
# 85661: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x03b
# [85664] EP  RECEIVE PKT END  ep_rx_pkt_index 11
# 85669: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x03c
# [85672] INFO:  RC -> EP Packet 1 Data Compare Start! EP MEM SADR : 0000003a EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [85936] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 12
# 85941: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x04000001 @Addr = 0x03d
# 85949: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x03e
# [85952] EP  RECEIVE PKT END  ep_rx_pkt_index 12
# 85957: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000004 @Addr = 0x03f
# [85960] INFO:  RC -> EP Packet 2 Data Compare Start! EP MEM SADR : 0000003d EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 04000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [86076] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 28 
# [86108] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 28 
# [86116] RC  Initializing rc_tx_pkt_len_array single index 28 => hlen 3 dlen 1 hlen+dlen 4
# [86116] RC  Loading RC Tx Mem  index 28 addr 8c hdw0 40000001 
# [86116] RC  Loading RC Tx Mem  index 28 addr 8d hdw1 f 
# [86116] RC  Loading RC Tx Mem  index 28 addr 8e hdw1 12345000 
# [86116] RC  Loading RC Tx Mem  index 28 addr 8f data 7e9 
# [86124] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [86188] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 29 
# [86220] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 29 
# [86228] RC  Initializing rc_tx_pkt_len_array single index 29 => hlen 3 dlen 1 hlen+dlen 4
# [86228] RC  Loading RC Tx Mem  index 29 addr 90 hdw0 4e000001 
# [86228] RC  Loading RC Tx Mem  index 29 addr 91 hdw1 f 
# [86228] RC  Loading RC Tx Mem  index 29 addr 92 hdw1 12345000 
# [86228] RC  Loading RC Tx Mem  index 29 addr 93 data a2c 
# [86236] Preparing the CPL  Packet Header hdw0: 0a000000 hdw1: 01002004 hdw2: 00000000 
# 
# [86236] EP  Initializing ep_tx_pkt_len_array single index 1e => hlen 3 dlen 0 hlen+dlen 3
# [86236] EP  Loading EP Tx Mem  index 1e addr 6e hdw0 a000000 
# [86236] EP  Loading EP Tx Mem  index 1e addr 6f hdw1 1002004 
# [86236] EP  Loading EP Tx Mem  index 1e addr 70 hdw1 0 
# [86244] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 0000000f hdw2: 12345000 
# 
# [86488] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 8
# 86493: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x020
# 86501: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x021
# 86509: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x022
# [86512] RC  RECEIVE PKT END  rc_rx_pkt_index 8
# 86517: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000880 @Addr = 0x023
# [86520] INFO:  EP -> RC Packet 0 Data Compare Start! RC MEM SADR : 00000020 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[2] => Rx = 00000000, Exp = 01000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [87392] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 9
# 87397: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x024
# 87405: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x025
# 87413: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x026
# [87416] RC  RECEIVE PKT END  rc_rx_pkt_index 9
# 87421: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00100000 @Addr = 0x027
# [87424] INFO:  EP -> RC Packet 1 Data Compare Start! RC MEM SADR : 00000024 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [87852] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 2a 
# [87876] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 2a 
# [87884] RC  Initializing rc_tx_pkt_len_array single index 2a => hlen 3 dlen 0 hlen+dlen 3
# [87884] RC  Loading RC Tx Mem  index 2a addr 94 hdw0 1 
# [87884] RC  Loading RC Tx Mem  index 2a addr 95 hdw1 f 
# [87884] RC  Loading RC Tx Mem  index 2a addr 96 hdw1 12345000 
# [87892] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [87892] EP  Initializing ep_tx_pkt_len_array single index 1f => hlen 3 dlen 1 hlen+dlen 4
# [87892] EP  Loading EP Tx Mem  index 1f addr 71 hdw0 4a000001 
# [87892] EP  Loading EP Tx Mem  index 1f addr 72 hdw1 1000004 
# [87892] EP  Loading EP Tx Mem  index 1f addr 73 hdw1 0 
# [87892] EP  Loading EP Tx Mem  index 1f addr 74 data 7e9 
# [87900] Preparing the CFG Packet Header hdw0: 04000001 hdw1: 0000000f hdw2: 01000004 
# 
# [92028] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 2b 
# [92052] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 2b 
# [92060] RC  Initializing rc_tx_pkt_len_array single index 2b => hlen 3 dlen 0 hlen+dlen 3
# [92060] RC  Loading RC Tx Mem  index 2b addr 97 hdw0 4000001 
# [92060] RC  Loading RC Tx Mem  index 2b addr 98 hdw1 f 
# [92060] RC  Loading RC Tx Mem  index 2b addr 99 hdw1 1000004 
# [92068] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [92068] EP  Initializing ep_tx_pkt_len_array single index 20 => hlen 3 dlen 1 hlen+dlen 4
# [92068] EP  Loading EP Tx Mem  index 20 addr 75 hdw0 4a000001 
# [92068] EP  Loading EP Tx Mem  index 20 addr 76 hdw1 1000004 
# [92068] EP  Loading EP Tx Mem  index 20 addr 77 hdw1 0 
# [92068] EP  Loading EP Tx Mem  index 20 addr 78 data 0 
# 
# 
# 
# 
# 
# [92076] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [92256] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 13
# 92261: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x40000001 @Addr = 0x040
# 92269: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x041
# 92277: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x042
# [92280] EP  RECEIVE PKT END  ep_rx_pkt_index 13
# 92285: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000880 @Addr = 0x043
# [92288] INFO:  RC -> EP Packet 3 Data Compare Start! EP MEM SADR : 00000040 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [92432] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 14
# 92437: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0e000001 @Addr = 0x044
# 92445: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x045
# [92448] EP  RECEIVE PKT END  ep_rx_pkt_index 14
# 92453: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x046
# [92456] INFO:  RC -> EP Packet 4 Data Compare Start! EP MEM SADR : 00000044 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 0e000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 01000004
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 01000004
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 01000004
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 01000004
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 4c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 01000004
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 4d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 01000004
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 4e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0e000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 01000004
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [92456] ERROR:  EP Received Packet 14 Not MATCHED.  
# 
# [92456] INFO:  EP Packet 14 MEM SADR : 00000044 PKTLEN 00000003 
# 
# [92456] EP Packet Length 3 
# 
# [92456] EP Packet Header[0] = e000001 
# 
# [92456] EP Packet Header[1] = f 
# 
# [92456] EP Packet Header[2] = 12345000 
# 
# [92640] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 15
# 92645: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000001 @Addr = 0x047
# 92653: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x048
# [92656] EP  RECEIVE PKT END  ep_rx_pkt_index 15
# 92661: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x049
# [92664] INFO:  RC -> EP Packet 5 Data Compare Start! EP MEM SADR : 00000047 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [92940] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 2c 
# [92972] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 2c 
# [92980] RC  Initializing rc_tx_pkt_len_array single index 2c => hlen 3 dlen 1 hlen+dlen 4
# [92980] RC  Loading RC Tx Mem  index 2c addr 9a hdw0 40000001 
# [92980] RC  Loading RC Tx Mem  index 2c addr 9b hdw1 f 
# [92980] RC  Loading RC Tx Mem  index 2c addr 9c hdw1 12345000 
# [92980] RC  Loading RC Tx Mem  index 2c addr 9d data 975 
# [92988] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [93052] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 2d 
# [93084] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 2d 
# [93092] RC  Initializing rc_tx_pkt_len_array single index 2d => hlen 3 dlen 1 hlen+dlen 4
# [93092] RC  Loading RC Tx Mem  index 2d addr 9e hdw0 4f000001 
# [93092] RC  Loading RC Tx Mem  index 2d addr 9f hdw1 f 
# [93092] RC  Loading RC Tx Mem  index 2d addr a0 hdw1 12345000 
# [93092] RC  Loading RC Tx Mem  index 2d addr a1 data 67c 
# [93100] Preparing the CPL  Packet Header hdw0: 0a000000 hdw1: 01002004 hdw2: 00000000 
# 
# [93100] EP  Initializing ep_tx_pkt_len_array single index 21 => hlen 3 dlen 0 hlen+dlen 3
# [93100] EP  Loading EP Tx Mem  index 21 addr 79 hdw0 a000000 
# [93100] EP  Loading EP Tx Mem  index 21 addr 7a hdw1 1002004 
# [93100] EP  Loading EP Tx Mem  index 21 addr 7b hdw1 0 
# [93108] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 0000000f hdw2: 12345000 
# 
# [93288] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index a
# 93293: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x028
# 93301: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x029
# 93309: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x02a
# [93312] RC  RECEIVE PKT END  rc_rx_pkt_index a
# 93317: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x000005d9 @Addr = 0x02b
# [93320] INFO:  EP -> RC Packet 2 Data Compare Start! RC MEM SADR : 00000028 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [94192] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index b
# 94197: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x02c
# 94205: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x02d
# 94213: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x02e
# [94216] RC  RECEIVE PKT END  rc_rx_pkt_index b
# 94221: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00100000 @Addr = 0x02f
# [94224] INFO:  EP -> RC Packet 3 Data Compare Start! RC MEM SADR : 0000002c RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [94716] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 2e 
# [94740] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 2e 
# [94748] RC  Initializing rc_tx_pkt_len_array single index 2e => hlen 3 dlen 0 hlen+dlen 3
# [94748] RC  Loading RC Tx Mem  index 2e addr a2 hdw0 1 
# [94748] RC  Loading RC Tx Mem  index 2e addr a3 hdw1 f 
# [94748] RC  Loading RC Tx Mem  index 2e addr a4 hdw1 12345000 
# [94756] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [94756] EP  Initializing ep_tx_pkt_len_array single index 22 => hlen 3 dlen 1 hlen+dlen 4
# [94756] EP  Loading EP Tx Mem  index 22 addr 7c hdw0 4a000001 
# [94756] EP  Loading EP Tx Mem  index 22 addr 7d hdw1 1000004 
# [94756] EP  Loading EP Tx Mem  index 22 addr 7e hdw1 0 
# [94756] EP  Loading EP Tx Mem  index 22 addr 7f data 975 
# [94764] Preparing the CFG Packet Header hdw0: 04000001 hdw1: 0000000f hdw2: 01000004 
# 
# [96268] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 2f 
# [96292] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 2f 
# [96300] RC  Initializing rc_tx_pkt_len_array single index 2f => hlen 3 dlen 0 hlen+dlen 3
# [96300] RC  Loading RC Tx Mem  index 2f addr a5 hdw0 4000001 
# [96300] RC  Loading RC Tx Mem  index 2f addr a6 hdw1 f 
# [96300] RC  Loading RC Tx Mem  index 2f addr a7 hdw1 1000004 
# [96308] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [96308] EP  Initializing ep_tx_pkt_len_array single index 23 => hlen 3 dlen 1 hlen+dlen 4
# [96308] EP  Loading EP Tx Mem  index 23 addr 80 hdw0 4a000001 
# [96308] EP  Loading EP Tx Mem  index 23 addr 81 hdw1 1000004 
# [96308] EP  Loading EP Tx Mem  index 23 addr 82 hdw1 0 
# [96308] EP  Loading EP Tx Mem  index 23 addr 83 data 0 
# 
# 
# 
# 
# 
# [96316] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [96504] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 16
# 96509: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x04000001 @Addr = 0x04a
# 96517: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x04b
# [96520] EP  RECEIVE PKT END  ep_rx_pkt_index 16
# 96525: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000004 @Addr = 0x04c
# [96528] INFO:  RC -> EP Packet 6 Data Compare Start! EP MEM SADR : 0000004a EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 04000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [96760] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 17
# 96765: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x40000001 @Addr = 0x04d
# 96773: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x04e
# 96781: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x04f
# [96784] EP  RECEIVE PKT END  ep_rx_pkt_index 17
# 96789: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x000005d9 @Addr = 0x050
# [96792] INFO:  RC -> EP Packet 7 Data Compare Start! EP MEM SADR : 0000004d EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [97048] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 18
# 97053: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0f000001 @Addr = 0x051
# 97061: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x052
# [97064] EP  RECEIVE PKT END  ep_rx_pkt_index 18
# 97069: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x053
# [97072] INFO:  RC -> EP Packet 0 Data Compare Start! EP MEM SADR : 00000051 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 0f000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 4c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 4d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 4e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 4f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0f000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [97072] ERROR:  EP Received Packet 18 Not MATCHED.  
# 
# [97072] INFO:  EP Packet 18 MEM SADR : 00000051 PKTLEN 00000003 
# 
# [97072] EP Packet Length 3 
# 
# [97072] EP Packet Header[0] = f000001 
# 
# [97072] EP Packet Header[1] = f 
# 
# [97072] EP Packet Header[2] = 12345000 
# 
# [97180] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 30 
# [97212] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 30 
# [97220] RC  Initializing rc_tx_pkt_len_array single index 30 => hlen 3 dlen 1 hlen+dlen 4
# [97220] RC  Loading RC Tx Mem  index 30 addr a8 hdw0 40000001 
# [97220] RC  Loading RC Tx Mem  index 30 addr a9 hdw1 f 
# [97220] RC  Loading RC Tx Mem  index 30 addr aa hdw1 12345000 
# [97220] RC  Loading RC Tx Mem  index 30 addr ab data b93 
# [97228] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [97292] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 31 
# [97324] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 31 
# [97332] RC  Initializing rc_tx_pkt_len_array single index 31 => hlen 3 dlen 1 hlen+dlen 4
# [97332] RC  Loading RC Tx Mem  index 31 addr ac hdw0 30000001 
# [97332] RC  Loading RC Tx Mem  index 31 addr ad hdw1 f 
# [97332] RC  Loading RC Tx Mem  index 31 addr ae hdw1 12345000 
# [97332] RC  Loading RC Tx Mem  index 31 addr af data ecb 
# [97340] Preparing the CPL  Packet Header hdw0: 0a000000 hdw1: 01002004 hdw2: 00000000 
# 
# [97340] EP  Initializing ep_tx_pkt_len_array single index 24 => hlen 3 dlen 0 hlen+dlen 3
# [97340] EP  Loading EP Tx Mem  index 24 addr 84 hdw0 a000000 
# [97340] EP  Loading EP Tx Mem  index 24 addr 85 hdw1 1002004 
# [97340] EP  Loading EP Tx Mem  index 24 addr 86 hdw1 0 
# [97348] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 0000000f hdw2: 12345000 
# 
# [97592] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index c
# 97597: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x030
# 97605: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x031
# 97613: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x032
# [97616] RC  RECEIVE PKT END  rc_rx_pkt_index c
# 97621: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0000078f @Addr = 0x033
# [97624] INFO:  EP -> RC Packet 4 Data Compare Start! RC MEM SADR : 00000030 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [98496] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index d
# 98501: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x034
# 98509: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x035
# 98517: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x036
# [98520] RC  RECEIVE PKT END  rc_rx_pkt_index d
# 98525: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00100000 @Addr = 0x037
# [98528] INFO:  EP -> RC Packet 5 Data Compare Start! RC MEM SADR : 00000034 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [98956] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 32 
# [98980] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 32 
# [98988] RC  Initializing rc_tx_pkt_len_array single index 32 => hlen 3 dlen 0 hlen+dlen 3
# [98988] RC  Loading RC Tx Mem  index 32 addr b0 hdw0 1 
# [98988] RC  Loading RC Tx Mem  index 32 addr b1 hdw1 f 
# [98988] RC  Loading RC Tx Mem  index 32 addr b2 hdw1 12345000 
# [98996] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [98996] EP  Initializing ep_tx_pkt_len_array single index 25 => hlen 3 dlen 1 hlen+dlen 4
# [98996] EP  Loading EP Tx Mem  index 25 addr 87 hdw0 4a000001 
# [98996] EP  Loading EP Tx Mem  index 25 addr 88 hdw1 1000004 
# [98996] EP  Loading EP Tx Mem  index 25 addr 89 hdw1 0 
# [98996] EP  Loading EP Tx Mem  index 25 addr 8a data b93 
# [99004] Preparing the CFG Packet Header hdw0: 04000001 hdw1: 0000000f hdw2: 01000004 
# 
# [100572] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 33 
# [100596] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 33 
# [100604] RC  Initializing rc_tx_pkt_len_array single index 33 => hlen 3 dlen 0 hlen+dlen 3
# [100604] RC  Loading RC Tx Mem  index 33 addr b3 hdw0 4000001 
# [100604] RC  Loading RC Tx Mem  index 33 addr b4 hdw1 f 
# [100604] RC  Loading RC Tx Mem  index 33 addr b5 hdw1 1000004 
# [100612] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [100612] EP  Initializing ep_tx_pkt_len_array single index 26 => hlen 3 dlen 1 hlen+dlen 4
# [100612] EP  Loading EP Tx Mem  index 26 addr 8b hdw0 4a000001 
# [100612] EP  Loading EP Tx Mem  index 26 addr 8c hdw1 1000004 
# [100612] EP  Loading EP Tx Mem  index 26 addr 8d hdw1 0 
# [100612] EP  Loading EP Tx Mem  index 26 addr 8e data 0 
# 
# 
# 
# 
# 
# [100620] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [100800] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 19
# 100805: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000001 @Addr = 0x054
# 100813: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x055
# [100816] EP  RECEIVE PKT END  ep_rx_pkt_index 19
# 100821: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x056
# [100824] INFO:  RC -> EP Packet 1 Data Compare Start! EP MEM SADR : 00000054 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [101056] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 1a
# 101061: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x04000001 @Addr = 0x057
# 101069: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x058
# [101072] EP  RECEIVE PKT END  ep_rx_pkt_index 1a
# 101077: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000004 @Addr = 0x059
# [101080] INFO:  RC -> EP Packet 2 Data Compare Start! EP MEM SADR : 00000057 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 04000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [101344] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 1b
# 101349: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x40000001 @Addr = 0x05a
# 101357: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x05b
# 101365: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x05c
# [101368] EP  RECEIVE PKT END  ep_rx_pkt_index 1b
# 101373: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000078f @Addr = 0x05d
# [101376] INFO:  RC -> EP Packet 3 Data Compare Start! EP MEM SADR : 0000005a EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 4c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [101484] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 34 
# [101516] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 34 
# [101524] RC  Initializing rc_tx_pkt_len_array single index 34 => hlen 3 dlen 1 hlen+dlen 4
# [101524] RC  Loading RC Tx Mem  index 34 addr b6 hdw0 40000001 
# [101524] RC  Loading RC Tx Mem  index 34 addr b7 hdw1 f 
# [101524] RC  Loading RC Tx Mem  index 34 addr b8 hdw1 12345000 
# [101524] RC  Loading RC Tx Mem  index 34 addr b9 data 886 
# [101532] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [101596] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 35 
# [101628] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 35 
# [101636] RC  Initializing rc_tx_pkt_len_array single index 35 => hlen 3 dlen 1 hlen+dlen 4
# [101636] RC  Loading RC Tx Mem  index 35 addr ba hdw0 31000001 
# [101636] RC  Loading RC Tx Mem  index 35 addr bb hdw1 f 
# [101636] RC  Loading RC Tx Mem  index 35 addr bc hdw1 12345000 
# [101636] RC  Loading RC Tx Mem  index 35 addr bd data 88a 
# [101644] Preparing the CPL  Packet Header hdw0: 0a000000 hdw1: 01002004 hdw2: 00000000 
# 
# [101644] EP  Initializing ep_tx_pkt_len_array single index 27 => hlen 3 dlen 0 hlen+dlen 3
# [101644] EP  Loading EP Tx Mem  index 27 addr 8f hdw0 a000000 
# [101644] EP  Loading EP Tx Mem  index 27 addr 90 hdw1 1002004 
# [101644] EP  Loading EP Tx Mem  index 27 addr 91 hdw1 0 
# [101652] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 0000000f hdw2: 12345000 
# 
# [101716] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 36 
# [101740] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 36 
# [101748] RC  Initializing rc_tx_pkt_len_array single index 36 => hlen 3 dlen 0 hlen+dlen 3
# [101748] RC  Loading RC Tx Mem  index 36 addr be hdw0 1 
# [101748] RC  Loading RC Tx Mem  index 36 addr bf hdw1 f 
# [101748] RC  Loading RC Tx Mem  index 36 addr c0 hdw1 12345000 
# [101756] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [101756] EP  Initializing ep_tx_pkt_len_array single index 28 => hlen 3 dlen 1 hlen+dlen 4
# [101756] EP  Loading EP Tx Mem  index 28 addr 92 hdw0 4a000001 
# [101756] EP  Loading EP Tx Mem  index 28 addr 93 hdw1 1000004 
# [101756] EP  Loading EP Tx Mem  index 28 addr 94 hdw1 0 
# [101756] EP  Loading EP Tx Mem  index 28 addr 95 data 886 
# [101764] Preparing the CFG Packet Header hdw0: 04000001 hdw1: 0000000f hdw2: 01000004 
# 
# [101896] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index e
# 101901: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x038
# 101909: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x039
# 101917: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x03a
# [101920] RC  RECEIVE PKT END  rc_rx_pkt_index e
# 101925: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x000007e9 @Addr = 0x03b
# [101928] INFO:  EP -> RC Packet 6 Data Compare Start! RC MEM SADR : 00000038 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [102800] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index f
# 102805: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x03c
# 102813: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x03d
# 102821: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x03e
# [102824] RC  RECEIVE PKT END  rc_rx_pkt_index f
# 102829: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00100000 @Addr = 0x03f
# [102832] INFO:  EP -> RC Packet 7 Data Compare Start! RC MEM SADR : 0000003c RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [104876] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 37 
# [104900] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 37 
# [104908] RC  Initializing rc_tx_pkt_len_array single index 37 => hlen 3 dlen 0 hlen+dlen 3
# [104908] RC  Loading RC Tx Mem  index 37 addr c1 hdw0 4000001 
# [104908] RC  Loading RC Tx Mem  index 37 addr c2 hdw1 f 
# [104908] RC  Loading RC Tx Mem  index 37 addr c3 hdw1 1000004 
# [104916] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [104916] EP  Initializing ep_tx_pkt_len_array single index 29 => hlen 3 dlen 1 hlen+dlen 4
# [104916] EP  Loading EP Tx Mem  index 29 addr 96 hdw0 4a000001 
# [104916] EP  Loading EP Tx Mem  index 29 addr 97 hdw1 1000004 
# [104916] EP  Loading EP Tx Mem  index 29 addr 98 hdw1 0 
# [104916] EP  Loading EP Tx Mem  index 29 addr 99 data 0 
# 
# 
# 
# 
# 
# [104924] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [105096] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 1c
# 105101: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x43000001 @Addr = 0x05e
# 105109: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x05f
# [105112] EP  RECEIVE PKT END  ep_rx_pkt_index 1c
# 105117: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x060
# [105120] INFO:  RC -> EP Packet 4 Data Compare Start! EP MEM SADR : 0000005e EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 43000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 4c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 4d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 4e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 4f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 30000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 31000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 43000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [105120] ERROR:  EP Received Packet 1c Not MATCHED.  
# 
# [105120] INFO:  EP Packet 1c MEM SADR : 0000005e PKTLEN 00000003 
# 
# [105120] EP Packet Length 3 
# 
# [105120] EP Packet Header[0] = 43000001 
# 
# [105120] EP Packet Header[1] = f 
# 
# [105120] EP Packet Header[2] = 12345000 
# 
# [105352] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 1d
# 105357: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000001 @Addr = 0x061
# 105365: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x062
# [105368] EP  RECEIVE PKT END  ep_rx_pkt_index 1d
# 105373: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x063
# [105376] INFO:  RC -> EP Packet 5 Data Compare Start! EP MEM SADR : 00000061 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [105640] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 1e
# 105645: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x04000001 @Addr = 0x064
# 105653: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x065
# [105656] EP  RECEIVE PKT END  ep_rx_pkt_index 1e
# 105661: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000004 @Addr = 0x066
# [105664] INFO:  RC -> EP Packet 6 Data Compare Start! EP MEM SADR : 00000064 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 04000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [105788] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 38 
# [105820] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 38 
# [105828] RC  Initializing rc_tx_pkt_len_array single index 38 => hlen 3 dlen 1 hlen+dlen 4
# [105828] RC  Loading RC Tx Mem  index 38 addr c4 hdw0 40000001 
# [105828] RC  Loading RC Tx Mem  index 38 addr c5 hdw1 f 
# [105828] RC  Loading RC Tx Mem  index 38 addr c6 hdw1 12345000 
# [105828] RC  Loading RC Tx Mem  index 38 addr c7 data 897 
# [105836] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0000000f hdw2: 12345000 
# 
# [105900] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 39 
# [105932] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 39 
# [105940] RC  Initializing rc_tx_pkt_len_array single index 39 => hlen 3 dlen 1 hlen+dlen 4
# [105940] RC  Loading RC Tx Mem  index 39 addr c8 hdw0 32000001 
# [105940] RC  Loading RC Tx Mem  index 39 addr c9 hdw1 f 
# [105940] RC  Loading RC Tx Mem  index 39 addr ca hdw1 12345000 
# [105940] RC  Loading RC Tx Mem  index 39 addr cb data 64f 
# [105948] Preparing the CPL  Packet Header hdw0: 0a000000 hdw1: 01002004 hdw2: 00000000 
# 
# [105948] EP  Initializing ep_tx_pkt_len_array single index 2a => hlen 3 dlen 0 hlen+dlen 3
# [105948] EP  Loading EP Tx Mem  index 2a addr 9a hdw0 a000000 
# [105948] EP  Loading EP Tx Mem  index 2a addr 9b hdw1 1002004 
# [105948] EP  Loading EP Tx Mem  index 2a addr 9c hdw1 0 
# [105956] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 0000000f hdw2: 12345000 
# 
# [106020] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 3a 
# [106044] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 3a 
# [106052] RC  Initializing rc_tx_pkt_len_array single index 3a => hlen 3 dlen 0 hlen+dlen 3
# [106052] RC  Loading RC Tx Mem  index 3a addr cc hdw0 1 
# [106052] RC  Loading RC Tx Mem  index 3a addr cd hdw1 f 
# [106052] RC  Loading RC Tx Mem  index 3a addr ce hdw1 12345000 
# [106060] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [106060] EP  Initializing ep_tx_pkt_len_array single index 2b => hlen 3 dlen 1 hlen+dlen 4
# [106060] EP  Loading EP Tx Mem  index 2b addr 9d hdw0 4a000001 
# [106060] EP  Loading EP Tx Mem  index 2b addr 9e hdw1 1000004 
# [106060] EP  Loading EP Tx Mem  index 2b addr 9f hdw1 0 
# [106060] EP  Loading EP Tx Mem  index 2b addr a0 data 897 
# [106068] Preparing the CFG Packet Header hdw0: 04000001 hdw1: 0000000f hdw2: 01000004 
# 
# [106200] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 10
# 106205: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x040
# 106213: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x041
# 106221: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x042
# [106224] RC  RECEIVE PKT END  rc_rx_pkt_index 10
# 106229: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000975 @Addr = 0x043
# [106232] INFO:  EP -> RC Packet 0 Data Compare Start! RC MEM SADR : 00000040 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [107104] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 11
# 107109: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x044
# 107117: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x045
# 107125: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x046
# [107128] RC  RECEIVE PKT END  rc_rx_pkt_index 11
# 107133: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00100000 @Addr = 0x047
# [107136] INFO:  EP -> RC Packet 1 Data Compare Start! RC MEM SADR : 00000044 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [109180] RC TX BEGIN, PKT WITH DIRECT DATA rc_tx_pkt_index 3b 
# [109204] RC TX END, PKT WITH DIRECT DATA rc_tx_pkt_index 3b 
# [109212] RC  Initializing rc_tx_pkt_len_array single index 3b => hlen 3 dlen 0 hlen+dlen 3
# [109212] RC  Loading RC Tx Mem  index 3b addr cf hdw0 4000001 
# [109212] RC  Loading RC Tx Mem  index 3b addr d0 hdw1 f 
# [109212] RC  Loading RC Tx Mem  index 3b addr d1 hdw1 1000004 
# [109220] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 01000004 hdw2: 00000000 
# 
# [109220] EP  Initializing ep_tx_pkt_len_array single index 2c => hlen 3 dlen 1 hlen+dlen 4
# [109220] EP  Loading EP Tx Mem  index 2c addr a1 hdw0 4a000001 
# [109220] EP  Loading EP Tx Mem  index 2c addr a2 hdw1 1000004 
# [109220] EP  Loading EP Tx Mem  index 2c addr a3 hdw1 0 
# [109220] EP  Loading EP Tx Mem  index 2c addr a4 data 0 
# [109240] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 1f
# 109245: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x40000001 @Addr = 0x067
# 109253: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x068
# 109261: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x069
# [109264] EP  RECEIVE PKT END  ep_rx_pkt_index 1f
# 109269: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x000007e9 @Addr = 0x06a
# [109272] INFO:  RC -> EP Packet 7 Data Compare Start! EP MEM SADR : 00000067 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 4c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 4d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [109680] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 20
# 109685: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x49000001 @Addr = 0x06b
# 109693: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x06c
# [109696] EP  RECEIVE PKT END  ep_rx_pkt_index 20
# 109701: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x06d
# [109704] INFO:  RC -> EP Packet 0 Data Compare Start! EP MEM SADR : 0000006b EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 49000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 4c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 4d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 4e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 4f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 30000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 31000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 32000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 49000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [109704] ERROR:  EP Received Packet 20 Not MATCHED.  
# 
# [109704] INFO:  EP Packet 20 MEM SADR : 0000006b PKTLEN 00000003 
# 
# [109704] EP Packet Length 3 
# 
# [109704] EP Packet Header[0] = 49000001 
# 
# [109704] EP Packet Header[1] = f 
# 
# [109704] EP Packet Header[2] = 12345000 
# 
# [109968] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 21
# 109973: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000001 @Addr = 0x06e
# 109981: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x06f
# [109984] EP  RECEIVE PKT END  ep_rx_pkt_index 21
# 109989: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x070
# [109992] INFO:  RC -> EP Packet 1 Data Compare Start! EP MEM SADR : 0000006e EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [110504] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 12
# 110509: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x048
# 110517: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x049
# 110525: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x04a
# [110528] RC  RECEIVE PKT END  rc_rx_pkt_index 12
# 110533: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000b93 @Addr = 0x04b
# [110536] INFO:  EP -> RC Packet 2 Data Compare Start! RC MEM SADR : 00000048 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [113568] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 22
# 113573: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x04000001 @Addr = 0x071
# 113581: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x072
# [113584] EP  RECEIVE PKT END  ep_rx_pkt_index 22
# 113589: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000004 @Addr = 0x073
# [113592] INFO:  RC -> EP Packet 2 Data Compare Start! EP MEM SADR : 00000071 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 04000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [113752] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 23
# 113757: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x40000001 @Addr = 0x074
# 113765: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x075
# 113773: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x076
# [113776] EP  RECEIVE PKT END  ep_rx_pkt_index 23
# 113781: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000975 @Addr = 0x077
# [113784] INFO:  RC -> EP Packet 3 Data Compare Start! EP MEM SADR : 00000074 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 4c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 4d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 4e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [116216] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 24
# 116221: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4c000001 @Addr = 0x078
# 116229: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x079
# [116232] EP  RECEIVE PKT END  ep_rx_pkt_index 24
# 116237: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x07a
# [116240] INFO:  RC -> EP Packet 4 Data Compare Start! EP MEM SADR : 00000078 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 4c000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 4d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 4e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 4f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 30000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 31000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 32000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4c000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [116240] ERROR:  EP Received Packet 24 Not MATCHED.  
# 
# [116240] INFO:  EP Packet 24 MEM SADR : 00000078 PKTLEN 00000003 
# 
# [116240] EP Packet Length 3 
# 
# [116240] EP Packet Header[0] = 4c000001 
# 
# [116240] EP Packet Header[1] = f 
# 
# [116240] EP Packet Header[2] = 12345000 
# 
# [116640] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 13
# 116645: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x04c
# 116653: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x04d
# 116661: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x04e
# [116664] RC  RECEIVE PKT END  rc_rx_pkt_index 13
# 116669: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00100000 @Addr = 0x04f
# [116672] INFO:  EP -> RC Packet 3 Data Compare Start! RC MEM SADR : 0000004c RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [117896] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 25
# 117901: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000001 @Addr = 0x07b
# 117909: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x07c
# [117912] EP  RECEIVE PKT END  ep_rx_pkt_index 25
# 117917: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x07d
# [117920] INFO:  RC -> EP Packet 5 Data Compare Start! EP MEM SADR : 0000007b EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 4c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [118160] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 26
# 118165: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x04000001 @Addr = 0x07e
# 118173: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x07f
# [118176] EP  RECEIVE PKT END  ep_rx_pkt_index 26
# 118181: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000004 @Addr = 0x080
# [118184] INFO:  RC -> EP Packet 6 Data Compare Start! EP MEM SADR : 0000007e EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 4c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 04000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [118416] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 27
# 118421: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x40000001 @Addr = 0x081
# 118429: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x082
# 118437: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x083
# [118440] EP  RECEIVE PKT END  ep_rx_pkt_index 27
# 118445: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000b93 @Addr = 0x084
# [118448] INFO:  RC -> EP Packet 7 Data Compare Start! EP MEM SADR : 00000081 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 4c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 4d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 4e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 4f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [118984] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 14
# 118989: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x050
# 118997: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x051
# 119005: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x052
# [119008] RC  RECEIVE PKT END  rc_rx_pkt_index 14
# 119013: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000897 @Addr = 0x053
# [119016] INFO:  EP -> RC Packet 4 Data Compare Start! RC MEM SADR : 00000050 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [119872] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 15
# 119877: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x054
# 119885: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x055
# 119893: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x056
# [119896] RC  RECEIVE PKT END  rc_rx_pkt_index 15
# 119901: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00100000 @Addr = 0x057
# [119904] INFO:  EP -> RC Packet 5 Data Compare Start! RC MEM SADR : 00000054 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [122088] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 28
# 122093: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x30000001 @Addr = 0x085
# 122101: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x086
# 122109: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x087
# [122112] EP  RECEIVE PKT END  ep_rx_pkt_index 28
# 122117: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000ecb @Addr = 0x088
# [122120] INFO:  RC -> EP Packet 0 Data Compare Start! EP MEM SADR : 00000085 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 30000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 30000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 30000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 30000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 30000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 30000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 30000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 30000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 30000001, Exp = 4c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 30000001, Exp = 4d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 30000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 30000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 30000001, Exp = 4e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 30000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 30000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 30000001, Exp = 4f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 30000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 30000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 30000001, Exp = 30000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [122264] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 29
# 122269: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4d000001 @Addr = 0x089
# 122277: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x08a
# [122280] EP  RECEIVE PKT END  ep_rx_pkt_index 29
# 122285: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x08b
# [122288] INFO:  RC -> EP Packet 1 Data Compare Start! EP MEM SADR : 00000089 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 4c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 4d000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 4e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 4f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 31000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 32000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4d000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [122288] ERROR:  EP Received Packet 29 Not MATCHED.  
# 
# [122288] INFO:  EP Packet 29 MEM SADR : 00000089 PKTLEN 00000003 
# 
# [122288] EP Packet Length 3 
# 
# [122288] EP Packet Header[0] = 4d000001 
# 
# [122288] EP Packet Header[1] = f 
# 
# [122288] EP Packet Header[2] = 12345000 
# 
# [122440] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 2a
# 122445: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000001 @Addr = 0x08c
# 122453: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x08d
# [122456] EP  RECEIVE PKT END  ep_rx_pkt_index 2a
# 122461: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x08e
# [122464] INFO:  RC -> EP Packet 2 Data Compare Start! EP MEM SADR : 0000008c EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 4c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 4d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [122616] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 2b
# 122621: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x40000001 @Addr = 0x08f
# 122629: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x090
# 122637: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x091
# [122640] EP  RECEIVE PKT END  ep_rx_pkt_index 2b
# 122645: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000886 @Addr = 0x092
# [122648] INFO:  RC -> EP Packet 3 Data Compare Start! EP MEM SADR : 0000008f EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 4c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 4d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 4e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 4f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [123272] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 16
# 123277: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x058
# 123285: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x059
# 123293: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x05a
# [123296] RC  RECEIVE PKT END  rc_rx_pkt_index 16
# 123301: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000897 @Addr = 0x05b
# [123304] INFO:  EP -> RC Packet 6 Data Compare Start! RC MEM SADR : 00000058 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [124176] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 17
# 124181: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x05c
# 124189: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x05d
# 124197: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x05e
# [124200] RC  RECEIVE PKT END  rc_rx_pkt_index 17
# 124205: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00100000 @Addr = 0x05f
# [124208] INFO:  EP -> RC Packet 7 Data Compare Start! RC MEM SADR : 0000005c RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [125128] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 18
# 125133: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x060
# 125141: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x061
# 125149: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x062
# [125152] RC  RECEIVE PKT END  rc_rx_pkt_index 18
# 125157: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000897 @Addr = 0x063
# [125160] INFO:  EP -> RC Packet 0 Data Compare Start! RC MEM SADR : 00000060 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [125984] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 19
# 125989: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x064
# 125997: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x065
# 126005: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x066
# [126008] RC  RECEIVE PKT END  rc_rx_pkt_index 19
# 126013: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00100000 @Addr = 0x067
# [126016] INFO:  EP -> RC Packet 1 Data Compare Start! RC MEM SADR : 00000064 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [126432] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 2c
# 126437: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x31000001 @Addr = 0x093
# 126445: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x094
# 126453: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x095
# [126456] EP  RECEIVE PKT END  ep_rx_pkt_index 2c
# 126461: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000088a @Addr = 0x096
# [126464] INFO:  RC -> EP Packet 4 Data Compare Start! EP MEM SADR : 00000093 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 31000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 31000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 31000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 31000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 31000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 31000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 31000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 31000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 31000001, Exp = 4c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 31000001, Exp = 4d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 31000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 31000001, Exp = 4e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 31000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 31000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 31000001, Exp = 4f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 31000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 31000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 31000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 31000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 31000001, Exp = 31000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [126688] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 2d
# 126693: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x04000001 @Addr = 0x097
# 126701: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x098
# [126704] EP  RECEIVE PKT END  ep_rx_pkt_index 2d
# 126709: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000004 @Addr = 0x099
# [126712] INFO:  RC -> EP Packet 5 Data Compare Start! EP MEM SADR : 00000097 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 4c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 4d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 12345000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 04000001, Exp = 04000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [127024] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 2e
# 127029: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4e000001 @Addr = 0x09a
# 127037: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x09b
# [127040] EP  RECEIVE PKT END  ep_rx_pkt_index 2e
# 127045: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x09c
# [127048] INFO:  RC -> EP Packet 6 Data Compare Start! EP MEM SADR : 0000009a EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 4c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 4d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 4e000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 3, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 01000004
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 4f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 01000004
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 01000004
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 01000004
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 40000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 32000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 12345000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4e000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Hdr[2] => Rx = 12345000, Exp = 01000004
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [127048] ERROR:  EP Received Packet 2e Not MATCHED.  
# 
# [127048] INFO:  EP Packet 2e MEM SADR : 0000009a PKTLEN 00000003 
# 
# [127048] EP Packet Length 3 
# 
# [127048] EP Packet Header[0] = 4e000001 
# 
# [127048] EP Packet Header[1] = f 
# 
# [127048] EP Packet Header[2] = 12345000 
# 
# [127280] EP  RECEIVE PKT BEGIN  ep_rx_pkt_index 2f
# 127285: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x40000001 @Addr = 0x09d
# 127293: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0000000f @Addr = 0x09e
# 127301: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x12345000 @Addr = 0x09f
# [127304] EP  RECEIVE PKT END  ep_rx_pkt_index 2f
# 127309: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000897 @Addr = 0x0a0
# [127312] INFO:  RC -> EP Packet 7 Data Compare Start! EP MEM SADR : 0000009d EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 03000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0100000f
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 09000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 0f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 43000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 49000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 4c000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 4d000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 4e000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 4f000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 00000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 04000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 0000000f, Exp = 0000000f
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [127720] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 1a
# 127725: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x068
# 127733: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x069
# 127741: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x06a
# [127744] RC  RECEIVE PKT END  rc_rx_pkt_index 1a
# 127749: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000897 @Addr = 0x06b
# [127752] INFO:  EP -> RC Packet 2 Data Compare Start! RC MEM SADR : 00000068 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [128624] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 1b
# 128629: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x06c
# 128637: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x06d
# 128645: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x06e
# [128648] RC  RECEIVE PKT END  rc_rx_pkt_index 1b
# 128653: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00100000 @Addr = 0x06f
# [128656] INFO:  EP -> RC Packet 3 Data Compare Start! RC MEM SADR : 0000006c RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [129528] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 1c
# 129533: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x070
# 129541: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x071
# 129549: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x072
# [129552] RC  RECEIVE PKT END  rc_rx_pkt_index 1c
# 129557: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000897 @Addr = 0x073
# [129560] INFO:  EP -> RC Packet 4 Data Compare Start! RC MEM SADR : 00000070 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [130432] RC  RECEIVE PKT BEGIN  rc_rx_pkt_index 1d
# 130437: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x074
# 130445: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000004 @Addr = 0x075
# 130453: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000000 @Addr = 0x076
# [130456] RC  RECEIVE PKT END  rc_rx_pkt_index 1d
# 130461: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00100000 @Addr = 0x077
# [130464] INFO:  EP -> RC Packet 5 Data Compare Start! RC MEM SADR : 00000074 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 0a000000
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01002004
# PKT_DIFF (RC) :                   ^^^^^^^^^^^^
# PKT_DIFF (RC) : Matched = 0, Passed = 0
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000004, Exp = 01000004
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [141228] Pkt Count Mismatch EP Transmitted = 0x2d  RC Received = 0x1e  
# 
# [141228] Pkt Count Mismatch RC Transmitted = 0x3c  EP Received = 0x30  
# 
# Checking for Left over packets in TX array 
# 
ERROR:  RC PKT 1 NOT MATCHED 
# 
# INFO:  RC PKT saddr 4 pkt_len 4 
# 
# [141228] RC Packet Length 4 
# 
# [141228] RC Packet Header[0] = 3000001 
# 
# [141228] RC Packet Header[1] = 100000f 
# 
# [141228] RC Packet Header[2] = 12345000 
# 
# [141228] RC Packet DATA[0] = fe5 
# 
ERROR:  RC PKT 5 NOT MATCHED 
# 
# INFO:  RC PKT saddr 12 pkt_len 4 
# 
# [141228] RC Packet Length 4 
# 
# [141228] RC Packet Header[0] = 9000001 
# 
# [141228] RC Packet Header[1] = f 
# 
# [141228] RC Packet Header[2] = 12345000 
# 
# [141228] RC Packet DATA[0] = 77b 
# 
ERROR:  RC PKT 9 NOT MATCHED 
# 
# INFO:  RC PKT saddr 20 pkt_len 4 
# 
# [141228] RC Packet Length 4 
# 
# [141228] RC Packet Header[0] = c000001 
# 
# [141228] RC Packet Header[1] = f 
# 
# [141228] RC Packet Header[2] = 12345000 
# 
# [141228] RC Packet DATA[0] = 879 
# 
ERROR:  RC PKT d NOT MATCHED 
# 
# INFO:  RC PKT saddr 2e pkt_len 4 
# 
# [141228] RC Packet Length 4 
# 
# [141228] RC Packet Header[0] = d000001 
# 
# [141228] RC Packet Header[1] = f 
# 
# [141228] RC Packet Header[2] = 12345000 
# 
# [141228] RC Packet DATA[0] = 32c 
# 
ERROR:  RC PKT 11 NOT MATCHED 
# 
# INFO:  RC PKT saddr 3c pkt_len 4 
# 
# [141228] RC Packet Length 4 
# 
# [141228] RC Packet Header[0] = e000001 
# 
# [141228] RC Packet Header[1] = f 
# 
# [141228] RC Packet Header[2] = 12345000 
# 
# [141228] RC Packet DATA[0] = c24 
# 
ERROR:  RC PKT 15 NOT MATCHED 
# 
# INFO:  RC PKT saddr 4a pkt_len 4 
# 
# [141228] RC Packet Length 4 
# 
# [141228] RC Packet Header[0] = f000001 
# 
# [141228] RC Packet Header[1] = f 
# 
# [141228] RC Packet Header[2] = 12345000 
# 
# [141228] RC Packet DATA[0] = d89 
# 
ERROR:  RC PKT 19 NOT MATCHED 
# 
# INFO:  RC PKT saddr 58 pkt_len 4 
# 
# [141228] RC Packet Length 4 
# 
# [141228] RC Packet Header[0] = 43000001 
# 
# [141228] RC Packet Header[1] = f 
# 
# [141228] RC Packet Header[2] = 12345000 
# 
# [141228] RC Packet DATA[0] = 669 
# 
ERROR:  RC PKT 1d NOT MATCHED 
# 
# INFO:  RC PKT saddr 66 pkt_len 4 
# 
# [141228] RC Packet Length 4 
# 
# [141228] RC Packet Header[0] = 49000001 
# 
# [141228] RC Packet Header[1] = f 
# 
# [141228] RC Packet Header[2] = 12345000 
# 
# [141228] RC Packet DATA[0] = 52b 
# 
ERROR:  RC PKT 21 NOT MATCHED 
# 
# INFO:  RC PKT saddr 74 pkt_len 4 
# 
# [141228] RC Packet Length 4 
# 
# [141228] RC Packet Header[0] = 4c000001 
# 
# [141228] RC Packet Header[1] = f 
# 
# [141228] RC Packet Header[2] = 12345000 
# 
# [141228] RC Packet DATA[0] = 361 
# 
ERROR:  RC PKT 25 NOT MATCHED 
# 
# INFO:  RC PKT saddr 82 pkt_len 4 
# 
# [141228] RC Packet Length 4 
# 
# [141228] RC Packet Header[0] = 4d000001 
# 
# [141228] RC Packet Header[1] = f 
# 
# [141228] RC Packet Header[2] = 12345000 
# 
# [141228] RC Packet DATA[0] = 315 
# 
ERROR:  RC PKT 29 NOT MATCHED 
# 
# INFO:  RC PKT saddr 90 pkt_len 4 
# 
# [141228] RC Packet Length 4 
# 
# [141228] RC Packet Header[0] = 4e000001 
# 
# [141228] RC Packet Header[1] = f 
# 
# [141228] RC Packet Header[2] = 12345000 
# 
# [141228] RC Packet DATA[0] = a2c 
# 
ERROR:  RC PKT 2a NOT MATCHED 
# 
# INFO:  RC PKT saddr 94 pkt_len 3 
# 
# [141228] RC Packet Length 3 
# 
# [141228] RC Packet Header[0] = 1 
# 
# [141228] RC Packet Header[1] = f 
# 
# [141228] RC Packet Header[2] = 12345000 
# 
ERROR:  RC PKT 2b NOT MATCHED 
# 
# INFO:  RC PKT saddr 97 pkt_len 3 
# 
# [141228] RC Packet Length 3 
# 
# [141228] RC Packet Header[0] = 4000001 
# 
# [141228] RC Packet Header[1] = f 
# 
# [141228] RC Packet Header[2] = 1000004 
# 
ERROR:  RC PKT 2d NOT MATCHED 
# 
# INFO:  RC PKT saddr 9e pkt_len 4 
# 
# [141228] RC Packet Length 4 
# 
# [141228] RC Packet Header[0] = 4f000001 
# 
# [141228] RC Packet Header[1] = f 
# 
# [141228] RC Packet Header[2] = 12345000 
# 
# [141228] RC Packet DATA[0] = 67c 
# 
ERROR:  RC PKT 2e NOT MATCHED 
# 
# INFO:  RC PKT saddr a2 pkt_len 3 
# 
# [141228] RC Packet Length 3 
# 
# [141228] RC Packet Header[0] = 1 
# 
# [141228] RC Packet Header[1] = f 
# 
# [141228] RC Packet Header[2] = 12345000 
# 
ERROR:  RC PKT 2f NOT MATCHED 
# 
# INFO:  RC PKT saddr a5 pkt_len 3 
# 
# [141228] RC Packet Length 3 
# 
# [141228] RC Packet Header[0] = 4000001 
# 
# [141228] RC Packet Header[1] = f 
# 
# [141228] RC Packet Header[2] = 1000004 
# 
ERROR:  RC PKT 32 NOT MATCHED 
# 
# INFO:  RC PKT saddr b0 pkt_len 3 
# 
# [141228] RC Packet Length 3 
# 
# [141228] RC Packet Header[0] = 1 
# 
# [141228] RC Packet Header[1] = f 
# 
# [141228] RC Packet Header[2] = 12345000 
# 
ERROR:  RC PKT 33 NOT MATCHED 
# 
# INFO:  RC PKT saddr b3 pkt_len 3 
# 
# [141228] RC Packet Length 3 
# 
# [141228] RC Packet Header[0] = 4000001 
# 
# [141228] RC Packet Header[1] = f 
# 
# [141228] RC Packet Header[2] = 1000004 
# 
ERROR:  RC PKT 36 NOT MATCHED 
# 
# INFO:  RC PKT saddr be pkt_len 3 
# 
# [141228] RC Packet Length 3 
# 
# [141228] RC Packet Header[0] = 1 
# 
# [141228] RC Packet Header[1] = f 
# 
# [141228] RC Packet Header[2] = 12345000 
# 
ERROR:  RC PKT 37 NOT MATCHED 
# 
# INFO:  RC PKT saddr c1 pkt_len 3 
# 
# [141228] RC Packet Length 3 
# 
# [141228] RC Packet Header[0] = 4000001 
# 
# [141228] RC Packet Header[1] = f 
# 
# [141228] RC Packet Header[2] = 1000004 
# 
ERROR:  RC PKT 39 NOT MATCHED 
# 
# INFO:  RC PKT saddr c8 pkt_len 4 
# 
# [141228] RC Packet Length 4 
# 
# [141228] RC Packet Header[0] = 32000001 
# 
# [141228] RC Packet Header[1] = f 
# 
# [141228] RC Packet Header[2] = 12345000 
# 
# [141228] RC Packet Header[3] = 64f 
# 
ERROR:  RC PKT 3a NOT MATCHED 
# 
# INFO:  RC PKT saddr cc pkt_len 3 
# 
# [141228] RC Packet Length 3 
# 
# [141228] RC Packet Header[0] = 1 
# 
# [141228] RC Packet Header[1] = f 
# 
# [141228] RC Packet Header[2] = 12345000 
# 
ERROR:  RC PKT 3b NOT MATCHED 
# 
# INFO:  RC PKT saddr cf pkt_len 3 
# 
# [141228] RC Packet Length 3 
# 
# [141228] RC Packet Header[0] = 4000001 
# 
# [141228] RC Packet Header[1] = f 
# 
# [141228] RC Packet Header[2] = 1000004 
# 
ERROR:  EP PKT 0 NOT MATCHED 
# 
# INFO:  EP PKT saddr 0 pkt_len 3 
# 
# [141228] EP Packet Length 3 
# 
# [141228] EP Packet Header[0] = a000000 
# 
# [141228] EP Packet Header[1] = 1002004 
# 
# [141228] EP Packet Header[2] = 1000000 
# 
ERROR:  EP PKT 3 NOT MATCHED 
# 
# INFO:  EP PKT saddr b pkt_len 3 
# 
# [141228] EP Packet Length 3 
# 
# [141228] EP Packet Header[0] = a000000 
# 
# [141228] EP Packet Header[1] = 1002004 
# 
# [141228] EP Packet Header[2] = 0 
# 
ERROR:  EP PKT 6 NOT MATCHED 
# 
# INFO:  EP PKT saddr 16 pkt_len 3 
# 
# [141228] EP Packet Length 3 
# 
# [141228] EP Packet Header[0] = a000000 
# 
# [141228] EP Packet Header[1] = 1002004 
# 
# [141228] EP Packet Header[2] = 0 
# 
ERROR:  EP PKT 9 NOT MATCHED 
# 
# INFO:  EP PKT saddr 21 pkt_len 3 
# 
# [141228] EP Packet Length 3 
# 
# [141228] EP Packet Header[0] = a000000 
# 
# [141228] EP Packet Header[1] = 1002004 
# 
# [141228] EP Packet Header[2] = 0 
# 
ERROR:  EP PKT c NOT MATCHED 
# 
# INFO:  EP PKT saddr 2c pkt_len 3 
# 
# [141228] EP Packet Length 3 
# 
# [141228] EP Packet Header[0] = a000000 
# 
# [141228] EP Packet Header[1] = 1002004 
# 
# [141228] EP Packet Header[2] = 0 
# 
ERROR:  EP PKT f NOT MATCHED 
# 
# INFO:  EP PKT saddr 37 pkt_len 3 
# 
# [141228] EP Packet Length 3 
# 
# [141228] EP Packet Header[0] = a000000 
# 
# [141228] EP Packet Header[1] = 1002004 
# 
# [141228] EP Packet Header[2] = 0 
# 
ERROR:  EP PKT 12 NOT MATCHED 
# 
# INFO:  EP PKT saddr 42 pkt_len 3 
# 
# [141228] EP Packet Length 3 
# 
# [141228] EP Packet Header[0] = a000000 
# 
# [141228] EP Packet Header[1] = 1002004 
# 
# [141228] EP Packet Header[2] = 0 
# 
ERROR:  EP PKT 15 NOT MATCHED 
# 
# INFO:  EP PKT saddr 4d pkt_len 3 
# 
# [141228] EP Packet Length 3 
# 
# [141228] EP Packet Header[0] = a000000 
# 
# [141228] EP Packet Header[1] = 1002004 
# 
# [141228] EP Packet Header[2] = 0 
# 
ERROR:  EP PKT 18 NOT MATCHED 
# 
# INFO:  EP PKT saddr 58 pkt_len 3 
# 
# [141228] EP Packet Length 3 
# 
# [141228] EP Packet Header[0] = a000000 
# 
# [141228] EP Packet Header[1] = 1002004 
# 
# [141228] EP Packet Header[2] = 0 
# 
ERROR:  EP PKT 1b NOT MATCHED 
# 
# INFO:  EP PKT saddr 63 pkt_len 3 
# 
# [141228] EP Packet Length 3 
# 
# [141228] EP Packet Header[0] = a000000 
# 
# [141228] EP Packet Header[1] = 1002004 
# 
# [141228] EP Packet Header[2] = 0 
# 
ERROR:  EP PKT 1e NOT MATCHED 
# 
# INFO:  EP PKT saddr 6e pkt_len 3 
# 
# [141228] EP Packet Length 3 
# 
# [141228] EP Packet Header[0] = a000000 
# 
# [141228] EP Packet Header[1] = 1002004 
# 
# [141228] EP Packet Header[2] = 0 
# 
ERROR:  EP PKT 21 NOT MATCHED 
# 
# INFO:  EP PKT saddr 79 pkt_len 3 
# 
# [141228] EP Packet Length 3 
# 
# [141228] EP Packet Header[0] = a000000 
# 
# [141228] EP Packet Header[1] = 1002004 
# 
# [141228] EP Packet Header[2] = 0 
# 
ERROR:  EP PKT 24 NOT MATCHED 
# 
# INFO:  EP PKT saddr 84 pkt_len 3 
# 
# [141228] EP Packet Length 3 
# 
# [141228] EP Packet Header[0] = a000000 
# 
# [141228] EP Packet Header[1] = 1002004 
# 
# [141228] EP Packet Header[2] = 0 
# 
ERROR:  EP PKT 27 NOT MATCHED 
# 
# INFO:  EP PKT saddr 8f pkt_len 3 
# 
# [141228] EP Packet Length 3 
# 
# [141228] EP Packet Header[0] = a000000 
# 
# [141228] EP Packet Header[1] = 1002004 
# 
# [141228] EP Packet Header[2] = 0 
# 
ERROR:  EP PKT 2a NOT MATCHED 
# 
# INFO:  EP PKT saddr 9a pkt_len 3 
# 
# [141228] EP Packet Length 3 
# 
# [141228] EP Packet Header[0] = a000000 
# 
# [141228] EP Packet Header[1] = 1002004 
# 
# [141228] EP Packet Header[2] = 0 
# 
# [141228] TEST FAILED 
# 
# [181228] Simulation DONE
# 
# ** Note: $finish    : ./../tb/pex_tb.v(634)
#    Time: 182828 ns  Iteration: 0  Instance: /pex_tb
