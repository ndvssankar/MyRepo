# vsim -do vsim.do -c -suppress 4029 -novopt pex_tb 
# //  QuestaSim 6.3a Jun 25 2007 Linux 2.4.18-3smp
# //
# //  Copyright 1991-2007 Mentor Graphics Corporation
# //              All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND 
# //  PROPRIETARY INFORMATION WHICH IS THE PROPERTY
# //  OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS
# //  AND IS SUBJECT TO LICENSE TERMS.
# //
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pex_tb
# Loading work.pex_tb
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.PexRc
# Loading work.PexRc
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pcixp_rc
# Loading work.pcixp_rc
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pcixp_tl
# Loading work.pcixp_tl
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.tlrx
# Loading work.tlrx
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.sfMxN
# Loading work.sfMxN
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.xpmem
# Loading work.xpmem
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.tltx_arb
# Loading work.tltx_arb
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.tltx_top
# Loading work.tltx_top
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.tltx_bridge
# Loading work.tltx_bridge
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.tltx_router
# Loading work.tltx_router
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.tltx_tcm
# Loading work.tltx_tcm
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.tltx_tc
# Loading work.tltx_tc
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.tltx_vc2tcmap
# Loading work.tltx_vc2tcmap
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.tltx_fcm
# Loading work.tltx_fcm
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.tltx_fc
# Loading work.tltx_fc
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.tltx_assembler
# Loading work.tltx_assembler
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.lcrc32
# Loading work.lcrc32
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pcixp_dll
# Loading work.pcixp_dll
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.dltx_assembler
# Loading work.dltx_assembler
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.crc16
# Loading work.crc16
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.dltx_scheduler
# Loading work.dltx_scheduler
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.dltx_rty
# Loading work.dltx_rty
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.dltx_retire
# Loading work.dltx_retire
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.dltx_tlp
# Loading work.dltx_tlp
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.dltx_dllp
# Loading work.dltx_dllp
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.dltx_cntr
# Loading work.dltx_cntr
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.dlrx_tlp
# Loading work.dlrx_tlp
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.dlrx_dllp
# Loading work.dlrx_dllp
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.dlcmsm
# Loading work.dlcmsm
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.fcinit
# Loading work.fcinit
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pcixp_pl
# Loading work.pcixp_pl
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pl_ltssm
# Loading work.pl_ltssm
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pl_det_ssm
# Loading work.pl_det_ssm
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pl_pol_ssm
# Loading work.pl_pol_ssm
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pl_l0s_ssm
# Loading work.pl_l0s_ssm
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pl_dsb_ssm
# Loading work.pl_dsb_ssm
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pl_hrst_ssm
# Loading work.pl_hrst_ssm
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pl_cfg_ssm
# Loading work.pl_cfg_ssm
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pl_rec_ssm
# Loading work.pl_rec_ssm
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pl_framer
# Loading work.pl_framer
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pl_scrm
# Loading work.pl_scrm
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pl_descrm
# Loading work.pl_descrm
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pl_deframer
# Loading work.pl_deframer
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pi_cfg
# Loading work.pi_cfg
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pi_arbiter
# Loading work.pi_arbiter
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pipe8or16
# Loading work.pipe8or16
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.interface_monitor
# Loading work.interface_monitor
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pm_disp
# Loading work.pm_disp
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.mem_model
# Loading work.mem_model
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.PexEp
# Loading work.PexEp
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pcixp_ep
# Loading work.pcixp_ep
# Refreshing /home/anand/pcixp/pcixp_rev1/VlogSim/run/work.pex_mem_agent
# Loading work.pex_mem_agent
# ** Warning: (vsim-3017) ../../rtl/top/pcixp_dll.v(586): [TFMPC] - Too few port connections. Expected 34, found 33.
#         Region: /pex_tb/PEX_RC/PCIXP_RC/PCIXP_DLL/u_DLTX_CNTR
# ** Warning: (vsim-3017) ../../rtl/top/pcixp_dll.v(586): [TFMPC] - Too few port connections. Expected 34, found 33.
#         Region: /pex_tb/PEX_EP_0/PCIXP_EP/PCIXP_DLL/u_DLTX_CNTR
# do vsim.do 
# resume
#  
# 
#  Time = @[60452] The value of din at Address = 5800  of reg_set ( EP -> RC ) = 00000001 
#  
# 
#  Time = @[60876] The value of din at Address = 5800  of reg_set ( RC -> EP ) = 00000001 
# [60876] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0100000f hdw2: 97865000 
# 
# [60996] EP  Initializing ep_tx_pkt_len_array single index 0 => hlen 3 dlen 1 hlen+dlen 4
# [61004] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 01000000 hdw2: 97865000 
# 
# [61108] EP  Initializing ep_tx_pkt_len_array single index 1 => hlen 3 dlen 1 hlen+dlen 4
# [61116] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 01000000 hdw2: 97865000 
# 
# [61212] EP  Initializing ep_tx_pkt_len_array single index 2 => hlen 3 dlen 0 hlen+dlen 3
# [61220] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [61220] RC  Initializing rc_tx_pkt_len_array single index 0 => hlen 3 dlen 1 hlen+dlen 4
# [61220] RC  Loading RC Tx Mem  index 0 addr 0 hdw0 4a000001 
# [61220] RC  Loading RC Tx Mem  index 0 addr 1 hdw1 4 
# [61220] RC  Loading RC Tx Mem  index 0 addr 2 hdw2 1000000 
# [61220] RC  Loading RC Tx Mem  index 0 addr 3 data 3cc1f579 
# 61773: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x000
# 61781: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x001
# 61789: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x97865000 @Addr = 0x002
# 61797: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x3cc1f579 @Addr = 0x003
# [61800] INFO:  EP -> RC Packet 0 Data Compare Start! RC MEM SADR : 00000000 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Hdr[2] => Rx = 97865000, Exp = 97865000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# [61800] EP -> RC Packet 00000000 Data Compare passed! 
# 
# PKT_DIFF (RC) : Matched = 1, Passed = 1
# 62677: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x004
# 62685: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x005
# 62693: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x97865000 @Addr = 0x006
# 62701: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x729f1fe5 @Addr = 0x007
# [62704] INFO:  EP -> RC Packet 1 Data Compare Start! RC MEM SADR : 00000004 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# [62704] EP -> RC Packet 00000001 Data Compare passed! 
# 
# PKT_DIFF (RC) : Matched = 1, Passed = 1
# 63541: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000001 @Addr = 0x008
# 63549: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x009
# 63557: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x97865000 @Addr = 0x00a
# [63560] INFO:  EP -> RC Packet 2 Data Compare Start! RC MEM SADR : 00000008 RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# [63560] EP -> RC Packet 00000002 Data Compare passed! 
# 
# PKT_DIFF (RC) : Matched = 1, Passed = 1
# 64269: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x000
# 64277: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x001
# 64285: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x002
# 64293: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x3cc1f579 @Addr = 0x003
# [64296] INFO:  RC -> EP Packet 0 Data Compare Start! EP MEM SADR : 00000000 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# [64296] RC -> EP Packet 00000000 Data Compare passed! 
# 
# PKT_DIFF (EP) : Matched = 1, Passed = 1
# [65228] Preparing the IO Packet Header hdw0: 42000001 hdw1: 0100000f hdw2: efabcd0a 
# 
# [65324] EP  Initializing ep_tx_pkt_len_array single index 3 => hlen 3 dlen 1 hlen+dlen 4
# [65332] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [65332] RC  Initializing rc_tx_pkt_len_array single index 1 => hlen 3 dlen 0 hlen+dlen 3
# [65332] RC  Loading RC Tx Mem  index 1 addr 4 hdw0 a000001 
# [65332] RC  Loading RC Tx Mem  index 1 addr 5 hdw1 0 
# [65332] RC  Loading RC Tx Mem  index 1 addr 6 hdw2 1000000 
# [65340] Preparing the IO Packet Header hdw0: 42000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [65444] EP  Initializing ep_tx_pkt_len_array single index 4 => hlen 3 dlen 1 hlen+dlen 4
# [65452] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [65452] RC  Initializing rc_tx_pkt_len_array single index 2 => hlen 3 dlen 0 hlen+dlen 3
# [65452] RC  Loading RC Tx Mem  index 2 addr 7 hdw0 a000001 
# [65452] RC  Loading RC Tx Mem  index 2 addr 8 hdw1 0 
# [65452] RC  Loading RC Tx Mem  index 2 addr 9 hdw2 1000000 
# [65460] Preparing the IO Packet Header hdw0: 02000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [65556] EP  Initializing ep_tx_pkt_len_array single index 5 => hlen 3 dlen 0 hlen+dlen 3
# [65564] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [65564] RC  Initializing rc_tx_pkt_len_array single index 3 => hlen 3 dlen 1 hlen+dlen 4
# [65564] RC  Loading RC Tx Mem  index 3 addr a hdw0 4a000001 
# [65564] RC  Loading RC Tx Mem  index 3 addr b hdw1 4 
# [65564] RC  Loading RC Tx Mem  index 3 addr c hdw2 1000000 
# [65564] RC  Loading RC Tx Mem  index 3 addr d data faaf96f5 
# 68261: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x00b
# 68269: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x00c
# 68277: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x00d
# 68285: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xfaaf96f5 @Addr = 0x00e
# [68288] INFO:  EP -> RC Packet 3 Data Compare Start! RC MEM SADR : 0000000b RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# [68288] EP -> RC Packet 00000003 Data Compare passed! 
# 
# PKT_DIFF (RC) : Matched = 1, Passed = 1
# 68469: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x00f
# 68477: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x010
# 68485: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x011
# 68493: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x3dec177b @Addr = 0x012
# [68496] INFO:  EP -> RC Packet 4 Data Compare Start! RC MEM SADR : 0000000f RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# [68496] EP -> RC Packet 00000004 Data Compare passed! 
# 
# PKT_DIFF (RC) : Matched = 1, Passed = 1
# 68645: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x02000001 @Addr = 0x013
# 68653: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x014
# 68661: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x015
# [68664] INFO:  EP -> RC Packet 5 Data Compare Start! RC MEM SADR : 00000013 RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 02000001, Exp = 02000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# [68664] EP -> RC Packet 00000005 Data Compare passed! 
# 
# PKT_DIFF (RC) : Matched = 1, Passed = 1
# 69293: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x004
# 69301: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x005
# 69309: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x006
# [69312] INFO:  RC -> EP Packet 1 Data Compare Start! EP MEM SADR : 00000004 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 1
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 1
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 1
# [69312] ERROR:  EP Received Packet 1 Not MATCHED.  
# 
# [69312] INFO:  EP Packet 1 MEM SADR : 00000004 PKTLEN 00000003 
# 
# [69312] EP Packet Length 3 
# 
# [69312] EP Packet Header[0] = a000000 
# 
# [69312] EP Packet Header[1] = 4 
# 
# [69312] EP Packet Header[2] = 1000000 
# 
# [69572] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0100000f hdw2: efabcd00 
# 
# [69668] EP  Initializing ep_tx_pkt_len_array single index 6 => hlen 3 dlen 1 hlen+dlen 4
# [69676] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [69780] EP  Initializing ep_tx_pkt_len_array single index 7 => hlen 3 dlen 1 hlen+dlen 4
# [69788] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [69884] EP  Initializing ep_tx_pkt_len_array single index 8 => hlen 3 dlen 0 hlen+dlen 3
# [69892] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [69892] RC  Initializing rc_tx_pkt_len_array single index 4 => hlen 3 dlen 1 hlen+dlen 4
# [69892] RC  Loading RC Tx Mem  index 4 addr e hdw0 4a000001 
# [69892] RC  Loading RC Tx Mem  index 4 addr f hdw1 4 
# [69892] RC  Loading RC Tx Mem  index 4 addr 10 hdw2 1000000 
# [69892] RC  Loading RC Tx Mem  index 4 addr 11 data a8123a50 
# 70189: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x007
# 70197: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x008
# 70205: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x009
# [70208] INFO:  RC -> EP Packet 2 Data Compare Start! EP MEM SADR : 00000007 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [70208] ERROR:  EP Received Packet 2 Not MATCHED.  
# 
# [70208] INFO:  EP Packet 2 MEM SADR : 00000007 PKTLEN 00000003 
# 
# [70208] EP Packet Length 3 
# 
# [70208] EP Packet Header[0] = a000000 
# 
# [70208] EP Packet Header[1] = 4 
# 
# [70208] EP Packet Header[2] = 1000000 
# 
# 70509: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x016
# 70517: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x017
# 70525: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x018
# 70533: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xa8123a50 @Addr = 0x019
# [70536] INFO:  EP -> RC Packet 6 Data Compare Start! RC MEM SADR : 00000016 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 71125: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x00a
# 71133: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x00b
# 71141: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x00c
# 71149: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0xfaaf96f5 @Addr = 0x00d
# [71152] INFO:  RC -> EP Packet 3 Data Compare Start! EP MEM SADR : 0000000a EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# 72645: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x01a
# 72653: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x01b
# 72661: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x01c
# 72669: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xbcb15879 @Addr = 0x01d
# [72672] INFO:  EP -> RC Packet 7 Data Compare Start! RC MEM SADR : 0000001a RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 72821: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000001 @Addr = 0x01e
# 72829: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x01f
# 72837: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x020
# [72840] INFO:  EP -> RC Packet 8 Data Compare Start! RC MEM SADR : 0000001e RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [73900] Preparing the IO Packet Header hdw0: 42000001 hdw1: 0100000f hdw2: efabcd0a 
# 
# [73996] EP  Initializing ep_tx_pkt_len_array single index 9 => hlen 3 dlen 1 hlen+dlen 4
# [74004] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [74004] RC  Initializing rc_tx_pkt_len_array single index 5 => hlen 3 dlen 0 hlen+dlen 3
# [74004] RC  Loading RC Tx Mem  index 5 addr 12 hdw0 a000001 
# [74004] RC  Loading RC Tx Mem  index 5 addr 13 hdw1 0 
# [74004] RC  Loading RC Tx Mem  index 5 addr 14 hdw2 1000000 
# [74012] Preparing the IO Packet Header hdw0: 42000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [74116] EP  Initializing ep_tx_pkt_len_array single index a => hlen 3 dlen 1 hlen+dlen 4
# [74124] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [74124] RC  Initializing rc_tx_pkt_len_array single index 6 => hlen 3 dlen 0 hlen+dlen 3
# [74124] RC  Loading RC Tx Mem  index 6 addr 15 hdw0 a000001 
# [74124] RC  Loading RC Tx Mem  index 6 addr 16 hdw1 0 
# [74124] RC  Loading RC Tx Mem  index 6 addr 17 hdw2 1000000 
# [74132] Preparing the IO Packet Header hdw0: 02000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [74228] EP  Initializing ep_tx_pkt_len_array single index b => hlen 3 dlen 0 hlen+dlen 3
# [74236] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [74236] RC  Initializing rc_tx_pkt_len_array single index 7 => hlen 3 dlen 1 hlen+dlen 4
# [74236] RC  Loading RC Tx Mem  index 7 addr 18 hdw0 4a000001 
# [74236] RC  Loading RC Tx Mem  index 7 addr 19 hdw1 4 
# [74236] RC  Loading RC Tx Mem  index 7 addr 1a hdw2 1000000 
# [74236] RC  Loading RC Tx Mem  index 7 addr 1b data 727945e4 
# 74877: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x021
# 74885: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x022
# 74893: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x023
# 74901: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x727945e4 @Addr = 0x024
# [74904] INFO:  EP -> RC Packet 9 Data Compare Start! RC MEM SADR : 00000021 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 75781: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x025
# 75789: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x026
# 75797: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x027
# 75805: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x164f132c @Addr = 0x028
# [75808] INFO:  EP -> RC Packet a Data Compare Start! RC MEM SADR : 00000025 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 76269: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x00e
# 76277: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x00f
# 76285: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x010
# 76293: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x011
# 76301: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x012
# 76309: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x013
# [76312] INFO:  RC -> EP Packet 4 Data Compare Start! EP MEM SADR : 0000000e EP PKTLEN 00000006 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [76312] ERROR:  EP Received Packet 4 Not MATCHED.  
# 
# [76312] INFO:  EP Packet 4 MEM SADR : 0000000e PKTLEN 00000006 
# 
# [76312] EP Packet Length 6 
# 
# [76312] EP Packet Header[0] = 4a000001 
# 
# [76312] EP Packet Header[1] = 4 
# 
# [76312] EP Packet Header[2] = 1000000 
# 
# [76312] EP Packet DATA[0] = a000000 
# 
# [76312] EP Packet DATA[1] = 4 
# 
# [76312] EP Packet DATA[2] = 1000000 
# 
# 76861: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x02000001 @Addr = 0x029
# 76869: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x02a
# 76877: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x02b
# [76880] INFO:  EP -> RC Packet b Data Compare Start! RC MEM SADR : 00000029 RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 02000001, Exp = 02000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 77069: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x014
# 77077: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x015
# 77085: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x016
# [77088] INFO:  RC -> EP Packet 5 Data Compare Start! EP MEM SADR : 00000014 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [77088] ERROR:  EP Received Packet 5 Not MATCHED.  
# 
# [77088] INFO:  EP Packet 5 MEM SADR : 00000014 PKTLEN 00000003 
# 
# [77088] EP Packet Length 3 
# 
# [77088] EP Packet Header[0] = a000000 
# 
# [77088] EP Packet Header[1] = 4 
# 
# [77088] EP Packet Header[2] = 1000000 
# 
# 78005: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x017
# 78013: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x018
# 78021: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x019
# 78029: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x727945e4 @Addr = 0x01a
# [78032] INFO:  RC -> EP Packet 6 Data Compare Start! EP MEM SADR : 00000017 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [78244] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0100000f hdw2: efabcd00 
# 
# [78340] EP  Initializing ep_tx_pkt_len_array single index c => hlen 3 dlen 1 hlen+dlen 4
# [78348] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [78452] EP  Initializing ep_tx_pkt_len_array single index d => hlen 3 dlen 1 hlen+dlen 4
# [78460] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [78556] EP  Initializing ep_tx_pkt_len_array single index e => hlen 3 dlen 0 hlen+dlen 3
# [78564] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [78564] RC  Initializing rc_tx_pkt_len_array single index 8 => hlen 3 dlen 1 hlen+dlen 4
# [78564] RC  Loading RC Tx Mem  index 8 addr 1c hdw0 4a000001 
# [78564] RC  Loading RC Tx Mem  index 8 addr 1d hdw1 4 
# [78564] RC  Loading RC Tx Mem  index 8 addr 1e hdw2 1000000 
# [78564] RC  Loading RC Tx Mem  index 8 addr 1f data f1b8a2e3 
# 79317: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x02c
# 79325: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x02d
# 79333: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x02e
# 79341: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xf1b8a2e3 @Addr = 0x02f
# [79344] INFO:  EP -> RC Packet c Data Compare Start! RC MEM SADR : 0000002c RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 80149: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x030
# 80157: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x031
# 80165: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x032
# 80173: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x92258c24 @Addr = 0x033
# [80176] INFO:  EP -> RC Packet d Data Compare Start! RC MEM SADR : 00000030 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 81149: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000001 @Addr = 0x034
# 81157: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x035
# 81165: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x036
# [81168] INFO:  EP -> RC Packet e Data Compare Start! RC MEM SADR : 00000034 RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [82572] Preparing the IO Packet Header hdw0: 42000001 hdw1: 0100000f hdw2: efabcd0a 
# 
# [82668] EP  Initializing ep_tx_pkt_len_array single index f => hlen 3 dlen 1 hlen+dlen 4
# [82676] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [82676] RC  Initializing rc_tx_pkt_len_array single index 9 => hlen 3 dlen 0 hlen+dlen 3
# [82676] RC  Loading RC Tx Mem  index 9 addr 20 hdw0 a000001 
# [82676] RC  Loading RC Tx Mem  index 9 addr 21 hdw1 0 
# [82676] RC  Loading RC Tx Mem  index 9 addr 22 hdw2 1000000 
# [82684] Preparing the IO Packet Header hdw0: 42000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [82788] EP  Initializing ep_tx_pkt_len_array single index 10 => hlen 3 dlen 1 hlen+dlen 4
# [82796] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [82796] RC  Initializing rc_tx_pkt_len_array single index a => hlen 3 dlen 0 hlen+dlen 3
# [82796] RC  Loading RC Tx Mem  index a addr 23 hdw0 a000001 
# [82796] RC  Loading RC Tx Mem  index a addr 24 hdw1 0 
# [82796] RC  Loading RC Tx Mem  index a addr 25 hdw2 1000000 
# [82804] Preparing the IO Packet Header hdw0: 02000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [82900] EP  Initializing ep_tx_pkt_len_array single index 11 => hlen 3 dlen 0 hlen+dlen 3
# [82908] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [82908] RC  Initializing rc_tx_pkt_len_array single index b => hlen 3 dlen 1 hlen+dlen 4
# [82908] RC  Loading RC Tx Mem  index b addr 26 hdw0 4a000001 
# [82908] RC  Loading RC Tx Mem  index b addr 27 hdw1 4 
# [82908] RC  Loading RC Tx Mem  index b addr 28 hdw2 1000000 
# [82908] RC  Loading RC Tx Mem  index b addr 29 data 7b26b1f6 
# 83613: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x037
# 83621: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x038
# 83629: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x039
# 83637: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x7b26b1f6 @Addr = 0x03a
# [83640] INFO:  EP -> RC Packet f Data Compare Start! RC MEM SADR : 00000037 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 84517: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x03b
# 84525: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x03c
# 84533: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x03d
# 84541: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x44818d89 @Addr = 0x03e
# [84544] INFO:  EP -> RC Packet 10 Data Compare Start! RC MEM SADR : 0000003b RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 84893: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x01b
# 84901: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x01c
# 84909: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x01d
# 84917: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x01e
# 84925: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x01f
# 84933: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x020
# [84936] INFO:  RC -> EP Packet 7 Data Compare Start! EP MEM SADR : 0000001b EP PKTLEN 00000006 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [84936] ERROR:  EP Received Packet 7 Not MATCHED.  
# 
# [84936] INFO:  EP Packet 7 MEM SADR : 0000001b PKTLEN 00000006 
# 
# [84936] EP Packet Length 6 
# 
# [84936] EP Packet Header[0] = 4a000001 
# 
# [84936] EP Packet Header[1] = 4 
# 
# [84936] EP Packet Header[2] = 1000000 
# 
# [84936] EP Packet DATA[0] = a000000 
# 
# [84936] EP Packet DATA[1] = 4 
# 
# [84936] EP Packet DATA[2] = 1000000 
# 
# 85381: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x02000001 @Addr = 0x03f
# 85389: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x040
# 85397: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x041
# [85400] INFO:  EP -> RC Packet 11 Data Compare Start! RC MEM SADR : 0000003f RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 02000001, Exp = 02000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 85613: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x021
# 85621: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x022
# 85629: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x023
# [85632] INFO:  RC -> EP Packet 8 Data Compare Start! EP MEM SADR : 00000021 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [85632] ERROR:  EP Received Packet 8 Not MATCHED.  
# 
# [85632] INFO:  EP Packet 8 MEM SADR : 00000021 PKTLEN 00000003 
# 
# [85632] EP Packet Length 3 
# 
# [85632] EP Packet Header[0] = a000000 
# 
# [85632] EP Packet Header[1] = 4 
# 
# [85632] EP Packet Header[2] = 1000000 
# 
# 86549: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x024
# 86557: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x025
# 86565: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x026
# 86573: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x7b26b1f6 @Addr = 0x027
# [86576] INFO:  RC -> EP Packet 9 Data Compare Start! EP MEM SADR : 00000024 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [86916] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0100000f hdw2: efabcd00 
# 
# [87012] EP  Initializing ep_tx_pkt_len_array single index 12 => hlen 3 dlen 1 hlen+dlen 4
# [87020] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [87124] EP  Initializing ep_tx_pkt_len_array single index 13 => hlen 3 dlen 1 hlen+dlen 4
# [87132] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [87228] EP  Initializing ep_tx_pkt_len_array single index 14 => hlen 3 dlen 0 hlen+dlen 3
# [87236] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [87236] RC  Initializing rc_tx_pkt_len_array single index c => hlen 3 dlen 1 hlen+dlen 4
# [87236] RC  Loading RC Tx Mem  index c addr 2a hdw0 4a000001 
# [87236] RC  Loading RC Tx Mem  index c addr 2b hdw1 4 
# [87236] RC  Loading RC Tx Mem  index c addr 2c hdw2 1000000 
# [87236] RC  Loading RC Tx Mem  index c addr 2d data fbc516f7 
# 87981: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x042
# 87989: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x043
# 87997: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x044
# 88005: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xfbc516f7 @Addr = 0x045
# [88008] INFO:  EP -> RC Packet 12 Data Compare Start! RC MEM SADR : 00000042 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 89405: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x046
# 89413: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x047
# 89421: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x048
# 89429: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xb4b7b669 @Addr = 0x049
# [89432] INFO:  EP -> RC Packet 13 Data Compare Start! RC MEM SADR : 00000046 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [91244] Preparing the IO Packet Header hdw0: 42000001 hdw1: 0100000f hdw2: efabcd0a 
# 
# [91340] EP  Initializing ep_tx_pkt_len_array single index 15 => hlen 3 dlen 1 hlen+dlen 4
# [91348] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [91348] RC  Initializing rc_tx_pkt_len_array single index d => hlen 3 dlen 0 hlen+dlen 3
# [91348] RC  Loading RC Tx Mem  index d addr 2e hdw0 a000001 
# [91348] RC  Loading RC Tx Mem  index d addr 2f hdw1 0 
# [91348] RC  Loading RC Tx Mem  index d addr 30 hdw2 1000000 
# [91356] Preparing the IO Packet Header hdw0: 42000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [91460] EP  Initializing ep_tx_pkt_len_array single index 16 => hlen 3 dlen 1 hlen+dlen 4
# [91468] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [91468] RC  Initializing rc_tx_pkt_len_array single index e => hlen 3 dlen 0 hlen+dlen 3
# [91468] RC  Loading RC Tx Mem  index e addr 31 hdw0 a000001 
# [91468] RC  Loading RC Tx Mem  index e addr 32 hdw1 0 
# [91468] RC  Loading RC Tx Mem  index e addr 33 hdw2 1000000 
# [91476] Preparing the IO Packet Header hdw0: 02000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# 91501: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000001 @Addr = 0x04a
# 91509: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x04b
# 91517: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x04c
# [91520] INFO:  EP -> RC Packet 14 Data Compare Start! RC MEM SADR : 0000004a RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [91572] EP  Initializing ep_tx_pkt_len_array single index 17 => hlen 3 dlen 0 hlen+dlen 3
# [91580] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [91580] RC  Initializing rc_tx_pkt_len_array single index f => hlen 3 dlen 1 hlen+dlen 4
# [91580] RC  Loading RC Tx Mem  index f addr 34 hdw0 4a000001 
# [91580] RC  Loading RC Tx Mem  index f addr 35 hdw1 4 
# [91580] RC  Loading RC Tx Mem  index f addr 36 hdw2 1000000 
# [91580] RC  Loading RC Tx Mem  index f addr 37 data c00ca880 
# 92349: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x04d
# 92357: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x04e
# 92365: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x04f
# 92373: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xc00ca880 @Addr = 0x050
# [92376] INFO:  EP -> RC Packet 15 Data Compare Start! RC MEM SADR : 0000004d RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 93413: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x028
# 93421: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x029
# 93429: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x02a
# 93429: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x051
# 93437: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x02b
# 93437: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x052
# 93445: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x02c
# 93445: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x053
# 93453: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x02d
# 93453: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x15c6e52b @Addr = 0x054
# [93456] INFO:  EP -> RC Packet 16 Data Compare Start! RC MEM SADR : 00000051 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [93456] INFO:  RC -> EP Packet a Data Compare Start! EP MEM SADR : 00000028 EP PKTLEN 00000006 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [93456] ERROR:  EP Received Packet a Not MATCHED.  
# 
# [93456] INFO:  EP Packet a MEM SADR : 00000028 PKTLEN 00000006 
# 
# [93456] EP Packet Length 6 
# 
# [93456] EP Packet Header[0] = 4a000001 
# 
# [93456] EP Packet Header[1] = 4 
# 
# [93456] EP Packet Header[2] = 1000000 
# 
# [93456] EP Packet DATA[0] = a000000 
# 
# [93456] EP Packet DATA[1] = 4 
# 
# [93456] EP Packet DATA[2] = 1000000 
# 
# 94133: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x02000001 @Addr = 0x055
# 94141: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x056
# 94149: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x057
# [94152] INFO:  EP -> RC Packet 17 Data Compare Start! RC MEM SADR : 00000055 RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 02000001, Exp = 02000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 94157: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x02e
# 94165: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x02f
# 94173: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x030
# [94176] INFO:  RC -> EP Packet b Data Compare Start! EP MEM SADR : 0000002e EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [94176] ERROR:  EP Received Packet b Not MATCHED.  
# 
# [94176] INFO:  EP Packet b MEM SADR : 0000002e PKTLEN 00000003 
# 
# [94176] EP Packet Length 3 
# 
# [94176] EP Packet Header[0] = a000000 
# 
# [94176] EP Packet Header[1] = 4 
# 
# [94176] EP Packet Header[2] = 1000000 
# 
# 95149: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x031
# 95157: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x032
# 95165: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x033
# 95173: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0xc00ca880 @Addr = 0x034
# [95176] INFO:  RC -> EP Packet c Data Compare Start! EP MEM SADR : 00000031 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [95588] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0100000f hdw2: efabcd00 
# 
# [95684] EP  Initializing ep_tx_pkt_len_array single index 18 => hlen 3 dlen 1 hlen+dlen 4
# [95692] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [95796] EP  Initializing ep_tx_pkt_len_array single index 19 => hlen 3 dlen 1 hlen+dlen 4
# [95804] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [95900] EP  Initializing ep_tx_pkt_len_array single index 1a => hlen 3 dlen 0 hlen+dlen 3
# [95908] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [95908] RC  Initializing rc_tx_pkt_len_array single index 10 => hlen 3 dlen 1 hlen+dlen 4
# [95908] RC  Loading RC Tx Mem  index 10 addr 38 hdw0 4a000001 
# [95908] RC  Loading RC Tx Mem  index 10 addr 39 hdw1 4 
# [95908] RC  Loading RC Tx Mem  index 10 addr 3a hdw2 1000000 
# [95908] RC  Loading RC Tx Mem  index 10 addr 3b data 6cd445d9 
# 96789: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x058
# 96797: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x059
# 96805: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x05a
# 96813: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x6cd445d9 @Addr = 0x05b
# [96816] INFO:  EP -> RC Packet 18 Data Compare Start! RC MEM SADR : 00000058 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 97741: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x05c
# 97749: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x05d
# 97757: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x05e
# 97765: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x30999361 @Addr = 0x05f
# [97768] INFO:  EP -> RC Packet 19 Data Compare Start! RC MEM SADR : 0000005c RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 98485: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000001 @Addr = 0x060
# 98493: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x061
# 98501: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x062
# [98504] INFO:  EP -> RC Packet 1a Data Compare Start! RC MEM SADR : 00000060 RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [99916] Preparing the IO Packet Header hdw0: 42000001 hdw1: 0100000f hdw2: efabcd0a 
# 
# [100012] EP  Initializing ep_tx_pkt_len_array single index 1b => hlen 3 dlen 1 hlen+dlen 4
# [100020] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [100020] RC  Initializing rc_tx_pkt_len_array single index 11 => hlen 3 dlen 0 hlen+dlen 3
# [100020] RC  Loading RC Tx Mem  index 11 addr 3c hdw0 a000001 
# [100020] RC  Loading RC Tx Mem  index 11 addr 3d hdw1 0 
# [100020] RC  Loading RC Tx Mem  index 11 addr 3e hdw2 1000000 
# [100028] Preparing the IO Packet Header hdw0: 42000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [100132] EP  Initializing ep_tx_pkt_len_array single index 1c => hlen 3 dlen 1 hlen+dlen 4
# [100140] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [100140] RC  Initializing rc_tx_pkt_len_array single index 12 => hlen 3 dlen 0 hlen+dlen 3
# [100140] RC  Loading RC Tx Mem  index 12 addr 3f hdw0 a000001 
# [100140] RC  Loading RC Tx Mem  index 12 addr 40 hdw1 0 
# [100140] RC  Loading RC Tx Mem  index 12 addr 41 hdw2 1000000 
# [100148] Preparing the IO Packet Header hdw0: 02000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [100244] EP  Initializing ep_tx_pkt_len_array single index 1d => hlen 3 dlen 0 hlen+dlen 3
# [100252] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [100252] RC  Initializing rc_tx_pkt_len_array single index 13 => hlen 3 dlen 1 hlen+dlen 4
# [100252] RC  Loading RC Tx Mem  index 13 addr 42 hdw0 4a000001 
# [100252] RC  Loading RC Tx Mem  index 13 addr 43 hdw1 4 
# [100252] RC  Loading RC Tx Mem  index 13 addr 44 hdw2 1000000 
# [100252] RC  Loading RC Tx Mem  index 13 addr 45 data 478ab78f 
# 101085: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x063
# 101093: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x064
# 101101: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x065
# 101109: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x478ab78f @Addr = 0x066
# [101112] INFO:  EP -> RC Packet 1b Data Compare Start! RC MEM SADR : 00000063 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 101941: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x035
# 101949: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x036
# 101957: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x037
# 101965: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x038
# 101973: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x039
# 101981: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x03a
# [101984] INFO:  RC -> EP Packet d Data Compare Start! EP MEM SADR : 00000035 EP PKTLEN 00000006 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [101984] ERROR:  EP Received Packet d Not MATCHED.  
# 
# [101984] INFO:  EP Packet d MEM SADR : 00000035 PKTLEN 00000006 
# 
# [101984] EP Packet Length 6 
# 
# [101984] EP Packet Header[0] = 4a000001 
# 
# [101984] EP Packet Header[1] = 4 
# 
# [101984] EP Packet Header[2] = 1000000 
# 
# [101984] EP Packet DATA[0] = a000000 
# 
# [101984] EP Packet DATA[1] = 4 
# 
# [101984] EP Packet DATA[2] = 1000000 
# 
# 101989: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x067
# 101997: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x068
# 102005: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x069
# 102013: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0abe3315 @Addr = 0x06a
# [102016] INFO:  EP -> RC Packet 1c Data Compare Start! RC MEM SADR : 00000067 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 102701: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x03b
# 102709: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x03c
# 102717: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x03d
# [102720] INFO:  RC -> EP Packet e Data Compare Start! EP MEM SADR : 0000003b EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [102720] ERROR:  EP Received Packet e Not MATCHED.  
# 
# [102720] INFO:  EP Packet e MEM SADR : 0000003b PKTLEN 00000003 
# 
# [102720] EP Packet Length 3 
# 
# [102720] EP Packet Header[0] = a000000 
# 
# [102720] EP Packet Header[1] = 4 
# 
# [102720] EP Packet Header[2] = 1000000 
# 
# 102853: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x02000001 @Addr = 0x06b
# 102861: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x06c
# 102869: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x06d
# [102872] INFO:  EP -> RC Packet 1d Data Compare Start! RC MEM SADR : 0000006b RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 02000001, Exp = 02000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 103709: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x03e
# 103717: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x03f
# 103725: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x040
# 103733: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x478ab78f @Addr = 0x041
# [103736] INFO:  RC -> EP Packet f Data Compare Start! EP MEM SADR : 0000003e EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [104260] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0100000f hdw2: efabcd00 
# 
# [104356] EP  Initializing ep_tx_pkt_len_array single index 1e => hlen 3 dlen 1 hlen+dlen 4
# [104364] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [104468] EP  Initializing ep_tx_pkt_len_array single index 1f => hlen 3 dlen 1 hlen+dlen 4
# [104476] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [104572] EP  Initializing ep_tx_pkt_len_array single index 20 => hlen 3 dlen 0 hlen+dlen 3
# [104580] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [104580] RC  Initializing rc_tx_pkt_len_array single index 14 => hlen 3 dlen 1 hlen+dlen 4
# [104580] RC  Loading RC Tx Mem  index 14 addr 46 hdw0 4a000001 
# [104580] RC  Loading RC Tx Mem  index 14 addr 47 hdw1 4 
# [104580] RC  Loading RC Tx Mem  index 14 addr 48 hdw2 1000000 
# [104580] RC  Loading RC Tx Mem  index 14 addr 49 data 74bb97e9 
# 105453: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x06e
# 105461: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x06f
# 105469: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x070
# 105477: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x74bb97e9 @Addr = 0x071
# [105480] INFO:  EP -> RC Packet 1e Data Compare Start! RC MEM SADR : 0000006e RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 106565: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x072
# 106573: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x073
# 106581: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x074
# 106589: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x962e9a2c @Addr = 0x075
# [106592] INFO:  EP -> RC Packet 1f Data Compare Start! RC MEM SADR : 00000072 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 107221: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000001 @Addr = 0x076
# 107229: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x077
# 107237: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x078
# [107240] INFO:  EP -> RC Packet 20 Data Compare Start! RC MEM SADR : 00000076 RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [108588] Preparing the IO Packet Header hdw0: 42000001 hdw1: 0100000f hdw2: efabcd0a 
# 
# [108684] EP  Initializing ep_tx_pkt_len_array single index 21 => hlen 3 dlen 1 hlen+dlen 4
# [108692] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [108692] RC  Initializing rc_tx_pkt_len_array single index 15 => hlen 3 dlen 0 hlen+dlen 3
# [108692] RC  Loading RC Tx Mem  index 15 addr 4a hdw0 a000001 
# [108692] RC  Loading RC Tx Mem  index 15 addr 4b hdw1 0 
# [108692] RC  Loading RC Tx Mem  index 15 addr 4c hdw2 1000000 
# [108700] Preparing the IO Packet Header hdw0: 42000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [108804] EP  Initializing ep_tx_pkt_len_array single index 22 => hlen 3 dlen 1 hlen+dlen 4
# [108812] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [108812] RC  Initializing rc_tx_pkt_len_array single index 16 => hlen 3 dlen 0 hlen+dlen 3
# [108812] RC  Loading RC Tx Mem  index 16 addr 4d hdw0 a000001 
# [108812] RC  Loading RC Tx Mem  index 16 addr 4e hdw1 0 
# [108812] RC  Loading RC Tx Mem  index 16 addr 4f hdw2 1000000 
# [108820] Preparing the IO Packet Header hdw0: 02000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [108916] EP  Initializing ep_tx_pkt_len_array single index 23 => hlen 3 dlen 0 hlen+dlen 3
# [108924] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [108924] RC  Initializing rc_tx_pkt_len_array single index 17 => hlen 3 dlen 1 hlen+dlen 4
# [108924] RC  Loading RC Tx Mem  index 17 addr 50 hdw0 4a000001 
# [108924] RC  Loading RC Tx Mem  index 17 addr 51 hdw1 4 
# [108924] RC  Loading RC Tx Mem  index 17 addr 52 hdw2 1000000 
# [108924] RC  Loading RC Tx Mem  index 17 addr 53 data 3a972975 
# 109821: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x079
# 109829: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x07a
# 109837: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x07b
# 109845: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x3a972975 @Addr = 0x07c
# [109848] INFO:  EP -> RC Packet 21 Data Compare Start! RC MEM SADR : 00000079 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 110725: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x07d
# 110733: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x07e
# 110741: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x07f
# 110749: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xbe7e567c @Addr = 0x080
# [110752] INFO:  EP -> RC Packet 22 Data Compare Start! RC MEM SADR : 0000007d RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 111277: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x042
# 111285: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x043
# 111293: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x044
# 111301: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x045
# 111309: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x046
# 111317: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x047
# [111320] INFO:  RC -> EP Packet 10 Data Compare Start! EP MEM SADR : 00000042 EP PKTLEN 00000006 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [111320] ERROR:  EP Received Packet 10 Not MATCHED.  
# 
# [111320] INFO:  EP Packet 10 MEM SADR : 00000042 PKTLEN 00000006 
# 
# [111320] EP Packet Length 6 
# 
# [111320] EP Packet Header[0] = 4a000001 
# 
# [111320] EP Packet Header[1] = 4 
# 
# [111320] EP Packet Header[2] = 1000000 
# 
# [111320] EP Packet DATA[0] = a000000 
# 
# [111320] EP Packet DATA[1] = 4 
# 
# [111320] EP Packet DATA[2] = 1000000 
# 
# 111589: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x02000001 @Addr = 0x081
# 111597: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x082
# 111605: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x083
# [111608] INFO:  EP -> RC Packet 23 Data Compare Start! RC MEM SADR : 00000081 RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 02000001, Exp = 02000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 112085: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x048
# 112093: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x049
# 112101: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x04a
# [112104] INFO:  RC -> EP Packet 11 Data Compare Start! EP MEM SADR : 00000048 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [112104] ERROR:  EP Received Packet 11 Not MATCHED.  
# 
# [112104] INFO:  EP Packet 11 MEM SADR : 00000048 PKTLEN 00000003 
# 
# [112104] EP Packet Length 3 
# 
# [112104] EP Packet Header[0] = a000000 
# 
# [112104] EP Packet Header[1] = 4 
# 
# [112104] EP Packet Header[2] = 1000000 
# 
# [112932] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0100000f hdw2: efabcd00 
# 
# 113013: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x04b
# 113021: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x04c
# [113028] EP  Initializing ep_tx_pkt_len_array single index 24 => hlen 3 dlen 1 hlen+dlen 4
# 113029: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x04d
# [113036] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 01000000 hdw2: efabcd00 
# 
# 113037: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x3a972975 @Addr = 0x04e
# [113040] INFO:  RC -> EP Packet 12 Data Compare Start! EP MEM SADR : 0000004b EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [113140] EP  Initializing ep_tx_pkt_len_array single index 25 => hlen 3 dlen 1 hlen+dlen 4
# [113148] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [113244] EP  Initializing ep_tx_pkt_len_array single index 26 => hlen 3 dlen 0 hlen+dlen 3
# [113252] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [113252] RC  Initializing rc_tx_pkt_len_array single index 18 => hlen 3 dlen 1 hlen+dlen 4
# [113252] RC  Loading RC Tx Mem  index 18 addr 54 hdw0 4a000001 
# [113252] RC  Loading RC Tx Mem  index 18 addr 55 hdw1 4 
# [113252] RC  Loading RC Tx Mem  index 18 addr 56 hdw2 1000000 
# [113252] RC  Loading RC Tx Mem  index 18 addr 57 data 49f53b93 
# 117221: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x084
# 117229: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x085
# 117237: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x086
# 117245: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x49f53b93 @Addr = 0x087
# [117248] INFO:  EP -> RC Packet 24 Data Compare Start! RC MEM SADR : 00000084 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [117260] Preparing the IO Packet Header hdw0: 42000001 hdw1: 0100000f hdw2: efabcd0a 
# 
# [117356] EP  Initializing ep_tx_pkt_len_array single index 27 => hlen 3 dlen 1 hlen+dlen 4
# [117364] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [117364] RC  Initializing rc_tx_pkt_len_array single index 19 => hlen 3 dlen 0 hlen+dlen 3
# [117364] RC  Loading RC Tx Mem  index 19 addr 58 hdw0 a000001 
# [117364] RC  Loading RC Tx Mem  index 19 addr 59 hdw1 0 
# [117364] RC  Loading RC Tx Mem  index 19 addr 5a hdw2 1000000 
# [117372] Preparing the IO Packet Header hdw0: 42000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [117476] EP  Initializing ep_tx_pkt_len_array single index 28 => hlen 3 dlen 1 hlen+dlen 4
# [117484] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [117484] RC  Initializing rc_tx_pkt_len_array single index 1a => hlen 3 dlen 0 hlen+dlen 3
# [117484] RC  Loading RC Tx Mem  index 1a addr 5b hdw0 a000001 
# [117484] RC  Loading RC Tx Mem  index 1a addr 5c hdw1 0 
# [117484] RC  Loading RC Tx Mem  index 1a addr 5d hdw2 1000000 
# [117492] Preparing the IO Packet Header hdw0: 02000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# 117509: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x088
# 117517: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x089
# 117525: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x08a
# 117533: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xe5880ecb @Addr = 0x08b
# [117536] INFO:  EP -> RC Packet 25 Data Compare Start! RC MEM SADR : 00000088 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [117588] EP  Initializing ep_tx_pkt_len_array single index 29 => hlen 3 dlen 0 hlen+dlen 3
# [117596] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [117596] RC  Initializing rc_tx_pkt_len_array single index 1b => hlen 3 dlen 1 hlen+dlen 4
# [117596] RC  Loading RC Tx Mem  index 1b addr 5e hdw0 4a000001 
# [117596] RC  Loading RC Tx Mem  index 1b addr 5f hdw1 4 
# [117596] RC  Loading RC Tx Mem  index 1b addr 60 hdw2 1000000 
# [117596] RC  Loading RC Tx Mem  index 1b addr 61 data c30b0886 
# 117685: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000001 @Addr = 0x08c
# 117693: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x08d
# 117701: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x08e
# [117704] INFO:  EP -> RC Packet 26 Data Compare Start! RC MEM SADR : 0000008c RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 118557: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x08f
# 118565: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x090
# 118573: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x091
# 118581: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xc30b0886 @Addr = 0x092
# [118584] INFO:  EP -> RC Packet 27 Data Compare Start! RC MEM SADR : 0000008f RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 119821: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x04f
# 119829: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x050
# 119837: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x051
# 119845: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x052
# 119853: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x053
# 119861: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x054
# [119864] INFO:  RC -> EP Packet 13 Data Compare Start! EP MEM SADR : 0000004f EP PKTLEN 00000006 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [119864] ERROR:  EP Received Packet 13 Not MATCHED.  
# 
# [119864] INFO:  EP Packet 13 MEM SADR : 0000004f PKTLEN 00000006 
# 
# [119864] EP Packet Length 6 
# 
# [119864] EP Packet Header[0] = 4a000001 
# 
# [119864] EP Packet Header[1] = 4 
# 
# [119864] EP Packet Header[2] = 1000000 
# 
# [119864] EP Packet DATA[0] = a000000 
# 
# [119864] EP Packet DATA[1] = 4 
# 
# [119864] EP Packet DATA[2] = 1000000 
# 
# [121604] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0100000f hdw2: efabcd00 
# 
# 121637: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x093
# 121645: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x094
# 121653: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x095
# 121661: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xc571e88a @Addr = 0x096
# [121664] INFO:  EP -> RC Packet 28 Data Compare Start! RC MEM SADR : 00000093 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [121700] EP  Initializing ep_tx_pkt_len_array single index 2a => hlen 3 dlen 1 hlen+dlen 4
# [121708] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [121812] EP  Initializing ep_tx_pkt_len_array single index 2b => hlen 3 dlen 1 hlen+dlen 4
# [121820] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 01000000 hdw2: efabcd00 
# 
# 121893: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x02000001 @Addr = 0x097
# 121901: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x098
# 121909: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x099
# [121912] INFO:  EP -> RC Packet 29 Data Compare Start! RC MEM SADR : 00000097 RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 02000001, Exp = 02000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [121916] EP  Initializing ep_tx_pkt_len_array single index 2c => hlen 3 dlen 0 hlen+dlen 3
# [121924] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [121924] RC  Initializing rc_tx_pkt_len_array single index 1c => hlen 3 dlen 1 hlen+dlen 4
# [121924] RC  Loading RC Tx Mem  index 1c addr 62 hdw0 4a000001 
# [121924] RC  Loading RC Tx Mem  index 1c addr 63 hdw1 4 
# [121924] RC  Loading RC Tx Mem  index 1c addr 64 hdw2 1000000 
# [121924] RC  Loading RC Tx Mem  index 1c addr 65 data cbcc1897 
# 122341: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x055
# 122349: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x056
# 122357: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x057
# [122360] INFO:  RC -> EP Packet 14 Data Compare Start! EP MEM SADR : 00000055 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [122360] ERROR:  EP Received Packet 14 Not MATCHED.  
# 
# [122360] INFO:  EP Packet 14 MEM SADR : 00000055 PKTLEN 00000003 
# 
# [122360] EP Packet Length 3 
# 
# [122360] EP Packet Header[0] = a000000 
# 
# [122360] EP Packet Header[1] = 4 
# 
# [122360] EP Packet Header[2] = 1000000 
# 
# 122925: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x09a
# 122933: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x09b
# 122941: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x09c
# 122949: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xcbcc1897 @Addr = 0x09d
# [122952] INFO:  EP -> RC Packet 2a Data Compare Start! RC MEM SADR : 0000009a RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 123749: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x058
# 123757: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x059
# 123765: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x05a
# 123773: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0xc30b0886 @Addr = 0x05b
# [123776] INFO:  RC -> EP Packet 15 Data Compare Start! EP MEM SADR : 00000058 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# 123829: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x09e
# 123837: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x09f
# 123845: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x0a0
# 123853: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xa7a0e64f @Addr = 0x0a1
# [123856] INFO:  EP -> RC Packet 2b Data Compare Start! RC MEM SADR : 0000009e RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [125932] Preparing the IO Packet Header hdw0: 42000001 hdw1: 0100000f hdw2: efabcd0a 
# 
# 125933: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000001 @Addr = 0x0a2
# 125941: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0a3
# 125949: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x0a4
# [125952] INFO:  EP -> RC Packet 2c Data Compare Start! RC MEM SADR : 000000a2 RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [126028] EP  Initializing ep_tx_pkt_len_array single index 2d => hlen 3 dlen 1 hlen+dlen 4
# [126036] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [126036] RC  Initializing rc_tx_pkt_len_array single index 1d => hlen 3 dlen 0 hlen+dlen 3
# [126036] RC  Loading RC Tx Mem  index 1d addr 66 hdw0 a000001 
# [126036] RC  Loading RC Tx Mem  index 1d addr 67 hdw1 0 
# [126036] RC  Loading RC Tx Mem  index 1d addr 68 hdw2 1000000 
# [126044] Preparing the IO Packet Header hdw0: 42000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [126148] EP  Initializing ep_tx_pkt_len_array single index 2e => hlen 3 dlen 1 hlen+dlen 4
# [126156] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [126156] RC  Initializing rc_tx_pkt_len_array single index 1e => hlen 3 dlen 0 hlen+dlen 3
# [126156] RC  Loading RC Tx Mem  index 1e addr 69 hdw0 a000001 
# [126156] RC  Loading RC Tx Mem  index 1e addr 6a hdw1 0 
# [126156] RC  Loading RC Tx Mem  index 1e addr 6b hdw2 1000000 
# [126164] Preparing the IO Packet Header hdw0: 02000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [126260] EP  Initializing ep_tx_pkt_len_array single index 2f => hlen 3 dlen 0 hlen+dlen 3
# [126268] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [126268] RC  Initializing rc_tx_pkt_len_array single index 1f => hlen 3 dlen 1 hlen+dlen 4
# [126268] RC  Loading RC Tx Mem  index 1f addr 6c hdw0 4a000001 
# [126268] RC  Loading RC Tx Mem  index 1f addr 6d hdw1 4 
# [126268] RC  Loading RC Tx Mem  index 1f addr 6e hdw2 1000000 
# [126268] RC  Loading RC Tx Mem  index 1f addr 6f data 4cae2399 
# 127293: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x0a5
# 127301: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x0a6
# 127309: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x0a7
# 127317: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4cae2399 @Addr = 0x0a8
# [127320] INFO:  EP -> RC Packet 2d Data Compare Start! RC MEM SADR : 000000a5 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 128197: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x0a9
# 128205: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0aa
# 128213: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x0ab
# 128221: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x5ff347bf @Addr = 0x0ac
# [128224] INFO:  EP -> RC Packet 2e Data Compare Start! RC MEM SADR : 000000a9 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 128365: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x05c
# 128373: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x05d
# 128381: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x05e
# 128389: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x05f
# 128397: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x060
# 128405: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x061
# [128408] INFO:  RC -> EP Packet 16 Data Compare Start! EP MEM SADR : 0000005c EP PKTLEN 00000006 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [128408] ERROR:  EP Received Packet 16 Not MATCHED.  
# 
# [128408] INFO:  EP Packet 16 MEM SADR : 0000005c PKTLEN 00000006 
# 
# [128408] EP Packet Length 6 
# 
# [128408] EP Packet Header[0] = 4a000001 
# 
# [128408] EP Packet Header[1] = 4 
# 
# [128408] EP Packet Header[2] = 1000000 
# 
# [128408] EP Packet DATA[0] = a000000 
# 
# [128408] EP Packet DATA[1] = 4 
# 
# [128408] EP Packet DATA[2] = 1000000 
# 
# 129085: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x02000001 @Addr = 0x0ad
# 129093: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0ae
# 129101: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x0af
# [129104] INFO:  EP -> RC Packet 2f Data Compare Start! RC MEM SADR : 000000ad RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 02000001, Exp = 02000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 129165: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x062
# 129173: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x063
# 129181: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x064
# [129184] INFO:  RC -> EP Packet 17 Data Compare Start! EP MEM SADR : 00000062 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [129184] ERROR:  EP Received Packet 17 Not MATCHED.  
# 
# [129184] INFO:  EP Packet 17 MEM SADR : 00000062 PKTLEN 00000003 
# 
# [129184] EP Packet Length 3 
# 
# [129184] EP Packet Header[0] = a000000 
# 
# [129184] EP Packet Header[1] = 4 
# 
# [129184] EP Packet Header[2] = 1000000 
# 
# 130125: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x065
# 130133: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x066
# 130141: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x067
# 130149: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4cae2399 @Addr = 0x068
# [130152] INFO:  RC -> EP Packet 18 Data Compare Start! EP MEM SADR : 00000065 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [130276] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0100000f hdw2: efabcd00 
# 
# [130372] EP  Initializing ep_tx_pkt_len_array single index 30 => hlen 3 dlen 1 hlen+dlen 4
# [130380] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [130484] EP  Initializing ep_tx_pkt_len_array single index 31 => hlen 3 dlen 1 hlen+dlen 4
# [130492] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [130588] EP  Initializing ep_tx_pkt_len_array single index 32 => hlen 3 dlen 0 hlen+dlen 3
# [130596] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [130596] RC  Initializing rc_tx_pkt_len_array single index 20 => hlen 3 dlen 1 hlen+dlen 4
# [130596] RC  Loading RC Tx Mem  index 20 addr 70 hdw0 4a000001 
# [130596] RC  Loading RC Tx Mem  index 20 addr 71 hdw1 4 
# [130596] RC  Loading RC Tx Mem  index 20 addr 72 hdw2 1000000 
# [130596] RC  Loading RC Tx Mem  index 20 addr 73 data 7547e3ea 
# 131741: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x0b0
# 131749: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x0b1
# 131757: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x0b2
# 131765: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x7547e3ea @Addr = 0x0b3
# [131768] INFO:  EP -> RC Packet 30 Data Compare Start! RC MEM SADR : 000000b0 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 132605: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x0b4
# 132613: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0b5
# 132621: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x0b6
# 132629: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x7159e1e2 @Addr = 0x0b7
# [132632] INFO:  EP -> RC Packet 31 Data Compare Start! RC MEM SADR : 000000b4 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 133429: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000001 @Addr = 0x0b8
# 133437: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0b9
# 133445: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x0ba
# [133448] INFO:  EP -> RC Packet 32 Data Compare Start! RC MEM SADR : 000000b8 RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [134604] Preparing the IO Packet Header hdw0: 42000001 hdw1: 0100000f hdw2: efabcd0a 
# 
# [134700] EP  Initializing ep_tx_pkt_len_array single index 33 => hlen 3 dlen 1 hlen+dlen 4
# [134708] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [134708] RC  Initializing rc_tx_pkt_len_array single index 21 => hlen 3 dlen 0 hlen+dlen 3
# [134708] RC  Loading RC Tx Mem  index 21 addr 74 hdw0 a000001 
# [134708] RC  Loading RC Tx Mem  index 21 addr 75 hdw1 0 
# [134708] RC  Loading RC Tx Mem  index 21 addr 76 hdw2 1000000 
# [134716] Preparing the IO Packet Header hdw0: 42000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [134820] EP  Initializing ep_tx_pkt_len_array single index 34 => hlen 3 dlen 1 hlen+dlen 4
# [134828] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [134828] RC  Initializing rc_tx_pkt_len_array single index 22 => hlen 3 dlen 0 hlen+dlen 3
# [134828] RC  Loading RC Tx Mem  index 22 addr 77 hdw0 a000001 
# [134828] RC  Loading RC Tx Mem  index 22 addr 78 hdw1 0 
# [134828] RC  Loading RC Tx Mem  index 22 addr 79 hdw2 1000000 
# [134836] Preparing the IO Packet Header hdw0: 02000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [134932] EP  Initializing ep_tx_pkt_len_array single index 35 => hlen 3 dlen 0 hlen+dlen 3
# [134940] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [134940] RC  Initializing rc_tx_pkt_len_array single index 23 => hlen 3 dlen 1 hlen+dlen 4
# [134940] RC  Loading RC Tx Mem  index 23 addr 7a hdw0 4a000001 
# [134940] RC  Loading RC Tx Mem  index 23 addr 7b hdw1 4 
# [134940] RC  Loading RC Tx Mem  index 23 addr 7c hdw2 1000000 
# [134940] RC  Loading RC Tx Mem  index 23 addr 7d data 3503056a 
# 136029: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x0bb
# 136037: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x0bc
# 136045: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x0bd
# 136053: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x3503056a @Addr = 0x0be
# [136056] INFO:  EP -> RC Packet 33 Data Compare Start! RC MEM SADR : 000000bb RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 136909: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x069
# 136917: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x06a
# 136925: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x06b
# 136933: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x06c
# 136933: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x0bf
# 136941: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x06d
# 136941: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0c0
# 136949: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x06e
# 136949: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x0c1
# [136952] INFO:  RC -> EP Packet 19 Data Compare Start! EP MEM SADR : 00000069 EP PKTLEN 00000006 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [136952] ERROR:  EP Received Packet 19 Not MATCHED.  
# 
# [136952] INFO:  EP Packet 19 MEM SADR : 00000069 PKTLEN 00000006 
# 
# [136952] EP Packet Length 6 
# 
# [136952] EP Packet Header[0] = 4a000001 
# 
# [136952] EP Packet Header[1] = 4 
# 
# [136952] EP Packet Header[2] = 1000000 
# 
# [136952] EP Packet DATA[0] = a000000 
# 
# [136952] EP Packet DATA[1] = 4 
# 
# [136952] EP Packet DATA[2] = 1000000 
# 
# 136957: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x9ca88c39 @Addr = 0x0c2
# [136960] INFO:  EP -> RC Packet 34 Data Compare Start! RC MEM SADR : 000000bf RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 137717: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x06f
# 137725: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x070
# 137733: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x071
# [137736] INFO:  RC -> EP Packet 1a Data Compare Start! EP MEM SADR : 0000006f EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [137736] ERROR:  EP Received Packet 1a Not MATCHED.  
# 
# [137736] INFO:  EP Packet 1a MEM SADR : 0000006f PKTLEN 00000003 
# 
# [137736] EP Packet Length 3 
# 
# [137736] EP Packet Header[0] = a000000 
# 
# [137736] EP Packet Header[1] = 4 
# 
# [137736] EP Packet Header[2] = 1000000 
# 
# 137797: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x02000001 @Addr = 0x0c3
# 137805: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0c4
# 137813: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x0c5
# [137816] INFO:  EP -> RC Packet 35 Data Compare Start! RC MEM SADR : 000000c3 RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 02000001, Exp = 02000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 138645: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x072
# 138653: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x073
# 138661: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x074
# 138669: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x3503056a @Addr = 0x075
# [138672] INFO:  RC -> EP Packet 1b Data Compare Start! EP MEM SADR : 00000072 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [138948] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0100000f hdw2: efabcd00 
# 
# [139044] EP  Initializing ep_tx_pkt_len_array single index 36 => hlen 3 dlen 1 hlen+dlen 4
# [139052] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [139156] EP  Initializing ep_tx_pkt_len_array single index 37 => hlen 3 dlen 1 hlen+dlen 4
# [139164] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [139260] EP  Initializing ep_tx_pkt_len_array single index 38 => hlen 3 dlen 0 hlen+dlen 3
# [139268] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [139268] RC  Initializing rc_tx_pkt_len_array single index 24 => hlen 3 dlen 1 hlen+dlen 4
# [139268] RC  Loading RC Tx Mem  index 24 addr 7e hdw0 4a000001 
# [139268] RC  Loading RC Tx Mem  index 24 addr 7f hdw1 4 
# [139268] RC  Loading RC Tx Mem  index 24 addr 80 hdw2 1000000 
# [139268] RC  Loading RC Tx Mem  index 24 addr 81 data 8cd8fe19 
# 142045: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x0c6
# 142053: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x0c7
# 142061: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x0c8
# 142069: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x8cd8fe19 @Addr = 0x0c9
# [142072] INFO:  EP -> RC Packet 36 Data Compare Start! RC MEM SADR : 000000c6 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 142333: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x0ca
# 142341: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0cb
# 142349: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x0cc
# 142357: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xcc357898 @Addr = 0x0cd
# [142360] INFO:  EP -> RC Packet 37 Data Compare Start! RC MEM SADR : 000000ca RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 142589: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000001 @Addr = 0x0ce
# 142597: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0cf
# 142605: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x0d0
# [142608] INFO:  EP -> RC Packet 38 Data Compare Start! RC MEM SADR : 000000ce RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [143276] Preparing the IO Packet Header hdw0: 42000001 hdw1: 0100000f hdw2: efabcd0a 
# 
# [143372] EP  Initializing ep_tx_pkt_len_array single index 39 => hlen 3 dlen 1 hlen+dlen 4
# [143380] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [143380] RC  Initializing rc_tx_pkt_len_array single index 25 => hlen 3 dlen 0 hlen+dlen 3
# [143380] RC  Loading RC Tx Mem  index 25 addr 82 hdw0 a000001 
# [143380] RC  Loading RC Tx Mem  index 25 addr 83 hdw1 0 
# [143380] RC  Loading RC Tx Mem  index 25 addr 84 hdw2 1000000 
# [143388] Preparing the IO Packet Header hdw0: 42000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [143492] EP  Initializing ep_tx_pkt_len_array single index 3a => hlen 3 dlen 1 hlen+dlen 4
# [143500] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [143500] RC  Initializing rc_tx_pkt_len_array single index 26 => hlen 3 dlen 0 hlen+dlen 3
# [143500] RC  Loading RC Tx Mem  index 26 addr 85 hdw0 a000001 
# [143500] RC  Loading RC Tx Mem  index 26 addr 86 hdw1 0 
# [143500] RC  Loading RC Tx Mem  index 26 addr 87 hdw2 1000000 
# [143508] Preparing the IO Packet Header hdw0: 02000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [143604] EP  Initializing ep_tx_pkt_len_array single index 3b => hlen 3 dlen 0 hlen+dlen 3
# [143612] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [143612] RC  Initializing rc_tx_pkt_len_array single index 27 => hlen 3 dlen 1 hlen+dlen 4
# [143612] RC  Loading RC Tx Mem  index 27 addr 88 hdw0 4a000001 
# [143612] RC  Loading RC Tx Mem  index 27 addr 89 hdw1 4 
# [143612] RC  Loading RC Tx Mem  index 27 addr 8a hdw2 1000000 
# [143612] RC  Loading RC Tx Mem  index 27 addr 8b data b5d2f86b 
# 144765: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x0d1
# 144773: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x0d2
# 144781: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x0d3
# 144789: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xb5d2f86b @Addr = 0x0d4
# [144792] INFO:  EP -> RC Packet 39 Data Compare Start! RC MEM SADR : 000000d1 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 146341: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x076
# 146349: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x077
# 146357: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x078
# 146365: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x079
# 146373: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x07a
# 146381: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x07b
# [146384] INFO:  RC -> EP Packet 1c Data Compare Start! EP MEM SADR : 00000076 EP PKTLEN 00000006 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [146384] ERROR:  EP Received Packet 1c Not MATCHED.  
# 
# [146384] INFO:  EP Packet 1c MEM SADR : 00000076 PKTLEN 00000006 
# 
# [146384] EP Packet Length 6 
# 
# [146384] EP Packet Header[0] = 4a000001 
# 
# [146384] EP Packet Header[1] = 4 
# 
# [146384] EP Packet Header[2] = 1000000 
# 
# [146384] EP Packet DATA[0] = a000000 
# 
# [146384] EP Packet DATA[1] = 4 
# 
# [146384] EP Packet DATA[2] = 1000000 
# 
# 146565: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x0d5
# 146573: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0d6
# 146581: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x0d7
# 146589: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x469f978d @Addr = 0x0d8
# [146592] INFO:  EP -> RC Packet 3a Data Compare Start! RC MEM SADR : 000000d5 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 146741: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x02000001 @Addr = 0x0d9
# 146749: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0da
# 146757: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x0db
# [146760] INFO:  EP -> RC Packet 3b Data Compare Start! RC MEM SADR : 000000d9 RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 02000001, Exp = 02000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [147620] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0100000f hdw2: efabcd00 
# 
# [147716] EP  Initializing ep_tx_pkt_len_array single index 3c => hlen 3 dlen 1 hlen+dlen 4
# [147724] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [147828] EP  Initializing ep_tx_pkt_len_array single index 3d => hlen 3 dlen 1 hlen+dlen 4
# [147836] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 01000000 hdw2: efabcd00 
# 
# 147925: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x07c
# [147932] EP  Initializing ep_tx_pkt_len_array single index 3e => hlen 3 dlen 0 hlen+dlen 3
# 147933: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x07d
# [147940] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [147940] RC  Initializing rc_tx_pkt_len_array single index 28 => hlen 3 dlen 1 hlen+dlen 4
# [147940] RC  Loading RC Tx Mem  index 28 addr 8c hdw0 4a000001 
# [147940] RC  Loading RC Tx Mem  index 28 addr 8d hdw1 4 
# [147940] RC  Loading RC Tx Mem  index 28 addr 8e hdw2 1000000 
# [147940] RC  Loading RC Tx Mem  index 28 addr 8f data 3cc49d79 
# 147941: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x07e
# [147944] INFO:  RC -> EP Packet 1d Data Compare Start! EP MEM SADR : 0000007c EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [147944] ERROR:  EP Received Packet 1d Not MATCHED.  
# 
# [147944] INFO:  EP Packet 1d MEM SADR : 0000007c PKTLEN 00000003 
# 
# [147944] EP Packet Length 3 
# 
# [147944] EP Packet Header[0] = a000000 
# 
# [147944] EP Packet Header[1] = 4 
# 
# [147944] EP Packet Header[2] = 1000000 
# 
# 148853: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x07f
# 148861: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x080
# 148869: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x081
# 148877: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0xb5d2f86b @Addr = 0x082
# [148880] INFO:  RC -> EP Packet 1e Data Compare Start! EP MEM SADR : 0000007f EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# 149133: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x0dc
# 149141: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x0dd
# 149149: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x0de
# 149157: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x3cc49d79 @Addr = 0x0df
# [149160] INFO:  EP -> RC Packet 3c Data Compare Start! RC MEM SADR : 000000dc RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 150789: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x0e0
# 150797: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0e1
# 150805: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x0e2
# 150813: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40d3eb81 @Addr = 0x0e3
# [150816] INFO:  EP -> RC Packet 3d Data Compare Start! RC MEM SADR : 000000e0 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 150965: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000001 @Addr = 0x0e4
# 150973: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0e5
# 150981: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x0e6
# [150984] INFO:  EP -> RC Packet 3e Data Compare Start! RC MEM SADR : 000000e4 RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [151948] Preparing the IO Packet Header hdw0: 42000001 hdw1: 0100000f hdw2: efabcd0a 
# 
# [152044] EP  Initializing ep_tx_pkt_len_array single index 3f => hlen 3 dlen 1 hlen+dlen 4
# [152052] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [152052] RC  Initializing rc_tx_pkt_len_array single index 29 => hlen 3 dlen 0 hlen+dlen 3
# [152052] RC  Loading RC Tx Mem  index 29 addr 90 hdw0 a000001 
# [152052] RC  Loading RC Tx Mem  index 29 addr 91 hdw1 0 
# [152052] RC  Loading RC Tx Mem  index 29 addr 92 hdw2 1000000 
# [152060] Preparing the IO Packet Header hdw0: 42000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [152164] EP  Initializing ep_tx_pkt_len_array single index 40 => hlen 3 dlen 1 hlen+dlen 4
# [152172] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [152172] RC  Initializing rc_tx_pkt_len_array single index 2a => hlen 3 dlen 0 hlen+dlen 3
# [152172] RC  Loading RC Tx Mem  index 2a addr 93 hdw0 a000001 
# [152172] RC  Loading RC Tx Mem  index 2a addr 94 hdw1 0 
# [152172] RC  Loading RC Tx Mem  index 2a addr 95 hdw2 1000000 
# [152180] Preparing the IO Packet Header hdw0: 02000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [152276] EP  Initializing ep_tx_pkt_len_array single index 41 => hlen 3 dlen 0 hlen+dlen 3
# [152284] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [152284] RC  Initializing rc_tx_pkt_len_array single index 2b => hlen 3 dlen 1 hlen+dlen 4
# [152284] RC  Loading RC Tx Mem  index 2b addr 96 hdw0 4a000001 
# [152284] RC  Loading RC Tx Mem  index 2b addr 97 hdw1 4 
# [152284] RC  Loading RC Tx Mem  index 2b addr 98 hdw2 1000000 
# [152284] RC  Loading RC Tx Mem  index 2b addr 99 data 967a0a2c 
# 152669: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x0e7
# 152677: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x0e8
# 152685: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x0e9
# 152693: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x967a0a2c @Addr = 0x0ea
# [152696] INFO:  EP -> RC Packet 3f Data Compare Start! RC MEM SADR : 000000e7 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 153573: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x0eb
# 153581: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0ec
# 153589: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x0ed
# 153597: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xbb29fe76 @Addr = 0x0ee
# [153600] INFO:  EP -> RC Packet 40 Data Compare Start! RC MEM SADR : 000000eb RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 153997: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x083
# 154005: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x084
# 154013: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x085
# 154021: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x086
# 154029: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x087
# 154037: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x088
# [154040] INFO:  RC -> EP Packet 1f Data Compare Start! EP MEM SADR : 00000083 EP PKTLEN 00000006 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [154040] ERROR:  EP Received Packet 1f Not MATCHED.  
# 
# [154040] INFO:  EP Packet 1f MEM SADR : 00000083 PKTLEN 00000006 
# 
# [154040] EP Packet Length 6 
# 
# [154040] EP Packet Header[0] = 4a000001 
# 
# [154040] EP Packet Header[1] = 4 
# 
# [154040] EP Packet Header[2] = 1000000 
# 
# [154040] EP Packet DATA[0] = a000000 
# 
# [154040] EP Packet DATA[1] = 4 
# 
# [154040] EP Packet DATA[2] = 1000000 
# 
# 154797: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x089
# 154805: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x08a
# 154813: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x08b
# [154816] INFO:  RC -> EP Packet 20 Data Compare Start! EP MEM SADR : 00000089 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [154816] ERROR:  EP Received Packet 20 Not MATCHED.  
# 
# [154816] INFO:  EP Packet 20 MEM SADR : 00000089 PKTLEN 00000003 
# 
# [154816] EP Packet Length 3 
# 
# [154816] EP Packet Header[0] = a000000 
# 
# [154816] EP Packet Header[1] = 4 
# 
# [154816] EP Packet Header[2] = 1000000 
# 
# 155093: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x02000001 @Addr = 0x0ef
# 155101: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0f0
# 155109: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x0f1
# [155112] INFO:  EP -> RC Packet 41 Data Compare Start! RC MEM SADR : 000000ef RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 02000001, Exp = 02000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [156292] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0100000f hdw2: efabcd00 
# 
# [156388] EP  Initializing ep_tx_pkt_len_array single index 42 => hlen 3 dlen 1 hlen+dlen 4
# [156396] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [156500] EP  Initializing ep_tx_pkt_len_array single index 43 => hlen 3 dlen 1 hlen+dlen 4
# [156508] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 01000000 hdw2: efabcd00 
# 
# 156565: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x08c
# 156573: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x08d
# 156581: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x08e
# 156589: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x967a0a2c @Addr = 0x08f
# [156592] INFO:  RC -> EP Packet 21 Data Compare Start! EP MEM SADR : 0000008c EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [156604] EP  Initializing ep_tx_pkt_len_array single index 44 => hlen 3 dlen 0 hlen+dlen 3
# [156612] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [156612] RC  Initializing rc_tx_pkt_len_array single index 2c => hlen 3 dlen 1 hlen+dlen 4
# [156612] RC  Loading RC Tx Mem  index 2c addr 9a hdw0 4a000001 
# [156612] RC  Loading RC Tx Mem  index 2c addr 9b hdw1 4 
# [156612] RC  Loading RC Tx Mem  index 2c addr 9c hdw2 1000000 
# [156612] RC  Loading RC Tx Mem  index 2c addr 9d data 50a900 
# 157045: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x0f2
# 157053: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x0f3
# 157061: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x0f4
# 157069: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0050a900 @Addr = 0x0f5
# [157072] INFO:  EP -> RC Packet 42 Data Compare Start! RC MEM SADR : 000000f2 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 158005: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x0f6
# 158013: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0f7
# 158021: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x0f8
# 158029: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xff2f32fe @Addr = 0x0f9
# [158032] INFO:  EP -> RC Packet 43 Data Compare Start! RC MEM SADR : 000000f6 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 159101: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000001 @Addr = 0x0fa
# 159109: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0fb
# 159117: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x0fc
# [159120] INFO:  EP -> RC Packet 44 Data Compare Start! RC MEM SADR : 000000fa RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [160620] Preparing the IO Packet Header hdw0: 42000001 hdw1: 0100000f hdw2: efabcd0a 
# 
# [160716] EP  Initializing ep_tx_pkt_len_array single index 45 => hlen 3 dlen 1 hlen+dlen 4
# [160724] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [160724] RC  Initializing rc_tx_pkt_len_array single index 2d => hlen 3 dlen 0 hlen+dlen 3
# [160724] RC  Loading RC Tx Mem  index 2d addr 9e hdw0 a000001 
# [160724] RC  Loading RC Tx Mem  index 2d addr 9f hdw1 0 
# [160724] RC  Loading RC Tx Mem  index 2d addr a0 hdw2 1000000 
# [160732] Preparing the IO Packet Header hdw0: 42000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [160836] EP  Initializing ep_tx_pkt_len_array single index 46 => hlen 3 dlen 1 hlen+dlen 4
# [160844] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [160844] RC  Initializing rc_tx_pkt_len_array single index 2e => hlen 3 dlen 0 hlen+dlen 3
# [160844] RC  Loading RC Tx Mem  index 2e addr a1 hdw0 a000001 
# [160844] RC  Loading RC Tx Mem  index 2e addr a2 hdw1 0 
# [160844] RC  Loading RC Tx Mem  index 2e addr a3 hdw2 1000000 
# [160852] Preparing the IO Packet Header hdw0: 02000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [160948] EP  Initializing ep_tx_pkt_len_array single index 47 => hlen 3 dlen 0 hlen+dlen 3
# [160956] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [160956] RC  Initializing rc_tx_pkt_len_array single index 2f => hlen 3 dlen 1 hlen+dlen 4
# [160956] RC  Loading RC Tx Mem  index 2f addr a4 hdw0 4a000001 
# [160956] RC  Loading RC Tx Mem  index 2f addr a5 hdw1 4 
# [160956] RC  Loading RC Tx Mem  index 2f addr a6 hdw2 1000000 
# [160956] RC  Loading RC Tx Mem  index 2f addr a7 data eff308df 
# 161405: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x0fd
# 161413: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x0fe
# 161421: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x0ff
# 161429: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xeff308df @Addr = 0x100
# [161432] INFO:  EP -> RC Packet 45 Data Compare Start! RC MEM SADR : 000000fd RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 162309: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x101
# 162317: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x102
# 162325: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x103
# 162333: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x83792406 @Addr = 0x104
# [162336] INFO:  EP -> RC Packet 46 Data Compare Start! RC MEM SADR : 00000101 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 162541: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x090
# 162549: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x091
# 162557: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x092
# 162565: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x093
# 162573: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x094
# 162581: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x095
# [162584] INFO:  RC -> EP Packet 22 Data Compare Start! EP MEM SADR : 00000090 EP PKTLEN 00000006 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [162584] ERROR:  EP Received Packet 22 Not MATCHED.  
# 
# [162584] INFO:  EP Packet 22 MEM SADR : 00000090 PKTLEN 00000006 
# 
# [162584] EP Packet Length 6 
# 
# [162584] EP Packet Header[0] = 4a000001 
# 
# [162584] EP Packet Header[1] = 4 
# 
# [162584] EP Packet Header[2] = 1000000 
# 
# [162584] EP Packet DATA[0] = a000000 
# 
# [162584] EP Packet DATA[1] = 4 
# 
# [162584] EP Packet DATA[2] = 1000000 
# 
# [164964] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0100000f hdw2: efabcd00 
# 
# [165060] EP  Initializing ep_tx_pkt_len_array single index 48 => hlen 3 dlen 1 hlen+dlen 4
# [165068] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [165172] EP  Initializing ep_tx_pkt_len_array single index 49 => hlen 3 dlen 1 hlen+dlen 4
# [165180] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 01000000 hdw2: efabcd00 
# 
# 165269: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x096
# [165276] EP  Initializing ep_tx_pkt_len_array single index 4a => hlen 3 dlen 0 hlen+dlen 3
# 165277: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x097
# [165284] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [165284] RC  Initializing rc_tx_pkt_len_array single index 30 => hlen 3 dlen 1 hlen+dlen 4
# [165284] RC  Loading RC Tx Mem  index 30 addr a8 hdw0 4a000001 
# [165284] RC  Loading RC Tx Mem  index 30 addr a9 hdw1 4 
# [165284] RC  Loading RC Tx Mem  index 30 addr aa hdw2 1000000 
# [165284] RC  Loading RC Tx Mem  index 30 addr ab data 91afca23 
# 165285: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x098
# [165288] INFO:  RC -> EP Packet 23 Data Compare Start! EP MEM SADR : 00000096 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [165288] ERROR:  EP Received Packet 23 Not MATCHED.  
# 
# [165288] INFO:  EP Packet 23 MEM SADR : 00000096 PKTLEN 00000003 
# 
# [165288] EP Packet Length 3 
# 
# [165288] EP Packet Header[0] = a000000 
# 
# [165288] EP Packet Header[1] = 4 
# 
# [165288] EP Packet Header[2] = 1000000 
# 
# 165885: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x02000001 @Addr = 0x105
# 165893: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x106
# 165901: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x107
# [165904] INFO:  EP -> RC Packet 47 Data Compare Start! RC MEM SADR : 00000105 RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 02000001, Exp = 02000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 166093: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x108
# 166101: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x109
# 166109: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x10a
# 166117: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x91afca23 @Addr = 0x10b
# [166120] INFO:  EP -> RC Packet 48 Data Compare Start! RC MEM SADR : 00000108 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 166677: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x10c
# 166685: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x10d
# 166693: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x10e
# 166701: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x60970dc1 @Addr = 0x10f
# [166704] INFO:  EP -> RC Packet 49 Data Compare Start! RC MEM SADR : 0000010c RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 166773: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x099
# 166781: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x09a
# 166789: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x09b
# 166797: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0xeff308df @Addr = 0x09c
# [166800] INFO:  RC -> EP Packet 24 Data Compare Start! EP MEM SADR : 00000099 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# 167541: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000001 @Addr = 0x110
# 167549: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x111
# 167557: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x112
# [167560] INFO:  EP -> RC Packet 4a Data Compare Start! RC MEM SADR : 00000110 RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [169292] Preparing the IO Packet Header hdw0: 42000001 hdw1: 0100000f hdw2: efabcd0a 
# 
# [169388] EP  Initializing ep_tx_pkt_len_array single index 4b => hlen 3 dlen 1 hlen+dlen 4
# [169396] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [169396] RC  Initializing rc_tx_pkt_len_array single index 31 => hlen 3 dlen 0 hlen+dlen 3
# [169396] RC  Loading RC Tx Mem  index 31 addr ac hdw0 a000001 
# [169396] RC  Loading RC Tx Mem  index 31 addr ad hdw1 0 
# [169396] RC  Loading RC Tx Mem  index 31 addr ae hdw2 1000000 
# [169404] Preparing the IO Packet Header hdw0: 42000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [169508] EP  Initializing ep_tx_pkt_len_array single index 4c => hlen 3 dlen 1 hlen+dlen 4
# [169516] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [169516] RC  Initializing rc_tx_pkt_len_array single index 32 => hlen 3 dlen 0 hlen+dlen 3
# [169516] RC  Loading RC Tx Mem  index 32 addr af hdw0 a000001 
# [169516] RC  Loading RC Tx Mem  index 32 addr b0 hdw1 0 
# [169516] RC  Loading RC Tx Mem  index 32 addr b1 hdw2 1000000 
# [169524] Preparing the IO Packet Header hdw0: 02000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [169620] EP  Initializing ep_tx_pkt_len_array single index 4d => hlen 3 dlen 0 hlen+dlen 3
# [169628] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [169628] RC  Initializing rc_tx_pkt_len_array single index 33 => hlen 3 dlen 1 hlen+dlen 4
# [169628] RC  Loading RC Tx Mem  index 33 addr b2 hdw0 4a000001 
# [169628] RC  Loading RC Tx Mem  index 33 addr b3 hdw1 4 
# [169628] RC  Loading RC Tx Mem  index 33 addr b4 hdw2 1000000 
# [169628] RC  Loading RC Tx Mem  index 33 addr b5 data fa37d1f 
# 170197: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x113
# 170205: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x114
# 170213: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x115
# 170221: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0fa37d1f @Addr = 0x116
# [170224] INFO:  EP -> RC Packet 4b Data Compare Start! RC MEM SADR : 00000113 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 171045: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x117
# 171053: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x118
# 171061: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x119
# 171069: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x4dfa219b @Addr = 0x11a
# [171072] INFO:  EP -> RC Packet 4c Data Compare Start! RC MEM SADR : 00000117 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 171085: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x09d
# 171093: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x09e
# 171101: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x09f
# 171109: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x0a0
# 171117: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x0a1
# 171125: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0a2
# [171128] INFO:  RC -> EP Packet 25 Data Compare Start! EP MEM SADR : 0000009d EP PKTLEN 00000006 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [171128] ERROR:  EP Received Packet 25 Not MATCHED.  
# 
# [171128] INFO:  EP Packet 25 MEM SADR : 0000009d PKTLEN 00000006 
# 
# [171128] EP Packet Length 6 
# 
# [171128] EP Packet Header[0] = 4a000001 
# 
# [171128] EP Packet Header[1] = 4 
# 
# [171128] EP Packet Header[2] = 1000000 
# 
# [171128] EP Packet DATA[0] = a000000 
# 
# [171128] EP Packet DATA[1] = 4 
# 
# [171128] EP Packet DATA[2] = 1000000 
# 
# 171885: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x0a3
# 171893: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x0a4
# 171901: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0a5
# [171904] INFO:  RC -> EP Packet 26 Data Compare Start! EP MEM SADR : 000000a3 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [171904] ERROR:  EP Received Packet 26 Not MATCHED.  
# 
# [171904] INFO:  EP Packet 26 MEM SADR : 000000a3 PKTLEN 00000003 
# 
# [171904] EP Packet Length 3 
# 
# [171904] EP Packet Header[0] = a000000 
# 
# [171904] EP Packet Header[1] = 4 
# 
# [171904] EP Packet Header[2] = 1000000 
# 
# 171909: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x02000001 @Addr = 0x11b
# 171917: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x11c
# 171925: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x11d
# [171928] INFO:  EP -> RC Packet 4d Data Compare Start! RC MEM SADR : 0000011b RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 02000001, Exp = 02000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 172901: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x0a6
# 172909: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x0a7
# 172917: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0a8
# 172925: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0fa37d1f @Addr = 0x0a9
# [172928] INFO:  RC -> EP Packet 27 Data Compare Start! EP MEM SADR : 000000a6 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [173636] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0100000f hdw2: efabcd00 
# 
# [173732] EP  Initializing ep_tx_pkt_len_array single index 4e => hlen 3 dlen 1 hlen+dlen 4
# [173740] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [173844] EP  Initializing ep_tx_pkt_len_array single index 4f => hlen 3 dlen 1 hlen+dlen 4
# [173852] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [173948] EP  Initializing ep_tx_pkt_len_array single index 50 => hlen 3 dlen 0 hlen+dlen 3
# [173956] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [173956] RC  Initializing rc_tx_pkt_len_array single index 34 => hlen 3 dlen 1 hlen+dlen 4
# [173956] RC  Loading RC Tx Mem  index 34 addr b6 hdw0 4a000001 
# [173956] RC  Loading RC Tx Mem  index 34 addr b7 hdw1 4 
# [173956] RC  Loading RC Tx Mem  index 34 addr b8 hdw2 1000000 
# [173956] RC  Loading RC Tx Mem  index 34 addr b9 data 44ad7389 
# 174509: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x11e
# 174517: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x11f
# 174525: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x120
# 174533: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x44ad7389 @Addr = 0x121
# [174536] INFO:  EP -> RC Packet 4e Data Compare Start! RC MEM SADR : 0000011e RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 175413: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x122
# 175421: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x123
# 175429: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x124
# 175437: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x3f6cf57e @Addr = 0x125
# [175440] INFO:  EP -> RC Packet 4f Data Compare Start! RC MEM SADR : 00000122 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 176277: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000001 @Addr = 0x126
# 176285: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x127
# 176293: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x128
# [176296] INFO:  EP -> RC Packet 50 Data Compare Start! RC MEM SADR : 00000126 RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [177964] Preparing the IO Packet Header hdw0: 42000001 hdw1: 0100000f hdw2: efabcd0a 
# 
# [178060] EP  Initializing ep_tx_pkt_len_array single index 51 => hlen 3 dlen 1 hlen+dlen 4
# [178068] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [178068] RC  Initializing rc_tx_pkt_len_array single index 35 => hlen 3 dlen 0 hlen+dlen 3
# [178068] RC  Loading RC Tx Mem  index 35 addr ba hdw0 a000001 
# [178068] RC  Loading RC Tx Mem  index 35 addr bb hdw1 0 
# [178068] RC  Loading RC Tx Mem  index 35 addr bc hdw2 1000000 
# [178076] Preparing the IO Packet Header hdw0: 42000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [178180] EP  Initializing ep_tx_pkt_len_array single index 52 => hlen 3 dlen 1 hlen+dlen 4
# [178188] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [178188] RC  Initializing rc_tx_pkt_len_array single index 36 => hlen 3 dlen 0 hlen+dlen 3
# [178188] RC  Loading RC Tx Mem  index 36 addr bd hdw0 a000001 
# [178188] RC  Loading RC Tx Mem  index 36 addr be hdw1 0 
# [178188] RC  Loading RC Tx Mem  index 36 addr bf hdw2 1000000 
# [178196] Preparing the IO Packet Header hdw0: 02000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [178292] EP  Initializing ep_tx_pkt_len_array single index 53 => hlen 3 dlen 0 hlen+dlen 3
# [178300] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [178300] RC  Initializing rc_tx_pkt_len_array single index 37 => hlen 3 dlen 1 hlen+dlen 4
# [178300] RC  Loading RC Tx Mem  index 37 addr c0 hdw0 4a000001 
# [178300] RC  Loading RC Tx Mem  index 37 addr c1 hdw1 4 
# [178300] RC  Loading RC Tx Mem  index 37 addr c2 hdw2 1000000 
# [178300] RC  Loading RC Tx Mem  index 37 addr c3 data 44e7b389 
# 178877: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x129
# 178885: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x12a
# 178893: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x12b
# 178901: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x44e7b389 @Addr = 0x12c
# [178904] INFO:  EP -> RC Packet 51 Data Compare Start! RC MEM SADR : 00000129 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 179781: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x12d
# 179789: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x12e
# 179797: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x12f
# 179805: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xa371d246 @Addr = 0x130
# [179808] INFO:  EP -> RC Packet 52 Data Compare Start! RC MEM SADR : 0000012d RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 180461: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x0aa
# 180469: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x0ab
# 180477: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0ac
# 180485: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x0ad
# 180493: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x0ae
# 180501: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0af
# [180504] INFO:  RC -> EP Packet 28 Data Compare Start! EP MEM SADR : 000000aa EP PKTLEN 00000006 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [180504] ERROR:  EP Received Packet 28 Not MATCHED.  
# 
# [180504] INFO:  EP Packet 28 MEM SADR : 000000aa PKTLEN 00000006 
# 
# [180504] EP Packet Length 6 
# 
# [180504] EP Packet Header[0] = 4a000001 
# 
# [180504] EP Packet Header[1] = 4 
# 
# [180504] EP Packet Header[2] = 1000000 
# 
# [180504] EP Packet DATA[0] = a000000 
# 
# [180504] EP Packet DATA[1] = 4 
# 
# [180504] EP Packet DATA[2] = 1000000 
# 
# 180645: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x02000001 @Addr = 0x131
# 180653: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x132
# 180661: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x133
# [180664] INFO:  EP -> RC Packet 53 Data Compare Start! RC MEM SADR : 00000131 RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 02000001, Exp = 02000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 181261: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x0b0
# 181269: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x0b1
# 181277: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0b2
# [181280] INFO:  RC -> EP Packet 29 Data Compare Start! EP MEM SADR : 000000b0 EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [181280] ERROR:  EP Received Packet 29 Not MATCHED.  
# 
# [181280] INFO:  EP Packet 29 MEM SADR : 000000b0 PKTLEN 00000003 
# 
# [181280] EP Packet Length 3 
# 
# [181280] EP Packet Header[0] = a000000 
# 
# [181280] EP Packet Header[1] = 4 
# 
# [181280] EP Packet Header[2] = 1000000 
# 
# 182237: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x0b3
# 182245: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x0b4
# 182253: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0b5
# 182261: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x44e7b389 @Addr = 0x0b6
# [182264] INFO:  RC -> EP Packet 2a Data Compare Start! EP MEM SADR : 000000b3 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [182308] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0100000f hdw2: efabcd00 
# 
# [182404] EP  Initializing ep_tx_pkt_len_array single index 54 => hlen 3 dlen 1 hlen+dlen 4
# [182412] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [182516] EP  Initializing ep_tx_pkt_len_array single index 55 => hlen 3 dlen 1 hlen+dlen 4
# [182524] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [182620] EP  Initializing ep_tx_pkt_len_array single index 56 => hlen 3 dlen 0 hlen+dlen 3
# [182628] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [182628] RC  Initializing rc_tx_pkt_len_array single index 38 => hlen 3 dlen 1 hlen+dlen 4
# [182628] RC  Loading RC Tx Mem  index 38 addr c4 hdw0 4a000001 
# [182628] RC  Loading RC Tx Mem  index 38 addr c5 hdw1 4 
# [182628] RC  Loading RC Tx Mem  index 38 addr c6 hdw2 1000000 
# [182628] RC  Loading RC Tx Mem  index 38 addr c7 data 7a19cdf4 
# 183245: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x134
# 183253: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x135
# 183261: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x136
# 183269: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x7a19cdf4 @Addr = 0x137
# [183272] INFO:  EP -> RC Packet 54 Data Compare Start! RC MEM SADR : 00000134 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 184165: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x138
# 184173: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x139
# 184181: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x13a
# 184189: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xe0a024c1 @Addr = 0x13b
# [184192] INFO:  EP -> RC Packet 55 Data Compare Start! RC MEM SADR : 00000138 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 185013: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000001 @Addr = 0x13c
# 185021: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x13d
# 185029: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x13e
# [185032] INFO:  EP -> RC Packet 56 Data Compare Start! RC MEM SADR : 0000013c RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [186636] Preparing the IO Packet Header hdw0: 42000001 hdw1: 0100000f hdw2: efabcd0a 
# 
# [186732] EP  Initializing ep_tx_pkt_len_array single index 57 => hlen 3 dlen 1 hlen+dlen 4
# [186740] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [186740] RC  Initializing rc_tx_pkt_len_array single index 39 => hlen 3 dlen 0 hlen+dlen 3
# [186740] RC  Loading RC Tx Mem  index 39 addr c8 hdw0 a000001 
# [186740] RC  Loading RC Tx Mem  index 39 addr c9 hdw1 0 
# [186740] RC  Loading RC Tx Mem  index 39 addr ca hdw2 1000000 
# [186748] Preparing the IO Packet Header hdw0: 42000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [186852] EP  Initializing ep_tx_pkt_len_array single index 58 => hlen 3 dlen 1 hlen+dlen 4
# [186860] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [186860] RC  Initializing rc_tx_pkt_len_array single index 3a => hlen 3 dlen 0 hlen+dlen 3
# [186860] RC  Loading RC Tx Mem  index 3a addr cb hdw0 a000001 
# [186860] RC  Loading RC Tx Mem  index 3a addr cc hdw1 0 
# [186860] RC  Loading RC Tx Mem  index 3a addr cd hdw2 1000000 
# [186868] Preparing the IO Packet Header hdw0: 02000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [186964] EP  Initializing ep_tx_pkt_len_array single index 59 => hlen 3 dlen 0 hlen+dlen 3
# [186972] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [186972] RC  Initializing rc_tx_pkt_len_array single index 3b => hlen 3 dlen 1 hlen+dlen 4
# [186972] RC  Loading RC Tx Mem  index 3b addr ce hdw0 4a000001 
# [186972] RC  Loading RC Tx Mem  index 3b addr cf hdw1 4 
# [186972] RC  Loading RC Tx Mem  index 3b addr d0 hdw2 1000000 
# [186972] RC  Loading RC Tx Mem  index 3b addr d1 data 255eb94a 
# 187613: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x13f
# 187621: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x140
# 187629: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x141
# 187637: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x255eb94a @Addr = 0x142
# [187640] INFO:  EP -> RC Packet 57 Data Compare Start! RC MEM SADR : 0000013f RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 189749: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x143
# 189757: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x144
# 189765: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x145
# 189773: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x73d8d3e7 @Addr = 0x146
# [189776] INFO:  EP -> RC Packet 58 Data Compare Start! RC MEM SADR : 00000143 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 189925: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x02000001 @Addr = 0x147
# 189933: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x148
# 189941: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x149
# [189944] INFO:  EP -> RC Packet 59 Data Compare Start! RC MEM SADR : 00000147 RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 02000001, Exp = 02000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 190293: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x0b7
# 190301: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x0b8
# 190309: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0b9
# 190317: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x0ba
# 190325: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x0bb
# 190333: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0bc
# [190336] INFO:  RC -> EP Packet 2b Data Compare Start! EP MEM SADR : 000000b7 EP PKTLEN 00000006 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [190336] ERROR:  EP Received Packet 2b Not MATCHED.  
# 
# [190336] INFO:  EP Packet 2b MEM SADR : 000000b7 PKTLEN 00000006 
# 
# [190336] EP Packet Length 6 
# 
# [190336] EP Packet Header[0] = 4a000001 
# 
# [190336] EP Packet Header[1] = 4 
# 
# [190336] EP Packet Header[2] = 1000000 
# 
# [190336] EP Packet DATA[0] = a000000 
# 
# [190336] EP Packet DATA[1] = 4 
# 
# [190336] EP Packet DATA[2] = 1000000 
# 
# 190637: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x0bd
# 190645: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x0be
# 190653: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0bf
# [190656] INFO:  RC -> EP Packet 2c Data Compare Start! EP MEM SADR : 000000bd EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [190656] ERROR:  EP Received Packet 2c Not MATCHED.  
# 
# [190656] INFO:  EP Packet 2c MEM SADR : 000000bd PKTLEN 00000003 
# 
# [190656] EP Packet Length 3 
# 
# [190656] EP Packet Header[0] = a000000 
# 
# [190656] EP Packet Header[1] = 4 
# 
# [190656] EP Packet Header[2] = 1000000 
# 
# [190980] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 0100000f hdw2: efabcd00 
# 
# [191076] EP  Initializing ep_tx_pkt_len_array single index 5a => hlen 3 dlen 1 hlen+dlen 4
# [191084] Preparing the 32 bit MEM Packet Header hdw0: 40000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [191188] EP  Initializing ep_tx_pkt_len_array single index 5b => hlen 3 dlen 1 hlen+dlen 4
# [191196] Preparing the 32 bit MEM Packet Header hdw0: 00000001  hdw1: 01000000 hdw2: efabcd00 
# 
# [191292] EP  Initializing ep_tx_pkt_len_array single index 5c => hlen 3 dlen 0 hlen+dlen 3
# [191300] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [191300] RC  Initializing rc_tx_pkt_len_array single index 3c => hlen 3 dlen 1 hlen+dlen 4
# [191300] RC  Loading RC Tx Mem  index 3c addr d2 hdw0 4a000001 
# [191300] RC  Loading RC Tx Mem  index 3c addr d3 hdw1 4 
# [191300] RC  Loading RC Tx Mem  index 3c addr d4 hdw2 1000000 
# [191300] RC  Loading RC Tx Mem  index 3c addr d5 data 97f5c22f 
# 191573: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x0c0
# 191581: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x0c1
# 191589: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0c2
# 191597: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x255eb94a @Addr = 0x0c3
# [191600] INFO:  RC -> EP Packet 2d Data Compare Start! EP MEM SADR : 000000c0 EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# 192029: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x14a
# 192037: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x14b
# 192045: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x14c
# 192053: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x97f5c22f @Addr = 0x14d
# [192056] INFO:  EP -> RC Packet 5a Data Compare Start! RC MEM SADR : 0000014a RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 192885: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x40000001 @Addr = 0x14e
# 192893: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x14f
# 192901: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x150
# 192909: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xeae99cd5 @Addr = 0x151
# [192912] INFO:  EP -> RC Packet 5b Data Compare Start! RC MEM SADR : 0000014e RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 40000001, Exp = 40000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd00, Exp = efabcd00
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 193749: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x00000001 @Addr = 0x152
# 193757: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x153
# 193765: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd00 @Addr = 0x154
# [193768] INFO:  EP -> RC Packet 5c Data Compare Start! RC MEM SADR : 00000152 RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 00000001, Exp = 00000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# [195308] Preparing the IO Packet Header hdw0: 42000001 hdw1: 0100000f hdw2: efabcd0a 
# 
# [195404] EP  Initializing ep_tx_pkt_len_array single index 5d => hlen 3 dlen 1 hlen+dlen 4
# [195412] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [195412] RC  Initializing rc_tx_pkt_len_array single index 3d => hlen 3 dlen 0 hlen+dlen 3
# [195412] RC  Loading RC Tx Mem  index 3d addr d6 hdw0 a000001 
# [195412] RC  Loading RC Tx Mem  index 3d addr d7 hdw1 0 
# [195412] RC  Loading RC Tx Mem  index 3d addr d8 hdw2 1000000 
# [195420] Preparing the IO Packet Header hdw0: 42000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [195524] EP  Initializing ep_tx_pkt_len_array single index 5e => hlen 3 dlen 1 hlen+dlen 4
# [195532] Preparing the CPL  Packet Header hdw0: 0a000001 hdw1: 00000000 hdw2: 01000000 
# 
# [195532] RC  Initializing rc_tx_pkt_len_array single index 3e => hlen 3 dlen 0 hlen+dlen 3
# [195532] RC  Loading RC Tx Mem  index 3e addr d9 hdw0 a000001 
# [195532] RC  Loading RC Tx Mem  index 3e addr da hdw1 0 
# [195532] RC  Loading RC Tx Mem  index 3e addr db hdw2 1000000 
# [195540] Preparing the IO Packet Header hdw0: 02000001 hdw1: 01000000 hdw2: efabcd0a 
# 
# [195636] EP  Initializing ep_tx_pkt_len_array single index 5f => hlen 3 dlen 0 hlen+dlen 3
# [195644] Preparing the CPL  Packet Header hdw0: 4a000001 hdw1: 00000004 hdw2: 01000000 
# 
# [195644] RC  Initializing rc_tx_pkt_len_array single index 3f => hlen 3 dlen 1 hlen+dlen 4
# [195644] RC  Loading RC Tx Mem  index 3f addr dc hdw0 4a000001 
# [195644] RC  Loading RC Tx Mem  index 3f addr dd hdw1 4 
# [195644] RC  Loading RC Tx Mem  index 3f addr de hdw2 1000000 
# [195644] RC  Loading RC Tx Mem  index 3f addr df data 93f65a27 
# 196349: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x155
# 196357: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x0100000f @Addr = 0x156
# 196365: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x157
# 196373: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x93f65a27 @Addr = 0x158
# [196376] INFO:  EP -> RC Packet 5d Data Compare Start! RC MEM SADR : 00000155 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 0100000f, Exp = 0100000f
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 197253: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x42000001 @Addr = 0x159
# 197261: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x15a
# 197269: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x15b
# 197277: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x56f77fad @Addr = 0x15c
# [197280] INFO:  EP -> RC Packet 5e Data Compare Start! RC MEM SADR : 00000159 RC PKTLEN 00000004 
# 
# PKT_DIFF (RC) : HdrLen = 3
# PKT_DIFF (RC) : Hdr[0] => Rx = 42000001, Exp = 42000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 197549: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x0c4
# 197557: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x0c5
# 197565: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0c6
# 197573: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x0c7
# 197581: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x0c8
# 197589: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0c9
# [197592] INFO:  RC -> EP Packet 2e Data Compare Start! EP MEM SADR : 000000c4 EP PKTLEN 00000006 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 6, Tx = 4
# PKT_DIFF (EP) :     ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [197592] ERROR:  EP Received Packet 2e Not MATCHED.  
# 
# [197592] INFO:  EP Packet 2e MEM SADR : 000000c4 PKTLEN 00000006 
# 
# [197592] EP Packet Length 6 
# 
# [197592] EP Packet Header[0] = 4a000001 
# 
# [197592] EP Packet Header[1] = 4 
# 
# [197592] EP Packet Header[2] = 1000000 
# 
# [197592] EP Packet DATA[0] = a000000 
# 
# [197592] EP Packet DATA[1] = 4 
# 
# [197592] EP Packet DATA[2] = 1000000 
# 
# 198117: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x02000001 @Addr = 0x15d
# 198125: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0x01000000 @Addr = 0x15e
# 198133: pex_tb.PEX_RC.rc_rx_cmd_mem MemWr 0xefabcd0a @Addr = 0x15f
# [198136] INFO:  EP -> RC Packet 5f Data Compare Start! RC MEM SADR : 0000015d RC PKTLEN 00000003 
# 
# PKT_DIFF (RC) : HdrLen = 4
# PKT_DIFF (RC) : Hdr[0] => Rx = 02000001, Exp = 02000001
# PKT_DIFF (RC) : Hdr[1] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (RC) : Hdr[2] => Rx = efabcd0a, Exp = efabcd0a
# PKT_DIFF (RC) : Header Matched
# PKT_DIFF (RC) : PktLen => Rx = 3, Tx = 3
# PKT_DIFF (RC) : Matched = 1, Passed = 0
# 198365: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x0a000000 @Addr = 0x0ca
# 198373: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x0cb
# 198381: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0cc
# [198384] INFO:  RC -> EP Packet 2f Data Compare Start! EP MEM SADR : 000000ca EP PKTLEN 00000003 
# 
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 4
# PKT_DIFF (EP) : Hdr[0] => Rx = 0a000000, Exp = 4a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Hdr[2] => Rx = 01000000, Exp = 01000000
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# [198384] ERROR:  EP Received Packet 2f Not MATCHED.  
# 
# [198384] INFO:  EP Packet 2f MEM SADR : 000000ca PKTLEN 00000003 
# 
# [198384] EP Packet Length 3 
# 
# [198384] EP Packet Header[0] = a000000 
# 
# [198384] EP Packet Header[1] = 4 
# 
# [198384] EP Packet Header[2] = 1000000 
# 
# 199285: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x4a000001 @Addr = 0x0cd
# 199293: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x00000004 @Addr = 0x0ce
# 199301: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x01000000 @Addr = 0x0cf
# 199309: pex_tb.PEX_EP_0.ep_rx_cmd_mem MemWr 0x93f65a27 @Addr = 0x0d0
# [199312] INFO:  RC -> EP Packet 30 Data Compare Start! EP MEM SADR : 000000cd EP PKTLEN 00000004 
# 
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 0a000001
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000000
# PKT_DIFF (EP) :                   ^^^^^^^^^^^^
# PKT_DIFF (EP) : Matched = 0, Passed = 0
# PKT_DIFF (EP) : HdrLen = 3
# PKT_DIFF (EP) : Hdr[0] => Rx = 4a000001, Exp = 4a000001
# PKT_DIFF (EP) : Hdr[1] => Rx = 00000004, Exp = 00000004
# PKT_DIFF (EP) : Header Matched
# PKT_DIFF (EP) : PktLen => Rx = 4, Tx = 4
# PKT_DIFF (EP) : Matched = 1, Passed = 0
# [231652] Pkt Count Mismatch RC Transmitted = 0x40  EP Received = 0x31  
# 
# Checking for Left over packets in TX array 
# 
ERROR:  RC PKT 1 NOT MATCHED 
# 
# INFO:  RC PKT saddr 4 pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 2 NOT MATCHED 
# 
# INFO:  RC PKT saddr 7 pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 5 NOT MATCHED 
# 
# INFO:  RC PKT saddr 12 pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 6 NOT MATCHED 
# 
# INFO:  RC PKT saddr 15 pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 9 NOT MATCHED 
# 
# INFO:  RC PKT saddr 20 pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT a NOT MATCHED 
# 
# INFO:  RC PKT saddr 23 pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT d NOT MATCHED 
# 
# INFO:  RC PKT saddr 2e pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT e NOT MATCHED 
# 
# INFO:  RC PKT saddr 31 pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 11 NOT MATCHED 
# 
# INFO:  RC PKT saddr 3c pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 12 NOT MATCHED 
# 
# INFO:  RC PKT saddr 3f pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 15 NOT MATCHED 
# 
# INFO:  RC PKT saddr 4a pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 16 NOT MATCHED 
# 
# INFO:  RC PKT saddr 4d pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 19 NOT MATCHED 
# 
# INFO:  RC PKT saddr 58 pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 1a NOT MATCHED 
# 
# INFO:  RC PKT saddr 5b pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 1d NOT MATCHED 
# 
# INFO:  RC PKT saddr 66 pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 1e NOT MATCHED 
# 
# INFO:  RC PKT saddr 69 pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 21 NOT MATCHED 
# 
# INFO:  RC PKT saddr 74 pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 22 NOT MATCHED 
# 
# INFO:  RC PKT saddr 77 pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 23 NOT MATCHED 
# 
# INFO:  RC PKT saddr 7a pkt_len 4 
# 
# [231652] RC Packet Length 4 
# 
# [231652] RC Packet Header[0] = 4a000001 
# 
# [231652] RC Packet Header[1] = 4 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
# [231652] RC Packet DATA[0] = 3503056a 
# 
ERROR:  RC PKT 24 NOT MATCHED 
# 
# INFO:  RC PKT saddr 7e pkt_len 4 
# 
# [231652] RC Packet Length 4 
# 
# [231652] RC Packet Header[0] = 4a000001 
# 
# [231652] RC Packet Header[1] = 4 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
# [231652] RC Packet DATA[0] = 8cd8fe19 
# 
ERROR:  RC PKT 25 NOT MATCHED 
# 
# INFO:  RC PKT saddr 82 pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 26 NOT MATCHED 
# 
# INFO:  RC PKT saddr 85 pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 27 NOT MATCHED 
# 
# INFO:  RC PKT saddr 88 pkt_len 4 
# 
# [231652] RC Packet Length 4 
# 
# [231652] RC Packet Header[0] = 4a000001 
# 
# [231652] RC Packet Header[1] = 4 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
# [231652] RC Packet DATA[0] = b5d2f86b 
# 
ERROR:  RC PKT 28 NOT MATCHED 
# 
# INFO:  RC PKT saddr 8c pkt_len 4 
# 
# [231652] RC Packet Length 4 
# 
# [231652] RC Packet Header[0] = 4a000001 
# 
# [231652] RC Packet Header[1] = 4 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
# [231652] RC Packet DATA[0] = 3cc49d79 
# 
ERROR:  RC PKT 29 NOT MATCHED 
# 
# INFO:  RC PKT saddr 90 pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 2a NOT MATCHED 
# 
# INFO:  RC PKT saddr 93 pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 2b NOT MATCHED 
# 
# INFO:  RC PKT saddr 96 pkt_len 4 
# 
# [231652] RC Packet Length 4 
# 
# [231652] RC Packet Header[0] = 4a000001 
# 
# [231652] RC Packet Header[1] = 4 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
# [231652] RC Packet DATA[0] = 967a0a2c 
# 
ERROR:  RC PKT 2c NOT MATCHED 
# 
# INFO:  RC PKT saddr 9a pkt_len 4 
# 
# [231652] RC Packet Length 4 
# 
# [231652] RC Packet Header[0] = 4a000001 
# 
# [231652] RC Packet Header[1] = 4 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
# [231652] RC Packet DATA[0] = 50a900 
# 
ERROR:  RC PKT 2d NOT MATCHED 
# 
# INFO:  RC PKT saddr 9e pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 2e NOT MATCHED 
# 
# INFO:  RC PKT saddr a1 pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 2f NOT MATCHED 
# 
# INFO:  RC PKT saddr a4 pkt_len 4 
# 
# [231652] RC Packet Length 4 
# 
# [231652] RC Packet Header[0] = 4a000001 
# 
# [231652] RC Packet Header[1] = 4 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
# [231652] RC Packet DATA[0] = eff308df 
# 
ERROR:  RC PKT 30 NOT MATCHED 
# 
# INFO:  RC PKT saddr a8 pkt_len 4 
# 
# [231652] RC Packet Length 4 
# 
# [231652] RC Packet Header[0] = 4a000001 
# 
# [231652] RC Packet Header[1] = 4 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
# [231652] RC Packet DATA[0] = 91afca23 
# 
ERROR:  RC PKT 31 NOT MATCHED 
# 
# INFO:  RC PKT saddr ac pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 32 NOT MATCHED 
# 
# INFO:  RC PKT saddr af pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 33 NOT MATCHED 
# 
# INFO:  RC PKT saddr b2 pkt_len 4 
# 
# [231652] RC Packet Length 4 
# 
# [231652] RC Packet Header[0] = 4a000001 
# 
# [231652] RC Packet Header[1] = 4 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
# [231652] RC Packet DATA[0] = fa37d1f 
# 
ERROR:  RC PKT 34 NOT MATCHED 
# 
# INFO:  RC PKT saddr b6 pkt_len 4 
# 
# [231652] RC Packet Length 4 
# 
# [231652] RC Packet Header[0] = 4a000001 
# 
# [231652] RC Packet Header[1] = 4 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
# [231652] RC Packet DATA[0] = 44ad7389 
# 
ERROR:  RC PKT 35 NOT MATCHED 
# 
# INFO:  RC PKT saddr ba pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 36 NOT MATCHED 
# 
# INFO:  RC PKT saddr bd pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 37 NOT MATCHED 
# 
# INFO:  RC PKT saddr c0 pkt_len 4 
# 
# [231652] RC Packet Length 4 
# 
# [231652] RC Packet Header[0] = 4a000001 
# 
# [231652] RC Packet Header[1] = 4 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
# [231652] RC Packet DATA[0] = 44e7b389 
# 
ERROR:  RC PKT 38 NOT MATCHED 
# 
# INFO:  RC PKT saddr c4 pkt_len 4 
# 
# [231652] RC Packet Length 4 
# 
# [231652] RC Packet Header[0] = 4a000001 
# 
# [231652] RC Packet Header[1] = 4 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
# [231652] RC Packet DATA[0] = 7a19cdf4 
# 
ERROR:  RC PKT 39 NOT MATCHED 
# 
# INFO:  RC PKT saddr c8 pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 3a NOT MATCHED 
# 
# INFO:  RC PKT saddr cb pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 3b NOT MATCHED 
# 
# INFO:  RC PKT saddr ce pkt_len 4 
# 
# [231652] RC Packet Length 4 
# 
# [231652] RC Packet Header[0] = 4a000001 
# 
# [231652] RC Packet Header[1] = 4 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
# [231652] RC Packet DATA[0] = 255eb94a 
# 
ERROR:  RC PKT 3c NOT MATCHED 
# 
# INFO:  RC PKT saddr d2 pkt_len 4 
# 
# [231652] RC Packet Length 4 
# 
# [231652] RC Packet Header[0] = 4a000001 
# 
# [231652] RC Packet Header[1] = 4 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
# [231652] RC Packet DATA[0] = 97f5c22f 
# 
ERROR:  RC PKT 3d NOT MATCHED 
# 
# INFO:  RC PKT saddr d6 pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 3e NOT MATCHED 
# 
# INFO:  RC PKT saddr d9 pkt_len 3 
# 
# [231652] RC Packet Length 3 
# 
# [231652] RC Packet Header[0] = a000001 
# 
# [231652] RC Packet Header[1] = 0 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
ERROR:  RC PKT 3f NOT MATCHED 
# 
# INFO:  RC PKT saddr dc pkt_len 4 
# 
# [231652] RC Packet Length 4 
# 
# [231652] RC Packet Header[0] = 4a000001 
# 
# [231652] RC Packet Header[1] = 4 
# 
# [231652] RC Packet Header[2] = 1000000 
# 
# [231652] RC Packet DATA[0] = 93f65a27 
# 
# [231652] TEST FAILED 
# 
# [271652] Simulation DONE
# 
# ** Note: $finish    : ./../tb/pex_tb.v(315)
#    Time: 273252 ns  Iteration: 0  Instance: /pex_tb
